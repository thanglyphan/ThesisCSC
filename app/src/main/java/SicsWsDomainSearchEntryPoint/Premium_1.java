package SicsWsDomainSearchEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

public class Premium_1 extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
	/**
	* XXXXXX
	*                      Currency
	*/
    public SicsCurrencyReference currency;
    
	/**
	* Used by the "update" Condition Web Service: set to "true" if this component of the condition should be removed.
	*/
    public Boolean isToBeDeleted;
    
	/**
	* SubclassNumber: 542.   CODE: TOTAL_SUM |  UNKNOWN
	*                      XXXXXX
	*/
    public SicsReferenceDataReference refConditionPer;
    
	/**
	* isOriginal will determine if the limits should be added to the original tab
	*                      XXXXXX
	*/
    public Boolean isOriginal=false;
    
	/**
	* Can not be used for treaty businss. For treaty business use elemen periodAmount instead.
	*                         Annual 100%
	*/
    public BigDecimal annualAmount;
    
	/**
	* Can be used both for treaty and fac business.
	*                         Period 100%
	*/
    public BigDecimal periodAmount;
    
    public BigDecimal currentInsuredPeriodAmount;
    
    public BigDecimal historicEffectivePeriodAmount;
    
	/**
	* XXXXXX
	*                      XXXXXX
	*/
    public String comment;
    
	/**
	* SubclassNumber: 1001.   CODE: MAX_PREM | GROSS_PREM | NET_PREM |  ORI_PREM | REV_EPI | EPI |  N_C_PREM | PR_BASIS NET_EPI |  MAX_RATE | O_PREM |  ADD_PREM | PREM_PU | MIN_RATE |  PROV_RATE |  SUNRISEPREMIUM | IHAPREMIUM | MAIN_L | TSI | SI_ADD_AMT.  (1) Treaty, Non-Prop Sliding Rate, else (2)
	*                      Estimated Premium Income (1)/Premium Base On (2)
	*/
    public SicsReferenceDataReference refOptionalField;
    
	/**
	* XXXXXX
	*                      Is Sum
	*/
    public Boolean isSum;
    
	/**
	* XXXXXX
	*                      Sum Up
	*/
    public Boolean isAdded;
    
	/**
	* Only for PF_PROP - refOptionalField: ADD_PREM | PR_BASIS | IHAPREMIUM | O_PREM | MAIN_L | TSI | SI_ADD_AMT
	*                      Base Amount
	*/
    public BigDecimal baseAmount;
    
	/**
	* XXXXXX
	*                      Factor %
	*/
    public Integer factor;
    
	/**
	* XXXXXX
	*                      Rate
	*/
    public SicsRateReference rate;

    public Premium_1 ()
    {
    }

    public Premium_1 (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("currency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isToBeDeleted"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isToBeDeleted = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isToBeDeleted = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("refConditionPer"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.refConditionPer = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isOriginal"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isOriginal = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isOriginal = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("annualAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.annualAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.annualAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("periodAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.periodAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.periodAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("currentInsuredPeriodAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.currentInsuredPeriodAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.currentInsuredPeriodAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("historicEffectivePeriodAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.historicEffectivePeriodAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.historicEffectivePeriodAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("comment"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.comment = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.comment = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("refOptionalField"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.refOptionalField = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isSum"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isSum = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isSum = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAdded"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAdded = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAdded = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("baseAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.baseAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.baseAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("factor"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.factor = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.factor = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("rate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.rate = (SicsRateReference)__envelope.get(j,SicsRateReference.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.currency!=null?this.currency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.isToBeDeleted!=null?this.isToBeDeleted:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return refConditionPer;
        }
        if(propertyIndex==count+3)
        {
            return isOriginal;
        }
        if(propertyIndex==count+4)
        {
            return this.annualAmount!=null?this.annualAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.periodAmount!=null?this.periodAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.currentInsuredPeriodAmount!=null?this.currentInsuredPeriodAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.historicEffectivePeriodAmount!=null?this.historicEffectivePeriodAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.comment!=null?this.comment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return refOptionalField;
        }
        if(propertyIndex==count+10)
        {
            return this.isSum!=null?this.isSum:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.isAdded!=null?this.isAdded:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.baseAmount!=null?this.baseAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.factor!=null?this.factor:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.rate!=null?this.rate:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+15;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "currency";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isToBeDeleted";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "refConditionPer";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isOriginal";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "annualAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "periodAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "currentInsuredPeriodAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "historicEffectivePeriodAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "comment";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "refOptionalField";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isSum";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAdded";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "baseAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "factor";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = SicsRateReference.class;
            info.name = "rate";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

