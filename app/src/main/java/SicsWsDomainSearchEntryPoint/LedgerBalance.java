package SicsWsDomainSearchEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

public class LedgerBalance extends AbstractLedgerBalance implements KvmSerializable,java.io.Serializable
{

    
    public SicsBusinessPartnerReference businessPartner;
    
	/**
	* Currency
	*/
    public SicsCurrencyReference currency;
    
	/**
	* Balance
	*/
    public BigDecimal originalAmount=BigDecimal.ZERO;
    
	/**
	* Date
	*/
    public java.util.Date dueDateOrValueDate;
    
    public java.util.Date registrationDate;
    
    public SicsUserReference registeredBy;
    
	/**
	* Estimated
	*/
    public Boolean isEstimate=false;
    
	/**
	* SubclassNumber: 10. SicsRefPeriod.
	*                      Settlement Indicator
	*/
    public SicsReferenceDataReference settlementIndicator;
    
    public SicsBusinessPartnerReference baseCompany;
    
	/**
	* Base Company
	*/
    public String baseCompanyShortName;
    
	/**
	* Responsible BP
	*/
    public SicsBusinessPartnerReference secondaryBusinessPartner;
    
	/**
	* BYR Legal Entity
	*/
    public Integer bookingYear2;
    
	/**
	* SubclassNumber: 10. SicsRefPeriod.
	*                      BP Legal Entity
	*/
    public SicsReferenceDataReference bookingPeriod2;
    
	/**
	* BYR Global
	*/
    public Integer bookingYear3;
    
	/**
	* SubclassNumber: 10. SicsRefPeriod.
	*                      BP Global
	*/
    public SicsReferenceDataReference bookingPeriod3;
    
	/**
	* Unsettled Part
	*/
    public BigDecimal unsettledAmount=BigDecimal.ZERO;
    
	/**
	* SubclassNumber:170. SicsRefAccountingBalanceType
	*                      Balance Type
	*/
    public SicsReferenceDataReference balanceType;
    
	/**
	* SubclassNumber:170. SicsRefAccountingRemittanceType
	*                      Remittance Type
	*/
    public SicsReferenceDataReference remittanceTypeForView;
    
	/**
	* SubclassNumber:168. SicsRefWorksheetStatus
	*                      Status
	*/
    public SicsReferenceDataReference status;
    
	/**
	* Offset Balance
	*/
    public Boolean offsetBalance=false;
    
	/**
	* Business ID
	*/
    public SicsBusinessReference businessReference;
    
	/**
	* Claim ID
	*/
    public SicsPcClaimReference claimReference;
    
	/**
	* Bank Charge CCY
	*/
    public SicsCurrencyReference bankChargeCurrency;
    
	/**
	* Bank Charge Amt
	*/
    public BigDecimal bankChargeAmount;
    
	/**
	* Included In Settlement Balance Group
	*/
    public Boolean isPartOfSettlementBalance;
    
	/**
	* Included in Account Balance Group
	*/
    public Boolean isPartOfAccountGroupingBalance;
    
	/**
	* Has Expected Payment
	*/
    public Boolean hasExpectedPayment;
    
	/**
	* London Reference
	*/
    public String lmmReference;
    
	/**
	* Bulk Reference
	*/
    public String bulkReference;
    
	/**
	* Risk Code
	*/
    public String ediRiskCode;
    
	/**
	* Fil Market
	*/
    public String ediFilMarketCode;
    
	/**
	* Fil Code 1
	*/
    public String ediFilCode1;
    
	/**
	* Fil Code 2
	*/
    public String ediFilCode2;
    
	/**
	* DTI Audit
	*/
    public String ediDtiAuditCode;
    
	/**
	* Trust Fund
	*/
    public String ediTrustFundCode;
    
	/**
	* Movement Reference
	*/
    public String ediMovementReference;
    
	/**
	* Notes
	*/
    public String description;
    
	/**
	* Only use for domain retrieval
	*/
    public String businessPartnerReference;

    public LedgerBalance ()
    {
    }

    public LedgerBalance (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("businessPartner"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.businessPartner = (SicsBusinessPartnerReference)__envelope.get(j,SicsBusinessPartnerReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("currency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("originalAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.originalAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.originalAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("dueDateOrValueDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.dueDateOrValueDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.dueDateOrValueDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("registrationDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.registrationDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.registrationDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("registeredBy"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.registeredBy = (SicsUserReference)__envelope.get(j,SicsUserReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isEstimate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isEstimate = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isEstimate = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("settlementIndicator"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.settlementIndicator = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("baseCompany"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.baseCompany = (SicsBusinessPartnerReference)__envelope.get(j,SicsBusinessPartnerReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("baseCompanyShortName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.baseCompanyShortName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.baseCompanyShortName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("secondaryBusinessPartner"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.secondaryBusinessPartner = (SicsBusinessPartnerReference)__envelope.get(j,SicsBusinessPartnerReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("bookingYear2"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.bookingYear2 = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.bookingYear2 = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("bookingPeriod2"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.bookingPeriod2 = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("bookingYear3"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.bookingYear3 = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.bookingYear3 = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("bookingPeriod3"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.bookingPeriod3 = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("unsettledAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.unsettledAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.unsettledAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("balanceType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.balanceType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("remittanceTypeForView"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.remittanceTypeForView = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("status"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.status = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("offsetBalance"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.offsetBalance = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.offsetBalance = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("businessReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.businessReference = (SicsBusinessReference)__envelope.get(j,SicsBusinessReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimReference = (SicsPcClaimReference)__envelope.get(j,SicsPcClaimReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("bankChargeCurrency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.bankChargeCurrency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("bankChargeAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.bankChargeAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.bankChargeAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isPartOfSettlementBalance"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isPartOfSettlementBalance = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isPartOfSettlementBalance = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isPartOfAccountGroupingBalance"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isPartOfAccountGroupingBalance = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isPartOfAccountGroupingBalance = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasExpectedPayment"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasExpectedPayment = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasExpectedPayment = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lmmReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lmmReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.lmmReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("bulkReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.bulkReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.bulkReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediRiskCode"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediRiskCode = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediRiskCode = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediFilMarketCode"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediFilMarketCode = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediFilMarketCode = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediFilCode1"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediFilCode1 = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediFilCode1 = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediFilCode2"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediFilCode2 = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediFilCode2 = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediDtiAuditCode"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediDtiAuditCode = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediDtiAuditCode = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediTrustFundCode"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediTrustFundCode = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediTrustFundCode = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediMovementReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediMovementReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediMovementReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("description"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.description = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.description = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("businessPartnerReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.businessPartnerReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.businessPartnerReference = (String)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return businessPartner;
        }
        if(propertyIndex==count+1)
        {
            return currency;
        }
        if(propertyIndex==count+2)
        {
            return this.originalAmount!=null?this.originalAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.dueDateOrValueDate!=null?Helper.getDateFormat().format(this.dueDateOrValueDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.registrationDate!=null?Helper.getDateFormat().format(this.registrationDate):SoapPrimitive.NullNilElement;
        }
        if(propertyIndex==count+5)
        {
            return this.registeredBy!=null?this.registeredBy:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return isEstimate;
        }
        if(propertyIndex==count+7)
        {
            return settlementIndicator;
        }
        if(propertyIndex==count+8)
        {
            return this.baseCompany!=null?this.baseCompany:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return baseCompanyShortName;
        }
        if(propertyIndex==count+10)
        {
            return this.secondaryBusinessPartner!=null?this.secondaryBusinessPartner:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.bookingYear2!=null?this.bookingYear2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.bookingPeriod2!=null?this.bookingPeriod2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.bookingYear3!=null?this.bookingYear3:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.bookingPeriod3!=null?this.bookingPeriod3:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15)
        {
            return this.unsettledAmount!=null?this.unsettledAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16)
        {
            return balanceType;
        }
        if(propertyIndex==count+17)
        {
            return this.remittanceTypeForView!=null?this.remittanceTypeForView:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18)
        {
            return status;
        }
        if(propertyIndex==count+19)
        {
            return offsetBalance;
        }
        if(propertyIndex==count+20)
        {
            return this.businessReference!=null?this.businessReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21)
        {
            return this.claimReference!=null?this.claimReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22)
        {
            return this.bankChargeCurrency!=null?this.bankChargeCurrency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23)
        {
            return this.bankChargeAmount!=null?this.bankChargeAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+24)
        {
            return this.isPartOfSettlementBalance!=null?this.isPartOfSettlementBalance:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+25)
        {
            return this.isPartOfAccountGroupingBalance!=null?this.isPartOfAccountGroupingBalance:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+26)
        {
            return this.hasExpectedPayment!=null?this.hasExpectedPayment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+27)
        {
            return this.lmmReference!=null?this.lmmReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+28)
        {
            return this.bulkReference!=null?this.bulkReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+29)
        {
            return this.ediRiskCode!=null?this.ediRiskCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+30)
        {
            return this.ediFilMarketCode!=null?this.ediFilMarketCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+31)
        {
            return this.ediFilCode1!=null?this.ediFilCode1:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+32)
        {
            return this.ediFilCode2!=null?this.ediFilCode2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+33)
        {
            return this.ediDtiAuditCode!=null?this.ediDtiAuditCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+34)
        {
            return this.ediTrustFundCode!=null?this.ediTrustFundCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+35)
        {
            return this.ediMovementReference!=null?this.ediMovementReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+36)
        {
            return this.description!=null?this.description:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+37)
        {
            return this.businessPartnerReference!=null?this.businessPartnerReference:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+38;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = SicsBusinessPartnerReference.class;
            info.name = "businessPartner";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "currency";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "originalAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "dueDateOrValueDate";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "registrationDate";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = SicsUserReference.class;
            info.name = "registeredBy";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isEstimate";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "settlementIndicator";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = SicsBusinessPartnerReference.class;
            info.name = "baseCompany";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "baseCompanyShortName";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = SicsBusinessPartnerReference.class;
            info.name = "secondaryBusinessPartner";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "bookingYear2";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "bookingPeriod2";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "bookingYear3";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "bookingPeriod3";
            info.namespace= "";
        }
        if(propertyIndex==count+15)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "unsettledAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+16)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "balanceType";
            info.namespace= "";
        }
        if(propertyIndex==count+17)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "remittanceTypeForView";
            info.namespace= "";
        }
        if(propertyIndex==count+18)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "status";
            info.namespace= "";
        }
        if(propertyIndex==count+19)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "offsetBalance";
            info.namespace= "";
        }
        if(propertyIndex==count+20)
        {
            info.type = SicsBusinessReference.class;
            info.name = "businessReference";
            info.namespace= "";
        }
        if(propertyIndex==count+21)
        {
            info.type = SicsPcClaimReference.class;
            info.name = "claimReference";
            info.namespace= "";
        }
        if(propertyIndex==count+22)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "bankChargeCurrency";
            info.namespace= "";
        }
        if(propertyIndex==count+23)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "bankChargeAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+24)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isPartOfSettlementBalance";
            info.namespace= "";
        }
        if(propertyIndex==count+25)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isPartOfAccountGroupingBalance";
            info.namespace= "";
        }
        if(propertyIndex==count+26)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasExpectedPayment";
            info.namespace= "";
        }
        if(propertyIndex==count+27)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "lmmReference";
            info.namespace= "";
        }
        if(propertyIndex==count+28)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "bulkReference";
            info.namespace= "";
        }
        if(propertyIndex==count+29)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediRiskCode";
            info.namespace= "";
        }
        if(propertyIndex==count+30)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediFilMarketCode";
            info.namespace= "";
        }
        if(propertyIndex==count+31)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediFilCode1";
            info.namespace= "";
        }
        if(propertyIndex==count+32)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediFilCode2";
            info.namespace= "";
        }
        if(propertyIndex==count+33)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediDtiAuditCode";
            info.namespace= "";
        }
        if(propertyIndex==count+34)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediTrustFundCode";
            info.namespace= "";
        }
        if(propertyIndex==count+35)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediMovementReference";
            info.namespace= "";
        }
        if(propertyIndex==count+36)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "description";
            info.namespace= "";
        }
        if(propertyIndex==count+37)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "businessPartnerReference";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

