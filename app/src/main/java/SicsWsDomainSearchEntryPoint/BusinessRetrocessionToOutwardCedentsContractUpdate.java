package SicsWsDomainSearchEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

public class BusinessRetrocessionToOutwardCedentsContractUpdate extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Used to choose radio button:
	*                  o Gross radio button use value 'Gross' 
	*                  o Net radio button use value 'Net' 
	*                This element should only be used if isShareOf100Percent is false.
	*/
    public String protectionBasis;
    
	/**
	* Retroceded (G)
	*                This element should only be present if protectionBasis is 'Gross' and isShareOf100% is false.
	*/
    public BigDecimal retrocededShare;
    
	/**
	* Allocated (G)
	*                This element should only be present if protectionBasis is 'Gross', isShareOf100% is false
	*                and occ has a quota share.
	*/
    public BigDecimal allocatedShare;
    
	/**
	* Retroceded (N)
	*                This element should only be present if protectionBasis is 'Net' and isShareOf100% is false.
	*/
    public BigDecimal retrocededNetShare;
    
	/**
	* Used to choose radio button:
	*                  o From Order radio button use value 'false' 
	*                  o Share of 100 % radio button use value 'true' 
	*                This element should only be present if protectionBasis is not present.
	*/
    public Boolean isShareOf100Percent;
    
	/**
	* Share Of 100%
	*                This element should only be present if isShareOf100Percent is present and true.
	*/
    public BigDecimal shareOf100Percent;

    public BusinessRetrocessionToOutwardCedentsContractUpdate ()
    {
    }

    public BusinessRetrocessionToOutwardCedentsContractUpdate (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("protectionBasis"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.protectionBasis = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.protectionBasis = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("retrocededShare"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.retrocededShare = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.retrocededShare = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("allocatedShare"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.allocatedShare = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.allocatedShare = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("retrocededNetShare"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.retrocededNetShare = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.retrocededNetShare = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isShareOf100Percent"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isShareOf100Percent = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isShareOf100Percent = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("shareOf100Percent"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.shareOf100Percent = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.shareOf100Percent = (BigDecimal)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.protectionBasis!=null?this.protectionBasis:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.retrocededShare!=null?this.retrocededShare.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.allocatedShare!=null?this.allocatedShare.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.retrocededNetShare!=null?this.retrocededNetShare.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.isShareOf100Percent!=null?this.isShareOf100Percent:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.shareOf100Percent!=null?this.shareOf100Percent.toString():SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 6;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "protectionBasis";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "retrocededShare";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "allocatedShare";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "retrocededNetShare";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isShareOf100Percent";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "shareOf100Percent";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

