package SicsWsDomainSearchEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class AbstractScopeOfCover extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public String name;
    
    public Boolean isActive;
    
    public BigDecimal parentPercentage;
    
    public SicsCurrencyReference currency;
    
    public Classification_1 classification;
    
    public ArrayList< ReportingUnitRelation> reportingUnitRelation =new ArrayList<ReportingUnitRelation >();
    
    public ReportingUnitRelationList_1 reportingUnitRelationList;
    
    public ReportingUnitRelationUpdateList reportingUnitRelationUpdateList;
    
    public ArrayList< ResponsiblePerson> responsiblePerson =new ArrayList<ResponsiblePerson >();
    
	/**
	* NB: Should be used for updateScopeOfCover webservice. Use if a Responsible Person to be added.
	*/
    public ResponsiblePersonList responsiblePersonList;
    
	/**
	* NB: Should be used for updateScopeOfCover webservice. Use if a Responsible Person to be updated/deleted.
	*/
    public ResponsiblePersonListUpdate responsiblePersonListUpdate;
    
    public AccountingClassificationSet accountingClassifications;
    
    public ShareCondition shareCondition;
    
    public AccountsCommonCondition accountsCommonCondition;
    
	/**
	* NB: Should only be used for Domain Retrieval. For create/update go through the element limitPremiumCondition.
	*/
    public AdjustmentCondition adjustmentCondition;
    
    public CancellationCondition cancellationCondition;
    
    public ClaimCondition claimCondition;
    
	/**
	* NB: Should only be used for Domain Retrieval when business is type propFac.  
	*                      For create/update use claimCondition element specifying xsi:type="bus:ClaimConditionPropFac".
	*/
    public ClaimConditionPropFac claimConditionPropFac;
    
	/**
	* NB: Should only be used for Domain Retrieval when business is type nonPropFac.  
	*                      For create/update use claimCondition element specifying xsi:type="bus:ClaimConditionNonPropFac".
	*/
    public ClaimConditionNonPropFac claimConditionNonPropFac;
    
	/**
	* NB: Should only be used for Domain Retrieval when business is type propTreaty 
	*                      For create/update use claimCondition element specifying xsi:type="bus:ClaimConditionPropTreaty".
	*/
    public ClaimConditionPropTreaty claimConditionPropTreaty;
    
	/**
	* NB: Should only be used for Domain Retrieval when business is type nonProp Treaty.  
	*                      For create/update use claimCondition element specifying xsi:type="bus:ClaimConditionNonPropTreaty".
	*/
    public ClaimConditionNonPropTreaty claimConditionNonPropTreaty;
    
    public DeductiblesCondition deductiblesCondition;
    
    public DeductionCondition deductionBrokerageCondition;
    
    public DeductionCondition deductionCommissionCondition;
    
    public DeductionCondition deductionOtherCondition;
    
    public DepositCondition depositCondition;
    
    public IndexClauseConditionContainer indexClauseConditionContainer;
    
	/**
	* NB: Should only be used for Domain Retrieval. For create/update go through the element limitPremiumCondition.
	*/
    public InstalmentCondition instalmentCondition;
    
	/**
	* NB: Should only be used for Domain Retrieval. For create/update go through the element limitPremiumCondition.
	*/
    public InstalmentContainer instalmentContainer;
    
    public LimitPremiumCondition limitPremiumCondition;
    
    public PortfolioCondition portfolioCondition;
    
	/**
	* NB: Should only be used for Domain Retrieval. For create/update go through the element limitPremiumCondition.
	*/
    public PremiumCondition premiumCondition;
    
    public ProfitCommissionCondition profitCommissionCondition;
    
    public RebateCondition rebateCondition;
    
    public BusinessUnderlyingBusiness underlyingBusinessCondition;
    
    public ReinstatementConditionContainer reinstatementConditionContainer;
    
    public ReserveCondition reserveCondition;
    
    public EstimateConditionContainer estimateConditionContainer;
    
	/**
	* NB: Should only be used in renew business. It contains IO cessions and /or Declarations to be renewed.
	*/
    public CessionScopeOfCoverList cessionScopeOfCoverList;
    
    public InternalPremiumReserveCondition internalPremiumReserveCondition;
    
    public ClauseCondition clauseCondition;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition1;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition2;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition3;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition4;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition5;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition6;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition7;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition8;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition9;
    
    public UserDefinedFieldsCondition userDefinedFieldsCondition10;
    
    public ProtectionAssignment protectionAssignment;
    
	/**
	* NB: Should only be used for Domain Retrieval.
	*/
    public CessionInsurablePerilList cessionInsurablePerilList;
    
	/**
	* NB: Should only be used for Domain Retrieval.
	*/
    public AccountingClassificationSet availableAccountingClassifications;
    
	/**
	* NB: Only to be used for Domain Retrieval.
	*                        Return all child scopes of cover. Not only direct children but also grandchildren etc.
	*/
    public AllChildScopeOfCoverReferenceList allChildScopeOfCoverList;

    public AbstractScopeOfCover ()
    {
    }

    public AbstractScopeOfCover (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("name"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.name = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.name = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isActive"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isActive = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isActive = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("parentPercentage"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.parentPercentage = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.parentPercentage = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("currency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("classification"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.classification = (Classification_1)__envelope.get(j,Classification_1.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reportingUnitRelation"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.reportingUnitRelation==null)
                        {
                            this.reportingUnitRelation = new ArrayList< ReportingUnitRelation>();
                        }
                        java.lang.Object j =obj;
                        ReportingUnitRelation j1= (ReportingUnitRelation)__envelope.get(j,ReportingUnitRelation.class,false);
                        this.reportingUnitRelation.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("reportingUnitRelationList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnitRelationList = new ReportingUnitRelationList_1(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("reportingUnitRelationUpdateList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnitRelationUpdateList = (ReportingUnitRelationUpdateList)__envelope.get(j,ReportingUnitRelationUpdateList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("responsiblePerson"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.responsiblePerson==null)
                        {
                            this.responsiblePerson = new ArrayList< ResponsiblePerson>();
                        }
                        java.lang.Object j =obj;
                        ResponsiblePerson j1= (ResponsiblePerson)__envelope.get(j,ResponsiblePerson.class,false);
                        this.responsiblePerson.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("responsiblePersonList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.responsiblePersonList = new ResponsiblePersonList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("responsiblePersonListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.responsiblePersonListUpdate = (ResponsiblePersonListUpdate)__envelope.get(j,ResponsiblePersonListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("accountingClassifications"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountingClassifications = new AccountingClassificationSet(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("shareCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.shareCondition = (ShareCondition)__envelope.get(j,ShareCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("accountsCommonCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountsCommonCondition = (AccountsCommonCondition)__envelope.get(j,AccountsCommonCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("adjustmentCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.adjustmentCondition = (AdjustmentCondition)__envelope.get(j,AdjustmentCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("cancellationCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.cancellationCondition = (CancellationCondition)__envelope.get(j,CancellationCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimCondition = (ClaimCondition)__envelope.get(j,ClaimCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimConditionPropFac"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimConditionPropFac = (ClaimConditionPropFac)__envelope.get(j,ClaimConditionPropFac.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimConditionNonPropFac"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimConditionNonPropFac = (ClaimConditionNonPropFac)__envelope.get(j,ClaimConditionNonPropFac.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimConditionPropTreaty"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimConditionPropTreaty = (ClaimConditionPropTreaty)__envelope.get(j,ClaimConditionPropTreaty.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimConditionNonPropTreaty"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimConditionNonPropTreaty = (ClaimConditionNonPropTreaty)__envelope.get(j,ClaimConditionNonPropTreaty.class,false);
                    }
                    continue;
                }
                if (info.name.equals("deductiblesCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.deductiblesCondition = (DeductiblesCondition)__envelope.get(j,DeductiblesCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("deductionBrokerageCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.deductionBrokerageCondition = (DeductionCondition)__envelope.get(j,DeductionCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("deductionCommissionCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.deductionCommissionCondition = (DeductionCondition)__envelope.get(j,DeductionCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("deductionOtherCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.deductionOtherCondition = (DeductionCondition)__envelope.get(j,DeductionCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("depositCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.depositCondition = (DepositCondition)__envelope.get(j,DepositCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("indexClauseConditionContainer"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.indexClauseConditionContainer = (IndexClauseConditionContainer)__envelope.get(j,IndexClauseConditionContainer.class,false);
                    }
                    continue;
                }
                if (info.name.equals("instalmentCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.instalmentCondition = (InstalmentCondition)__envelope.get(j,InstalmentCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("instalmentContainer"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.instalmentContainer = (InstalmentContainer)__envelope.get(j,InstalmentContainer.class,false);
                    }
                    continue;
                }
                if (info.name.equals("limitPremiumCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.limitPremiumCondition = (LimitPremiumCondition)__envelope.get(j,LimitPremiumCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("portfolioCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.portfolioCondition = (PortfolioCondition)__envelope.get(j,PortfolioCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("premiumCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.premiumCondition = (PremiumCondition)__envelope.get(j,PremiumCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("profitCommissionCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.profitCommissionCondition = (ProfitCommissionCondition)__envelope.get(j,ProfitCommissionCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("rebateCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.rebateCondition = (RebateCondition)__envelope.get(j,RebateCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("underlyingBusinessCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.underlyingBusinessCondition = (BusinessUnderlyingBusiness)__envelope.get(j,BusinessUnderlyingBusiness.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reinstatementConditionContainer"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reinstatementConditionContainer = (ReinstatementConditionContainer)__envelope.get(j,ReinstatementConditionContainer.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reserveCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reserveCondition = (ReserveCondition)__envelope.get(j,ReserveCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("estimateConditionContainer"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.estimateConditionContainer = (EstimateConditionContainer)__envelope.get(j,EstimateConditionContainer.class,false);
                    }
                    continue;
                }
                if (info.name.equals("cessionScopeOfCoverList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.cessionScopeOfCoverList = new CessionScopeOfCoverList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("internalPremiumReserveCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.internalPremiumReserveCondition = (InternalPremiumReserveCondition)__envelope.get(j,InternalPremiumReserveCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("clauseCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.clauseCondition = (ClauseCondition)__envelope.get(j,ClauseCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition1"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition1 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition2"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition2 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition3"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition3 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition4"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition4 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition5"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition5 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition6"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition6 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition7"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition7 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition8"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition8 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition9"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition9 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition10"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition10 = (UserDefinedFieldsCondition)__envelope.get(j,UserDefinedFieldsCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("protectionAssignment"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.protectionAssignment = (ProtectionAssignment)__envelope.get(j,ProtectionAssignment.class,false);
                    }
                    continue;
                }
                if (info.name.equals("cessionInsurablePerilList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.cessionInsurablePerilList = new CessionInsurablePerilList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("availableAccountingClassifications"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.availableAccountingClassifications = new AccountingClassificationSet(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("allChildScopeOfCoverList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.allChildScopeOfCoverList = new AllChildScopeOfCoverReferenceList(j,__envelope);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.name!=null?this.name:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.isActive!=null?this.isActive:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.parentPercentage!=null?this.parentPercentage.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return currency;
        }
        if(propertyIndex==count+4)
        {
            return this.classification!=null?this.classification:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+5 && propertyIndex < count+5+this.reportingUnitRelation.size())
        {
            return this.reportingUnitRelation.get(propertyIndex-(count+5));
        }
        if(propertyIndex==count+5+this.reportingUnitRelation.size())
        {
            return this.reportingUnitRelationList!=null?this.reportingUnitRelationList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6+this.reportingUnitRelation.size())
        {
            return this.reportingUnitRelationUpdateList!=null?this.reportingUnitRelationUpdateList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+7+this.reportingUnitRelation.size() && propertyIndex < count+7+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.responsiblePerson.get(propertyIndex-(count+7+this.reportingUnitRelation.size()));
        }
        if(propertyIndex==count+7+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.responsiblePersonList!=null?this.responsiblePersonList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.responsiblePersonListUpdate!=null?this.responsiblePersonListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.accountingClassifications!=null?this.accountingClassifications:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.shareCondition!=null?this.shareCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.accountsCommonCondition!=null?this.accountsCommonCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.adjustmentCondition!=null?this.adjustmentCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.cancellationCondition!=null?this.cancellationCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.claimCondition!=null?this.claimCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.claimConditionPropFac!=null?this.claimConditionPropFac:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.claimConditionNonPropFac!=null?this.claimConditionNonPropFac:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.claimConditionPropTreaty!=null?this.claimConditionPropTreaty:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.claimConditionNonPropTreaty!=null?this.claimConditionNonPropTreaty:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+19+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.deductiblesCondition!=null?this.deductiblesCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+20+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.deductionBrokerageCondition!=null?this.deductionBrokerageCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.deductionCommissionCondition!=null?this.deductionCommissionCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.deductionOtherCondition!=null?this.deductionOtherCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.depositCondition!=null?this.depositCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+24+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.indexClauseConditionContainer!=null?this.indexClauseConditionContainer:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+25+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.instalmentCondition!=null?this.instalmentCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+26+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.instalmentContainer!=null?this.instalmentContainer:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+27+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.limitPremiumCondition!=null?this.limitPremiumCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+28+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.portfolioCondition!=null?this.portfolioCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+29+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.premiumCondition!=null?this.premiumCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+30+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.profitCommissionCondition!=null?this.profitCommissionCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+31+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.rebateCondition!=null?this.rebateCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+32+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.underlyingBusinessCondition!=null?this.underlyingBusinessCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+33+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.reinstatementConditionContainer!=null?this.reinstatementConditionContainer:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+34+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.reserveCondition!=null?this.reserveCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+35+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.estimateConditionContainer!=null?this.estimateConditionContainer:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+36+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.cessionScopeOfCoverList!=null?this.cessionScopeOfCoverList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+37+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.internalPremiumReserveCondition!=null?this.internalPremiumReserveCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+38+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.clauseCondition!=null?this.clauseCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+39+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition1!=null?this.userDefinedFieldsCondition1:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+40+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition2!=null?this.userDefinedFieldsCondition2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+41+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition3!=null?this.userDefinedFieldsCondition3:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+42+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition4!=null?this.userDefinedFieldsCondition4:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+43+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition5!=null?this.userDefinedFieldsCondition5:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+44+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition6!=null?this.userDefinedFieldsCondition6:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+45+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition7!=null?this.userDefinedFieldsCondition7:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+46+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition8!=null?this.userDefinedFieldsCondition8:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+47+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition9!=null?this.userDefinedFieldsCondition9:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+48+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.userDefinedFieldsCondition10!=null?this.userDefinedFieldsCondition10:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+49+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.protectionAssignment!=null?this.protectionAssignment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+50+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.cessionInsurablePerilList!=null?this.cessionInsurablePerilList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+51+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.availableAccountingClassifications!=null?this.availableAccountingClassifications:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+52+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            return this.allChildScopeOfCoverList!=null?this.allChildScopeOfCoverList:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+53+reportingUnitRelation.size()+responsiblePerson.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "name";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isActive";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "parentPercentage";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "currency";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = Classification_1.class;
            info.name = "classification";
            info.namespace= "";
        }
        if(propertyIndex>=count+5 && propertyIndex < count+5+this.reportingUnitRelation.size())
        {
            info.type = ReportingUnitRelation.class;
            info.name = "reportingUnitRelation";
            info.namespace= "";
        }
        if(propertyIndex==count+5+this.reportingUnitRelation.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "reportingUnitRelationList";
            info.namespace= "";
        }
        if(propertyIndex==count+6+this.reportingUnitRelation.size())
        {
            info.type = ReportingUnitRelationUpdateList.class;
            info.name = "reportingUnitRelationUpdateList";
            info.namespace= "";
        }
        if(propertyIndex>=count+7+this.reportingUnitRelation.size() && propertyIndex < count+7+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ResponsiblePerson.class;
            info.name = "responsiblePerson";
            info.namespace= "";
        }
        if(propertyIndex==count+7+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "responsiblePersonList";
            info.namespace= "";
        }
        if(propertyIndex==count+8+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ResponsiblePersonListUpdate.class;
            info.name = "responsiblePersonListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==count+9+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "accountingClassifications";
            info.namespace= "";
        }
        if(propertyIndex==count+10+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ShareCondition.class;
            info.name = "shareCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+11+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = AccountsCommonCondition.class;
            info.name = "accountsCommonCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+12+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = AdjustmentCondition.class;
            info.name = "adjustmentCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+13+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = CancellationCondition.class;
            info.name = "cancellationCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+14+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ClaimCondition.class;
            info.name = "claimCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+15+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ClaimConditionPropFac.class;
            info.name = "claimConditionPropFac";
            info.namespace= "";
        }
        if(propertyIndex==count+16+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ClaimConditionNonPropFac.class;
            info.name = "claimConditionNonPropFac";
            info.namespace= "";
        }
        if(propertyIndex==count+17+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ClaimConditionPropTreaty.class;
            info.name = "claimConditionPropTreaty";
            info.namespace= "";
        }
        if(propertyIndex==count+18+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ClaimConditionNonPropTreaty.class;
            info.name = "claimConditionNonPropTreaty";
            info.namespace= "";
        }
        if(propertyIndex==count+19+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = DeductiblesCondition.class;
            info.name = "deductiblesCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+20+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = DeductionCondition.class;
            info.name = "deductionBrokerageCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+21+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = DeductionCondition.class;
            info.name = "deductionCommissionCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+22+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = DeductionCondition.class;
            info.name = "deductionOtherCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+23+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = DepositCondition.class;
            info.name = "depositCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+24+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = IndexClauseConditionContainer.class;
            info.name = "indexClauseConditionContainer";
            info.namespace= "";
        }
        if(propertyIndex==count+25+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = InstalmentCondition.class;
            info.name = "instalmentCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+26+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = InstalmentContainer.class;
            info.name = "instalmentContainer";
            info.namespace= "";
        }
        if(propertyIndex==count+27+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = LimitPremiumCondition.class;
            info.name = "limitPremiumCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+28+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = PortfolioCondition.class;
            info.name = "portfolioCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+29+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = PremiumCondition.class;
            info.name = "premiumCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+30+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ProfitCommissionCondition.class;
            info.name = "profitCommissionCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+31+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = RebateCondition.class;
            info.name = "rebateCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+32+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = BusinessUnderlyingBusiness.class;
            info.name = "underlyingBusinessCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+33+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ReinstatementConditionContainer.class;
            info.name = "reinstatementConditionContainer";
            info.namespace= "";
        }
        if(propertyIndex==count+34+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ReserveCondition.class;
            info.name = "reserveCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+35+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = EstimateConditionContainer.class;
            info.name = "estimateConditionContainer";
            info.namespace= "";
        }
        if(propertyIndex==count+36+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "cessionScopeOfCoverList";
            info.namespace= "";
        }
        if(propertyIndex==count+37+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = InternalPremiumReserveCondition.class;
            info.name = "internalPremiumReserveCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+38+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ClauseCondition.class;
            info.name = "clauseCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+39+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition1";
            info.namespace= "";
        }
        if(propertyIndex==count+40+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition2";
            info.namespace= "";
        }
        if(propertyIndex==count+41+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition3";
            info.namespace= "";
        }
        if(propertyIndex==count+42+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition4";
            info.namespace= "";
        }
        if(propertyIndex==count+43+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition5";
            info.namespace= "";
        }
        if(propertyIndex==count+44+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition6";
            info.namespace= "";
        }
        if(propertyIndex==count+45+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition7";
            info.namespace= "";
        }
        if(propertyIndex==count+46+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition8";
            info.namespace= "";
        }
        if(propertyIndex==count+47+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition9";
            info.namespace= "";
        }
        if(propertyIndex==count+48+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = UserDefinedFieldsCondition.class;
            info.name = "userDefinedFieldsCondition10";
            info.namespace= "";
        }
        if(propertyIndex==count+49+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = ProtectionAssignment.class;
            info.name = "protectionAssignment";
            info.namespace= "";
        }
        if(propertyIndex==count+50+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "cessionInsurablePerilList";
            info.namespace= "";
        }
        if(propertyIndex==count+51+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "availableAccountingClassifications";
            info.namespace= "";
        }
        if(propertyIndex==count+52+this.reportingUnitRelation.size()+this.responsiblePerson.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "allChildScopeOfCoverList";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

