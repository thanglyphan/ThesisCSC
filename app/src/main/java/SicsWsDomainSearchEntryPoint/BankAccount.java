package SicsWsDomainSearchEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class BankAccount extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public String accountDescription;
    
	/**
	* This element is mandatory for create-type services like createBankAccount, createBusinessPartner and createAndApproveBankAccount.
	*                   guiLabel: IBAN / Account Number
	*                   IBAN / Account Number
	*/
    public String accountNumber;
    
    public SicsReferenceDataReference bankAccountType;
    
    public String note;
    
	/**
	* This element is mandatory for create-type services like createBankAccount, createBusinessPartner and createAndApproveBankAccount.
	*                   guiLabel: Bank
	*                   Bank
	*/
    public SicsPartyReference bank;
    
	/**
	* This element is mandatory for create-type services like createBankAccount, createBusinessPartner and createAndApproveBankAccount.
	*                   guiLabel: Currency
	*                   Currency
	*/
    public SicsCurrencyReference currency;
    
    public Boolean isActive;
    
    public Boolean isIntermediaryBankAccount;
    
    public Boolean isBaseCurrencyConversionAccount;
    
	/**
	* SubclassNumber: 405.
	*/
    public SicsReferenceDataReference accountTask;
    
	/**
	* SubclassNumber: 235.
	*/
    public SicsReferenceDataReference status;
    
	/**
	* SubclassNumber: 175. SicsRefAccountingRemittanceType.
	*                   Payment Type
	*/
    public SicsReferenceDataReference forPaymentType;
    
    public SicsReportingUnitReference reportingUnit;

    public BankAccount ()
    {
    }

    public BankAccount (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("accountDescription"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.accountDescription = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.accountDescription = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("accountNumber"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.accountNumber = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.accountNumber = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("bankAccountType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.bankAccountType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("note"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.note = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.note = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("bank"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.bank = (SicsPartyReference)__envelope.get(j,SicsPartyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("currency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isActive"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isActive = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isActive = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isIntermediaryBankAccount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isIntermediaryBankAccount = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isIntermediaryBankAccount = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isBaseCurrencyConversionAccount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isBaseCurrencyConversionAccount = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isBaseCurrencyConversionAccount = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("accountTask"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountTask = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("status"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.status = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("forPaymentType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.forPaymentType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reportingUnit"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnit = (SicsReportingUnitReference)__envelope.get(j,SicsReportingUnitReference.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.accountDescription!=null?this.accountDescription:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.accountNumber!=null?this.accountNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.bankAccountType!=null?this.bankAccountType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.note!=null?this.note:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.bank!=null?this.bank:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.currency!=null?this.currency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.isActive!=null?this.isActive:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.isIntermediaryBankAccount!=null?this.isIntermediaryBankAccount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.isBaseCurrencyConversionAccount!=null?this.isBaseCurrencyConversionAccount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.accountTask!=null?this.accountTask:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.status!=null?this.status:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.forPaymentType!=null?this.forPaymentType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.reportingUnit!=null?this.reportingUnit:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+13;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "accountDescription";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "accountNumber";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "bankAccountType";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "note";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = SicsPartyReference.class;
            info.name = "bank";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "currency";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isActive";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isIntermediaryBankAccount";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isBaseCurrencyConversionAccount";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "accountTask";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "status";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "forPaymentType";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = SicsReportingUnitReference.class;
            info.name = "reportingUnit";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

