package SicsWsTaskManagementEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 30/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class RealizeTreatyOutlineDetails extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
	/**
	* SubclassNumber: 90. SicsRefAgreementLifeCycleStatus. 
	*                To add details of life cycle status enter values in insuredPeriod->lifeCyclePhase->lifeCycleStatus tag.
	*/
    public SicsReferenceDataReference lifeCycleStatus;
    
    public java.util.Date fromDate;
    
    public java.util.Date toDate;
    
    public ReportingUnitWithValidPeriodList reportingUnitList;
    
    public ResponsiblePersonList responsiblePersonList;
    
    public ShareCondition shareCondition;
    
    public String underwritingYear;
    
	/**
	* Optional in P and C and GR, mandatory in Life
	*/
    public String title;
    
    public String identifier;
    
    public String formerIdentifier;
    
    public String identifierSuffix;
    
	/**
	* SubclassNumber: 225. SicsRefAccountGroup
	*/
    public SicsReferenceDataReference accountGroup;
    
    public SicsCurrencyReference functionalCurrency;
    
    public SicsCurrencyReference functionalCurrency2;
    
    public Boolean isEdiGeneralCover;
    
    public Boolean isToBeIncludedInStatement;
    
    public Boolean worksheetClosingSecurityLimitation;
    
	/**
	* Notes tab
	*/
    public String note;

    public RealizeTreatyOutlineDetails ()
    {
    }

    public RealizeTreatyOutlineDetails (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("lifeCycleStatus"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.lifeCycleStatus = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("fromDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.fromDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.fromDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("toDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.toDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.toDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reportingUnitList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnitList = new ReportingUnitWithValidPeriodList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("responsiblePersonList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.responsiblePersonList = new ResponsiblePersonList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("shareCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.shareCondition = (ShareCondition)__envelope.get(j,ShareCondition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("underwritingYear"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.underwritingYear = j.toString();
                            }
                        }
                        else{
                            this.underwritingYear = obj.toString();
                        }
                    }
                    continue;
                }
                if (info.name.equals("title"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.title = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.title = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("identifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.identifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.identifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("formerIdentifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.formerIdentifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.formerIdentifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("identifierSuffix"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.identifierSuffix = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.identifierSuffix = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("accountGroup"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountGroup = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("functionalCurrency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.functionalCurrency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("functionalCurrency2"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.functionalCurrency2 = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isEdiGeneralCover"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isEdiGeneralCover = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isEdiGeneralCover = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isToBeIncludedInStatement"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isToBeIncludedInStatement = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isToBeIncludedInStatement = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("worksheetClosingSecurityLimitation"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.worksheetClosingSecurityLimitation = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.worksheetClosingSecurityLimitation = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("note"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.note = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.note = (String)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return lifeCycleStatus;
        }
        if(propertyIndex==1)
        {
            return this.fromDate!=null?Helper.getDateTimeFormat().format(this.fromDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.toDate!=null?Helper.getDateTimeFormat().format(this.toDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.reportingUnitList!=null?this.reportingUnitList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.responsiblePersonList!=null?this.responsiblePersonList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.shareCondition!=null?this.shareCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.underwritingYear!=null?this.underwritingYear:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.title!=null?this.title:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.identifier!=null?this.identifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.formerIdentifier!=null?this.formerIdentifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.identifierSuffix!=null?this.identifierSuffix:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==11)
        {
            return this.accountGroup!=null?this.accountGroup:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==12)
        {
            return this.functionalCurrency!=null?this.functionalCurrency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==13)
        {
            return this.functionalCurrency2!=null?this.functionalCurrency2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==14)
        {
            return this.isEdiGeneralCover!=null?this.isEdiGeneralCover:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==15)
        {
            return this.isToBeIncludedInStatement!=null?this.isToBeIncludedInStatement:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==16)
        {
            return this.worksheetClosingSecurityLimitation!=null?this.worksheetClosingSecurityLimitation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==17)
        {
            return this.note!=null?this.note:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 18;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "lifeCycleStatus";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "fromDate";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "toDate";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "reportingUnitList";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "responsiblePersonList";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = ShareCondition.class;
            info.name = "shareCondition";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "underwritingYear";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "title";
            info.namespace= "";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "identifier";
            info.namespace= "";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "formerIdentifier";
            info.namespace= "";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "identifierSuffix";
            info.namespace= "";
        }
        if(propertyIndex==11)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "accountGroup";
            info.namespace= "";
        }
        if(propertyIndex==12)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "functionalCurrency";
            info.namespace= "";
        }
        if(propertyIndex==13)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "functionalCurrency2";
            info.namespace= "";
        }
        if(propertyIndex==14)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isEdiGeneralCover";
            info.namespace= "";
        }
        if(propertyIndex==15)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isToBeIncludedInStatement";
            info.namespace= "";
        }
        if(propertyIndex==16)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "worksheetClosingSecurityLimitation";
            info.namespace= "";
        }
        if(propertyIndex==17)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "note";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

