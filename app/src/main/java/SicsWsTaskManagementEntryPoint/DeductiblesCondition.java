package SicsWsTaskManagementEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 30/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

/**
* Contains all the fields for deductibles condition. Deductibles condtion can be of three types: None, Loss Corridor and Loss
*         Participation. This type then determinate the rest of the fields for the condition. The complexType contains the union of all these
*         fields - please see the documentation of SICSnt or the web service for relevant fields for the different types.
*/
public class DeductiblesCondition extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
	/**
	* The type: None, Loss Corridor or Loss Participation
	*/
    public SicsReferenceDataReference deductiblesType;
    
	/**
	* Relevant for all three types: None, Loss Corridor or Loss Participation
	*/
    public String comment;
    
	/**
	* Relevant only for Loss Corridor and Loss Participation. If included it must have a value.
	*/
    public SicsReferenceDataReference deductFrom;
    
	/**
	* SICS/nt screen field: Minimum Loss Ratio. Relevant only for Loss Corridor
	*/
    public BigDecimal minimumLossRatio;
    
	/**
	* SICS/nt screen field: Maximum Loss Ratio. Relevant only for Loss Corridor
	*/
    public BigDecimal maximumLossRatio;
    
	/**
	* SICS/nt screen field: Cedents Participation Pct. Relevant only for Loss Corridor
	*/
    public BigDecimal cedentParticipationPct;
    
	/**
	* Relevant only for Loss Participation
	*/
    public BigDecimal maxPctOfPremium;
    
	/**
	* Relevant only for Loss Participation and Loss Corridor
	*/
    public SicsWsTimeDurationReference firstCalculationAfter;
    
	/**
	* Relevant only for Loss Participation and Loss Corridor
	*/
    public SicsWsTimeDurationReference subsequentCalculationEvery;
    
	/**
	* Relevant only for Loss Participation
	*/
    public SicsAccountingEntryCodeGroupReference premium;
    
	/**
	* Relevant only for Loss Participation
	*/
    public Boolean premiumIncludeReserve;
    
	/**
	* Relevant only for Loss Participation
	*/
    public SicsAccountingEntryCodeGroupReference loss;
    
	/**
	* Relevant only for Loss Participation
	*/
    public Boolean lossIncludeReserve;
    
	/**
	* Relevant only for Loss Participation. NB! It is not possible to update part of the table. The content of this element
	*                             replace the current content of the loss participation table.
	*/
    public LossParticipationTable lossParticipation;
    
	/**
	* Relevant for all three types: None, Loss Corridor or Loss Participation
	*/
    public String note;

    public DeductiblesCondition ()
    {
    }

    public DeductiblesCondition (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("deductiblesType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.deductiblesType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("comment"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.comment = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.comment = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("deductFrom"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.deductFrom = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("minimumLossRatio"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.minimumLossRatio = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.minimumLossRatio = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("maximumLossRatio"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.maximumLossRatio = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.maximumLossRatio = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("cedentParticipationPct"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cedentParticipationPct = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.cedentParticipationPct = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("maxPctOfPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.maxPctOfPremium = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.maxPctOfPremium = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("firstCalculationAfter"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.firstCalculationAfter = (SicsWsTimeDurationReference)__envelope.get(j,SicsWsTimeDurationReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("subsequentCalculationEvery"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.subsequentCalculationEvery = (SicsWsTimeDurationReference)__envelope.get(j,SicsWsTimeDurationReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("premium"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.premium = (SicsAccountingEntryCodeGroupReference)__envelope.get(j,SicsAccountingEntryCodeGroupReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("premiumIncludeReserve"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.premiumIncludeReserve = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.premiumIncludeReserve = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("loss"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.loss = (SicsAccountingEntryCodeGroupReference)__envelope.get(j,SicsAccountingEntryCodeGroupReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("lossIncludeReserve"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lossIncludeReserve = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.lossIncludeReserve = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lossParticipation"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.lossParticipation = new LossParticipationTable(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("note"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.note = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.note = (String)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return deductiblesType;
        }
        if(propertyIndex==count+1)
        {
            return this.comment!=null?this.comment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.deductFrom!=null?this.deductFrom:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.minimumLossRatio!=null?this.minimumLossRatio.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.maximumLossRatio!=null?this.maximumLossRatio.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.cedentParticipationPct!=null?this.cedentParticipationPct.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.maxPctOfPremium!=null?this.maxPctOfPremium.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.firstCalculationAfter!=null?this.firstCalculationAfter:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.subsequentCalculationEvery!=null?this.subsequentCalculationEvery:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.premium!=null?this.premium:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.premiumIncludeReserve!=null?this.premiumIncludeReserve:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.loss!=null?this.loss:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.lossIncludeReserve!=null?this.lossIncludeReserve:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.lossParticipation!=null?this.lossParticipation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.note!=null?this.note:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+15;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "deductiblesType";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "comment";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "deductFrom";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "minimumLossRatio";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "maximumLossRatio";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "cedentParticipationPct";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "maxPctOfPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = SicsWsTimeDurationReference.class;
            info.name = "firstCalculationAfter";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = SicsWsTimeDurationReference.class;
            info.name = "subsequentCalculationEvery";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = SicsAccountingEntryCodeGroupReference.class;
            info.name = "premium";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "premiumIncludeReserve";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = SicsAccountingEntryCodeGroupReference.class;
            info.name = "loss";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "lossIncludeReserve";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "lossParticipation";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "note";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

