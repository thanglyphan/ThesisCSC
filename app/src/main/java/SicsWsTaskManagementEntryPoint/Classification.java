package SicsWsTaskManagementEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 30/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class Classification extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public ArrayList< SicsCountryReference> includedCountries =new ArrayList<SicsCountryReference >();
    
    public ArrayList< SicsCountryReference> excludedCountries =new ArrayList<SicsCountryReference >();
    
    public ArrayList< SicsStateReference> includedStates =new ArrayList<SicsStateReference >();
    
    public ArrayList< SicsStateReference> excludedStates =new ArrayList<SicsStateReference >();
    
    public ArrayList< SicsAreaGroupCountryReference> includedCountryGroups =new ArrayList<SicsAreaGroupCountryReference >();
    
    public ArrayList< SicsAreaGroupStateReference> includedStateGroups =new ArrayList<SicsAreaGroupStateReference >();
    
    public ArrayList< SicsCountryReference> includedResidenceCountries =new ArrayList<SicsCountryReference >();
    
    public ArrayList< SicsStateReference> includedResidenceStates =new ArrayList<SicsStateReference >();
    
    public ArrayList< SicsAreaGroupCountryReference> includedResidenceCountryGroups =new ArrayList<SicsAreaGroupCountryReference >();
    
    public ArrayList< SicsAreaGroupStateReference> includedResidenceStateGroups =new ArrayList<SicsAreaGroupStateReference >();
    
    public ArrayList< SicsCountryReference> includedCountriesForMarineVoyageFrom =new ArrayList<SicsCountryReference >();
    
    public ArrayList< SicsCountryReference> includedCountriesForMarineVoyageTo =new ArrayList<SicsCountryReference >();
    
    public ArrayList< SicsAreaGroupCountryReference> includedCountryGroupsForMarineVoyageFrom =new ArrayList<SicsAreaGroupCountryReference >();
    
    public ArrayList< SicsAreaGroupCountryReference> includedCountryGroupsForMarineVoyageTo =new ArrayList<SicsAreaGroupCountryReference >();
    
    public ArrayList< SicsInsurableObjectReferenceByName> locations =new ArrayList<SicsInsurableObjectReferenceByName >();
    
	/**
	* SubclassNumber: 19,3,48,44,46,525,22,51,52,54,54,214,215,216,217,218,219,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278.
	*/
    public ArrayList< SicsReferenceDataReference> includedRefData =new ArrayList<SicsReferenceDataReference >();
    
	/**
	* SubclassNumber: 19,3,48,44,46,525,22,51,52,54,54,214,215,216,217,218,219,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278.
	*/
    public ArrayList< SicsReferenceDataReference> excludedRefData =new ArrayList<SicsReferenceDataReference >();
    
	/**
	* SubclassNumber: 22.
	*/
    public ArrayList< SicsReferenceDataReference> includedMethodRefData =new ArrayList<SicsReferenceDataReference >();
    
    public ArrayList< ClassificationConditionalExclusion> excludedLegalAreasConditionally =new ArrayList<ClassificationConditionalExclusion >();
    
    public String note;
    
    public Boolean enlargeParentClassification;
    
	/**
	* SubclassNumber: 19. SicsRefMainClassOfBusiness
	*/
    public SicsReferenceDataReference principalMainClassOfBusiness;

    public Classification ()
    {
    }

    public Classification (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("includedCountries"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedCountries==null)
                        {
                            this.includedCountries = new ArrayList< SicsCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsCountryReference j1= (SicsCountryReference)__envelope.get(j,SicsCountryReference.class,false);
                        this.includedCountries.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("excludedCountries"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.excludedCountries==null)
                        {
                            this.excludedCountries = new ArrayList< SicsCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsCountryReference j1= (SicsCountryReference)__envelope.get(j,SicsCountryReference.class,false);
                        this.excludedCountries.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedStates"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedStates==null)
                        {
                            this.includedStates = new ArrayList< SicsStateReference>();
                        }
                        java.lang.Object j =obj;
                        SicsStateReference j1= (SicsStateReference)__envelope.get(j,SicsStateReference.class,false);
                        this.includedStates.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("excludedStates"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.excludedStates==null)
                        {
                            this.excludedStates = new ArrayList< SicsStateReference>();
                        }
                        java.lang.Object j =obj;
                        SicsStateReference j1= (SicsStateReference)__envelope.get(j,SicsStateReference.class,false);
                        this.excludedStates.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedCountryGroups"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedCountryGroups==null)
                        {
                            this.includedCountryGroups = new ArrayList< SicsAreaGroupCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAreaGroupCountryReference j1= (SicsAreaGroupCountryReference)__envelope.get(j,SicsAreaGroupCountryReference.class,false);
                        this.includedCountryGroups.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedStateGroups"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedStateGroups==null)
                        {
                            this.includedStateGroups = new ArrayList< SicsAreaGroupStateReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAreaGroupStateReference j1= (SicsAreaGroupStateReference)__envelope.get(j,SicsAreaGroupStateReference.class,false);
                        this.includedStateGroups.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedResidenceCountries"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedResidenceCountries==null)
                        {
                            this.includedResidenceCountries = new ArrayList< SicsCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsCountryReference j1= (SicsCountryReference)__envelope.get(j,SicsCountryReference.class,false);
                        this.includedResidenceCountries.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedResidenceStates"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedResidenceStates==null)
                        {
                            this.includedResidenceStates = new ArrayList< SicsStateReference>();
                        }
                        java.lang.Object j =obj;
                        SicsStateReference j1= (SicsStateReference)__envelope.get(j,SicsStateReference.class,false);
                        this.includedResidenceStates.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedResidenceCountryGroups"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedResidenceCountryGroups==null)
                        {
                            this.includedResidenceCountryGroups = new ArrayList< SicsAreaGroupCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAreaGroupCountryReference j1= (SicsAreaGroupCountryReference)__envelope.get(j,SicsAreaGroupCountryReference.class,false);
                        this.includedResidenceCountryGroups.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedResidenceStateGroups"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedResidenceStateGroups==null)
                        {
                            this.includedResidenceStateGroups = new ArrayList< SicsAreaGroupStateReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAreaGroupStateReference j1= (SicsAreaGroupStateReference)__envelope.get(j,SicsAreaGroupStateReference.class,false);
                        this.includedResidenceStateGroups.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedCountriesForMarineVoyageFrom"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedCountriesForMarineVoyageFrom==null)
                        {
                            this.includedCountriesForMarineVoyageFrom = new ArrayList< SicsCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsCountryReference j1= (SicsCountryReference)__envelope.get(j,SicsCountryReference.class,false);
                        this.includedCountriesForMarineVoyageFrom.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedCountriesForMarineVoyageTo"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedCountriesForMarineVoyageTo==null)
                        {
                            this.includedCountriesForMarineVoyageTo = new ArrayList< SicsCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsCountryReference j1= (SicsCountryReference)__envelope.get(j,SicsCountryReference.class,false);
                        this.includedCountriesForMarineVoyageTo.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedCountryGroupsForMarineVoyageFrom"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedCountryGroupsForMarineVoyageFrom==null)
                        {
                            this.includedCountryGroupsForMarineVoyageFrom = new ArrayList< SicsAreaGroupCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAreaGroupCountryReference j1= (SicsAreaGroupCountryReference)__envelope.get(j,SicsAreaGroupCountryReference.class,false);
                        this.includedCountryGroupsForMarineVoyageFrom.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedCountryGroupsForMarineVoyageTo"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedCountryGroupsForMarineVoyageTo==null)
                        {
                            this.includedCountryGroupsForMarineVoyageTo = new ArrayList< SicsAreaGroupCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAreaGroupCountryReference j1= (SicsAreaGroupCountryReference)__envelope.get(j,SicsAreaGroupCountryReference.class,false);
                        this.includedCountryGroupsForMarineVoyageTo.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("locations"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.locations==null)
                        {
                            this.locations = new ArrayList< SicsInsurableObjectReferenceByName>();
                        }
                        java.lang.Object j =obj;
                        SicsInsurableObjectReferenceByName j1= (SicsInsurableObjectReferenceByName)__envelope.get(j,SicsInsurableObjectReferenceByName.class,false);
                        this.locations.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedRefData"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedRefData==null)
                        {
                            this.includedRefData = new ArrayList< SicsReferenceDataReference>();
                        }
                        java.lang.Object j =obj;
                        SicsReferenceDataReference j1= (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                        this.includedRefData.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("excludedRefData"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.excludedRefData==null)
                        {
                            this.excludedRefData = new ArrayList< SicsReferenceDataReference>();
                        }
                        java.lang.Object j =obj;
                        SicsReferenceDataReference j1= (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                        this.excludedRefData.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedMethodRefData"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedMethodRefData==null)
                        {
                            this.includedMethodRefData = new ArrayList< SicsReferenceDataReference>();
                        }
                        java.lang.Object j =obj;
                        SicsReferenceDataReference j1= (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                        this.includedMethodRefData.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("excludedLegalAreasConditionally"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.excludedLegalAreasConditionally==null)
                        {
                            this.excludedLegalAreasConditionally = new ArrayList< ClassificationConditionalExclusion>();
                        }
                        java.lang.Object j =obj;
                        ClassificationConditionalExclusion j1= (ClassificationConditionalExclusion)__envelope.get(j,ClassificationConditionalExclusion.class,false);
                        this.excludedLegalAreasConditionally.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("note"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.note = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.note = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("enlargeParentClassification"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.enlargeParentClassification = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.enlargeParentClassification = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("principalMainClassOfBusiness"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.principalMainClassOfBusiness = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.includedCountries.size())
        {
            return this.includedCountries.get(propertyIndex-(count+0));
        }
        if(propertyIndex>=count+0+this.includedCountries.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size())
        {
            return this.excludedCountries.get(propertyIndex-(count+0+this.includedCountries.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size())
        {
            return this.includedStates.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size())
        {
            return this.excludedStates.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size())
        {
            return this.includedCountryGroups.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size())
        {
            return this.includedStateGroups.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size())
        {
            return this.includedResidenceCountries.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size())
        {
            return this.includedResidenceStates.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size())
        {
            return this.includedResidenceCountryGroups.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size())
        {
            return this.includedResidenceStateGroups.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size())
        {
            return this.includedCountriesForMarineVoyageFrom.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size())
        {
            return this.includedCountriesForMarineVoyageTo.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size())
        {
            return this.includedCountryGroupsForMarineVoyageFrom.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size())
        {
            return this.includedCountryGroupsForMarineVoyageTo.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size())
        {
            return this.locations.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size())
        {
            return this.includedRefData.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size())
        {
            return this.excludedRefData.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size())
        {
            return this.includedMethodRefData.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()));
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()+this.excludedLegalAreasConditionally.size())
        {
            return this.excludedLegalAreasConditionally.get(propertyIndex-(count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()));
        }
        if(propertyIndex==count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()+this.excludedLegalAreasConditionally.size())
        {
            return this.note!=null?this.note:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()+this.excludedLegalAreasConditionally.size())
        {
            return this.enlargeParentClassification!=null?this.enlargeParentClassification:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()+this.excludedLegalAreasConditionally.size())
        {
            return this.principalMainClassOfBusiness!=null?this.principalMainClassOfBusiness:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+3+includedCountries.size()+excludedCountries.size()+includedStates.size()+excludedStates.size()+includedCountryGroups.size()+includedStateGroups.size()+includedResidenceCountries.size()+includedResidenceStates.size()+includedResidenceCountryGroups.size()+includedResidenceStateGroups.size()+includedCountriesForMarineVoyageFrom.size()+includedCountriesForMarineVoyageTo.size()+includedCountryGroupsForMarineVoyageFrom.size()+includedCountryGroupsForMarineVoyageTo.size()+locations.size()+includedRefData.size()+excludedRefData.size()+includedMethodRefData.size()+excludedLegalAreasConditionally.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.includedCountries.size())
        {
            info.type = SicsCountryReference.class;
            info.name = "includedCountries";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size())
        {
            info.type = SicsCountryReference.class;
            info.name = "excludedCountries";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size())
        {
            info.type = SicsStateReference.class;
            info.name = "includedStates";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size())
        {
            info.type = SicsStateReference.class;
            info.name = "excludedStates";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size())
        {
            info.type = SicsAreaGroupCountryReference.class;
            info.name = "includedCountryGroups";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size())
        {
            info.type = SicsAreaGroupStateReference.class;
            info.name = "includedStateGroups";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size())
        {
            info.type = SicsCountryReference.class;
            info.name = "includedResidenceCountries";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size())
        {
            info.type = SicsStateReference.class;
            info.name = "includedResidenceStates";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size())
        {
            info.type = SicsAreaGroupCountryReference.class;
            info.name = "includedResidenceCountryGroups";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size())
        {
            info.type = SicsAreaGroupStateReference.class;
            info.name = "includedResidenceStateGroups";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size())
        {
            info.type = SicsCountryReference.class;
            info.name = "includedCountriesForMarineVoyageFrom";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size())
        {
            info.type = SicsCountryReference.class;
            info.name = "includedCountriesForMarineVoyageTo";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size())
        {
            info.type = SicsAreaGroupCountryReference.class;
            info.name = "includedCountryGroupsForMarineVoyageFrom";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size())
        {
            info.type = SicsAreaGroupCountryReference.class;
            info.name = "includedCountryGroupsForMarineVoyageTo";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size())
        {
            info.type = SicsInsurableObjectReferenceByName.class;
            info.name = "locations";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "includedRefData";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "excludedRefData";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "includedMethodRefData";
            info.namespace= "";
        }
        if(propertyIndex>=count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size() && propertyIndex < count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()+this.excludedLegalAreasConditionally.size())
        {
            info.type = ClassificationConditionalExclusion.class;
            info.name = "excludedLegalAreasConditionally";
            info.namespace= "";
        }
        if(propertyIndex==count+0+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()+this.excludedLegalAreasConditionally.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "note";
            info.namespace= "";
        }
        if(propertyIndex==count+1+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()+this.excludedLegalAreasConditionally.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "enlargeParentClassification";
            info.namespace= "";
        }
        if(propertyIndex==count+2+this.includedCountries.size()+this.excludedCountries.size()+this.includedStates.size()+this.excludedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.includedResidenceCountries.size()+this.includedResidenceStates.size()+this.includedResidenceCountryGroups.size()+this.includedResidenceStateGroups.size()+this.includedCountriesForMarineVoyageFrom.size()+this.includedCountriesForMarineVoyageTo.size()+this.includedCountryGroupsForMarineVoyageFrom.size()+this.includedCountryGroupsForMarineVoyageTo.size()+this.locations.size()+this.includedRefData.size()+this.excludedRefData.size()+this.includedMethodRefData.size()+this.excludedLegalAreasConditionally.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "principalMainClassOfBusiness";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

