package SicsWsTaskManagementEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 30/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;
import java.math.BigDecimal;

public class LimitPremiumCondition extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Notebook Page: "Main"
	*                      (Limits)
	*                      (Currency)
	*/
    public ArrayList< CurrencyForLimitPremium> currencyForLimitPremium =new ArrayList<CurrencyForLimitPremium >();
    
	/**
	* Set this element to false if you do not want to delete existing limits. Even if you set this element to false, 
	*                         some sublimits on the Detail/Original Detail tab may be deleted. There is no way to    uniquely identify a 
	*                         specific sub limit, so all sublimits of the same type as in input will be deleted before input is processed.
	*                         For example If the input contain a limit condition with refConditionPer GOODS and the business already has 
	*                         one or more sublimits for GOODS, all these sublimits will be deleted before input is processed.
	*/
    public Boolean deleteExistingLimits;
    
	/**
	* XXXXXX
	*                      (Limit)
	*/
    public ArrayList< LimitCondition> limitCondition =new ArrayList<LimitCondition >();
    
	/**
	* SubclassNumber: 411. SicsRefProtectionCoverBasis
	*                      CODE: GR | NAAP | NAPPBR | NAPPNPO | NANPPBR | NAFSP | NAFP | NANPFP | NAPP | NANPFAPP | NAPFSP | NAPFP.
	*                      (CoverBasis)
	*/
    public SicsReferenceDataReference refCoverBasis;
    
	/**
	* Only used when Cover Basis is Net
	*                      % Of Gross
	*/
    public String limitPercentOfOriginal;
    
	/**
	* Only valid when refCoverBasis CODE = NAAP
	*                      Original Cost Participation
	*/
    public Boolean isOriginalCostParticipation;
    
	/**
	* SubclassNumber: 80. SicsRefLineIndicator
	*                      CODE: NL | GL | U.  Only when refPremiumType = PT_PROP
	*                      XXXXXX
	*/
    public SicsReferenceDataReference lineIndicator;
    
	/**
	* XXXXXX
	*                      XXXXXX
	*/
    public BigDecimal totalLines;
    
	/**
	* only for prop fac
	*                      Sum Up To Parent Section
	*/
    public Boolean mainSumUpToParentSection;
    
	/**
	* XXXXXX
	*                      (Sum Up To) Main
	*/
    public Boolean detailSumUpToMain;
    
	/**
	* XXXXXX
	*                      (Sum Up To) Parent Section
	*/
    public Boolean detailSumUpToParentSection;
    
	/**
	* SubclassNumber: 134.  SicsRefBusinessPremiumType
	* 
	*                      Type of Business                     CODE         Label
	* 
	*                      Proportional  Treaty                  PT_PROP      Proportional  Treaty
	* 
	*                      Non-Proportional  Treaty            NPT_FIXD      Fixed Rate
	*                                                          NPT_FPLR      Permissible L/R (Retrospective)
	*                                                          NPT_FLAT      Flat Premium
	*                                                          NPT_AMT      Sliding Amount
	*                                                          NPT_SLID      Sliding Rate
	* 
	*                      Proportional Facultative            PF_FLAT      Flat Premium
	*                                                          PF_PROP      Proportional
	* 
	*                      Non-Proportional Facultative         NPF_FIXD      Fixed Rate
	*                                                          NPF_FLAT      Flat Premium
	*                                                          NPF_O_FIXD   Original Fixed Rate
	*                                                          NPF_O_FLAT   Original Flat Premium
	*                                                          NPF_SLID      Sliding Rate
	*                      Premium Type
	*/
    public SicsReferenceDataReference refPremiumType;
    
	/**
	* Only valid for prop treaty
	*                      Indicator
	*/
    public SicsAccountingEntryCodeGroupReference premiumIndicator;
    
	/**
	* XXXXXX
	*                      (Premium)
	*/
    public ArrayList< Premium_1> premium =new ArrayList<Premium_1 >();
    
	/**
	* XXXXXX
	*                      Annual
	*/
    public Boolean isAnnualPremium;
    
	/**
	* Only when refPremiumType = PF_PROP, NPF_SLID
	*                      Warranty
	*/
    public BigDecimal warrantyPercent;
    
	/**
	* XXXXXX
	*                      Warranty Date
	*/
    public java.util.Date warrantyDate;
    
	/**
	* SubclassNumber: 539   . SicsRefBusinessSupiBasis
	*                      CODE: ACCOUNTED | EARNED | WRITTEN.
	*                      Should not be used for NonProp fac business.
	*                      Premium Basis
	*/
    public SicsReferenceDataReference refPremiumBasis;
    
	/**
	* XXXXXX
	*                      SUPI/Exposure
	*/
    public BigDecimal premiumRateBasisAmount;
    
	/**
	* XXXXXX
	*                      Sum Up
	*/
    public Boolean isSUPISumUp;
    
	/**
	* Entry Code Group where category = (SUBCLASS=223. CODE= "SUPIP" when refPremiumType = "PT_PROP", else CODE= "SUPINP").
	*                      SUPI Indicator
	*/
    public SicsAccountingEntryCodeGroupReference premiumRateBasisIndicator;
    
	/**
	* Only when refPremiumType =NPF_SLID, NPT_FIXD, NPT_SLID
	*                      Revised
	*/
    public BigDecimal revisedPremiumRateBasisAmount;
    
	/**
	* XXXXXX
	*                      Sum Up
	*/
    public Boolean isRevisedSUPISumUp;
    
	/**
	* XXXXXX
	*                      Period / -
	*/
    public SicsWsTimespanReference premiumPeriod;
    
	/**
	* XXXXXX
	*                      No. of Periods
	*/
    public Integer numberOfPeriods;
    
	/**
	* XXXXXX
	*                      Loading
	*/
    public Integer loadingFactorDividend;
    
	/**
	* XXXXXX
	*                      /
	*/
    public Integer loadingFactorDivisor;
    
	/**
	* Is SUPI expr. as part of order
	*/
    public Boolean isSUPIExpressedAsPartOfOrder;
    
	/**
	* XXXXXX
	*                      Premium Rate
	*/
    public SicsRateExtendedReference premiumRate;
    
	/**
	* Only valid for Non prop treaty Outward cedent contract.
	*                      Special Premium
	*/
    public Boolean hasSpecialPremium;
    
	/**
	* XXXXXX
	*                      (Is Manual) Rate On Line checkbox
	*/
    public Boolean isManualRateOnLine;
    
	/**
	* XXXXXX
	*                      Rate On Line
	*/
    public SicsRateReference rateOnLine;
    
	/**
	* Used for Non-Prop Tty Sliding Amount
	*                      Minimum
	*/
    public BigDecimal minimumPremiumAmount;
    
	/**
	* Used for Non-Prop Tty Sliding Amount
	*                      Maximum
	*/
    public BigDecimal maximumPremiumAmount;
    
	/**
	* Used for Non-Prop Tty Sliding Rate
	*                      Minimum
	*/
    public SicsRateReference minimumPremiumRate;
    
	/**
	* Used for Non-Prop Tty Sliding Rate
	*                      Maximum
	*/
    public SicsRateReference maximumPremiumRate;
    
	/**
	* Used for Non-Prop Tty Sliding Rate
	*                      Provisional
	*/
    public SicsRateReference provisionalPremiumRate;
    
	/**
	* Used for Non-Prop Tty Stop Loss Business.  
	*                      SubclassNumber: 540.
	*                      CODE: GROSS_GROSS | GROSS | NET | NET_NET.
	*                      Result Indicator
	*/
    public SicsReferenceDataReference resultIndicator;
    
	/**
	* Used for Non-Prop Tty Stop Loss Business.  
	*                      SubclassNumber: 539.
	*                      CODE: ACCOUNTED | EARNED | WRITTEN.
	*                      Result Basis
	*/
    public SicsReferenceDataReference resultBasis;
    
	/**
	* Permissible Loss Ratio
	*/
    public Integer permissibleLossRatio;
    
	/**
	* Upswing
	*/
    public Integer upswing;
    
	/**
	* Downswing
	*/
    public Integer downswing;
    
	/**
	* Subject Limit On Loss Amount
	*/
    public Integer subjectLimitOnLossAmount;
    
	/**
	* (Periods) From
	*/
    public java.util.Date fromDate;
    
	/**
	* To
	*/
    public java.util.Date toDate;
    
	/**
	* Entry Code Group where category = (SUBCLASS=223. CODE= "PRELR" ).
	*                      Premium
	*/
    public SicsAccountingEntryCodeGroupReference premiumEntryCodeGroup;
    
	/**
	* Entry Code Group where category = (SUBCLASS=223. CODE= "LOSSLR" ).
	*                      Loss
	*/
    public SicsAccountingEntryCodeGroupReference lossEntryCodeGroup;
    
	/**
	* Include Reserve (Premium)
	*/
    public Boolean includePremiumReserve;
    
	/**
	* Include Reserve (Loss)
	*/
    public Boolean includeLossReserve;
    
	/**
	* Credit Carried Forward
	*/
    public Integer yearsCreditCarriedForward;
    
	/**
	* To Extinction (Credit)
	*/
    public Boolean creditCarriedForwardToExtinction;
    
	/**
	* Deficit Carried Forward
	*/
    public Integer yearsDeficitCarriedForward;
    
	/**
	* To Extinction (Deficit)
	*/
    public Boolean deficitCarriedForwardToExtinction;
    
	/**
	* XXXXXX
	*                      (Notebook Page: Instalments)
	*/
    public InstalmentInput instalmentInput;
    
	/**
	* Tab: Special Acceptance Premiums
	*/
    public SpecialAcceptancePremiumsInput specialAcceptancePremiumsInput;
    
	/**
	* XXXXXX
	*                      (Notebook Page: Adjustments)
	*/
    public AdjustmentInput adjustmentInput;
    
	/**
	* XXXXXX
	*                      Premium Note
	*/
    public String premiumNote;
    
	/**
	* XXXXXX
	*                      Limit Note
	*/
    public String limitNote;
    
	/**
	* Limit Index (For Prop Direct Business) If this field is false, the limit index will be made nil.
	*/
    public SicsCountryIndexPointReference limitIndex;

    public LimitPremiumCondition ()
    {
    }

    public LimitPremiumCondition (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("currencyForLimitPremium"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.currencyForLimitPremium==null)
                        {
                            this.currencyForLimitPremium = new ArrayList< CurrencyForLimitPremium>();
                        }
                        java.lang.Object j =obj;
                        CurrencyForLimitPremium j1= (CurrencyForLimitPremium)__envelope.get(j,CurrencyForLimitPremium.class,false);
                        this.currencyForLimitPremium.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("deleteExistingLimits"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.deleteExistingLimits = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.deleteExistingLimits = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("limitCondition"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.limitCondition==null)
                        {
                            this.limitCondition = new ArrayList< LimitCondition>();
                        }
                        java.lang.Object j =obj;
                        LimitCondition j1= (LimitCondition)__envelope.get(j,LimitCondition.class,false);
                        this.limitCondition.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("refCoverBasis"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.refCoverBasis = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("limitPercentOfOriginal"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.limitPercentOfOriginal = j.toString();
                            }
                        }
                        else{
                            this.limitPercentOfOriginal = obj.toString();
                        }
                    }
                    continue;
                }
                if (info.name.equals("isOriginalCostParticipation"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isOriginalCostParticipation = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isOriginalCostParticipation = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lineIndicator"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.lineIndicator = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("totalLines"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.totalLines = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.totalLines = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("mainSumUpToParentSection"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.mainSumUpToParentSection = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.mainSumUpToParentSection = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("detailSumUpToMain"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.detailSumUpToMain = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.detailSumUpToMain = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("detailSumUpToParentSection"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.detailSumUpToParentSection = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.detailSumUpToParentSection = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("refPremiumType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.refPremiumType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("premiumIndicator"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.premiumIndicator = (SicsAccountingEntryCodeGroupReference)__envelope.get(j,SicsAccountingEntryCodeGroupReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("premium"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.premium==null)
                        {
                            this.premium = new ArrayList< Premium_1>();
                        }
                        java.lang.Object j =obj;
                        Premium_1 j1= (Premium_1)__envelope.get(j,Premium_1.class,false);
                        this.premium.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("isAnnualPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAnnualPremium = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAnnualPremium = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("warrantyPercent"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.warrantyPercent = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.warrantyPercent = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("warrantyDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.warrantyDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.warrantyDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("refPremiumBasis"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.refPremiumBasis = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("premiumRateBasisAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.premiumRateBasisAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.premiumRateBasisAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isSUPISumUp"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isSUPISumUp = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isSUPISumUp = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("premiumRateBasisIndicator"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.premiumRateBasisIndicator = (SicsAccountingEntryCodeGroupReference)__envelope.get(j,SicsAccountingEntryCodeGroupReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("revisedPremiumRateBasisAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.revisedPremiumRateBasisAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.revisedPremiumRateBasisAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isRevisedSUPISumUp"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isRevisedSUPISumUp = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isRevisedSUPISumUp = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("premiumPeriod"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.premiumPeriod = (SicsWsTimespanReference)__envelope.get(j,SicsWsTimespanReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("numberOfPeriods"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.numberOfPeriods = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.numberOfPeriods = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("loadingFactorDividend"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.loadingFactorDividend = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.loadingFactorDividend = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("loadingFactorDivisor"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.loadingFactorDivisor = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.loadingFactorDivisor = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isSUPIExpressedAsPartOfOrder"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isSUPIExpressedAsPartOfOrder = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isSUPIExpressedAsPartOfOrder = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("premiumRate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.premiumRate = (SicsRateExtendedReference)__envelope.get(j,SicsRateExtendedReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("hasSpecialPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasSpecialPremium = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasSpecialPremium = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isManualRateOnLine"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isManualRateOnLine = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isManualRateOnLine = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("rateOnLine"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.rateOnLine = (SicsRateReference)__envelope.get(j,SicsRateReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("minimumPremiumAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.minimumPremiumAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.minimumPremiumAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("maximumPremiumAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.maximumPremiumAmount = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.maximumPremiumAmount = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("minimumPremiumRate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.minimumPremiumRate = (SicsRateReference)__envelope.get(j,SicsRateReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("maximumPremiumRate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.maximumPremiumRate = (SicsRateReference)__envelope.get(j,SicsRateReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("provisionalPremiumRate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.provisionalPremiumRate = (SicsRateReference)__envelope.get(j,SicsRateReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("resultIndicator"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.resultIndicator = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("resultBasis"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.resultBasis = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("permissibleLossRatio"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.permissibleLossRatio = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.permissibleLossRatio = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("upswing"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.upswing = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.upswing = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("downswing"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.downswing = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.downswing = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("subjectLimitOnLossAmount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.subjectLimitOnLossAmount = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.subjectLimitOnLossAmount = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("fromDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.fromDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.fromDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("toDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.toDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.toDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("premiumEntryCodeGroup"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.premiumEntryCodeGroup = (SicsAccountingEntryCodeGroupReference)__envelope.get(j,SicsAccountingEntryCodeGroupReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("lossEntryCodeGroup"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.lossEntryCodeGroup = (SicsAccountingEntryCodeGroupReference)__envelope.get(j,SicsAccountingEntryCodeGroupReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("includePremiumReserve"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.includePremiumReserve = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.includePremiumReserve = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("includeLossReserve"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.includeLossReserve = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.includeLossReserve = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("yearsCreditCarriedForward"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.yearsCreditCarriedForward = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.yearsCreditCarriedForward = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("creditCarriedForwardToExtinction"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.creditCarriedForwardToExtinction = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.creditCarriedForwardToExtinction = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("yearsDeficitCarriedForward"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.yearsDeficitCarriedForward = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.yearsDeficitCarriedForward = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("deficitCarriedForwardToExtinction"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.deficitCarriedForwardToExtinction = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.deficitCarriedForwardToExtinction = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("instalmentInput"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.instalmentInput = (InstalmentInput)__envelope.get(j,InstalmentInput.class,false);
                    }
                    continue;
                }
                if (info.name.equals("specialAcceptancePremiumsInput"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.specialAcceptancePremiumsInput = (SpecialAcceptancePremiumsInput)__envelope.get(j,SpecialAcceptancePremiumsInput.class,false);
                    }
                    continue;
                }
                if (info.name.equals("adjustmentInput"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.adjustmentInput = (AdjustmentInput)__envelope.get(j,AdjustmentInput.class,false);
                    }
                    continue;
                }
                if (info.name.equals("premiumNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.premiumNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.premiumNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("limitNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.limitNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.limitNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("limitIndex"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.limitIndex = (SicsCountryIndexPointReference)__envelope.get(j,SicsCountryIndexPointReference.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.currencyForLimitPremium.size())
        {
            return this.currencyForLimitPremium.get(propertyIndex-(count+0));
        }
        if(propertyIndex==count+0+this.currencyForLimitPremium.size())
        {
            return this.deleteExistingLimits!=null?this.deleteExistingLimits:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+1+this.currencyForLimitPremium.size() && propertyIndex < count+1+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.limitCondition.get(propertyIndex-(count+1+this.currencyForLimitPremium.size()));
        }
        if(propertyIndex==count+1+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return refCoverBasis;
        }
        if(propertyIndex==count+2+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.limitPercentOfOriginal!=null?this.limitPercentOfOriginal:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.isOriginalCostParticipation!=null?this.isOriginalCostParticipation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.lineIndicator!=null?this.lineIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.totalLines!=null?this.totalLines.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.mainSumUpToParentSection!=null?this.mainSumUpToParentSection:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.detailSumUpToMain!=null?this.detailSumUpToMain:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.detailSumUpToParentSection!=null?this.detailSumUpToParentSection:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return refPremiumType;
        }
        if(propertyIndex==count+10+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            return this.premiumIndicator!=null?this.premiumIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+11+this.currencyForLimitPremium.size()+this.limitCondition.size() && propertyIndex < count+11+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.premium.get(propertyIndex-(count+11+this.currencyForLimitPremium.size()+this.limitCondition.size()));
        }
        if(propertyIndex==count+11+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.isAnnualPremium!=null?this.isAnnualPremium:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.warrantyPercent!=null?this.warrantyPercent.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.warrantyDate!=null?Helper.getDateFormat().format(this.warrantyDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.refPremiumBasis!=null?this.refPremiumBasis:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.premiumRateBasisAmount!=null?this.premiumRateBasisAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.isSUPISumUp!=null?this.isSUPISumUp:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.premiumRateBasisIndicator!=null?this.premiumRateBasisIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.revisedPremiumRateBasisAmount!=null?this.revisedPremiumRateBasisAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+19+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.isRevisedSUPISumUp!=null?this.isRevisedSUPISumUp:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+20+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.premiumPeriod!=null?this.premiumPeriod:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.numberOfPeriods!=null?this.numberOfPeriods:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.loadingFactorDividend!=null?this.loadingFactorDividend:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.loadingFactorDivisor!=null?this.loadingFactorDivisor:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+24+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.isSUPIExpressedAsPartOfOrder!=null?this.isSUPIExpressedAsPartOfOrder:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+25+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.premiumRate!=null?this.premiumRate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+26+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.hasSpecialPremium!=null?this.hasSpecialPremium:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+27+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.isManualRateOnLine!=null?this.isManualRateOnLine:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+28+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.rateOnLine!=null?this.rateOnLine:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+29+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.minimumPremiumAmount!=null?this.minimumPremiumAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+30+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.maximumPremiumAmount!=null?this.maximumPremiumAmount.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+31+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.minimumPremiumRate!=null?this.minimumPremiumRate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+32+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.maximumPremiumRate!=null?this.maximumPremiumRate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+33+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.provisionalPremiumRate!=null?this.provisionalPremiumRate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+34+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.resultIndicator!=null?this.resultIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+35+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.resultBasis!=null?this.resultBasis:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+36+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.permissibleLossRatio!=null?this.permissibleLossRatio:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+37+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.upswing!=null?this.upswing:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+38+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.downswing!=null?this.downswing:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+39+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.subjectLimitOnLossAmount!=null?this.subjectLimitOnLossAmount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+40+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.fromDate!=null?Helper.getDateFormat().format(this.fromDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+41+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.toDate!=null?Helper.getDateFormat().format(this.toDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+42+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.premiumEntryCodeGroup!=null?this.premiumEntryCodeGroup:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+43+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.lossEntryCodeGroup!=null?this.lossEntryCodeGroup:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+44+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.includePremiumReserve!=null?this.includePremiumReserve:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+45+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.includeLossReserve!=null?this.includeLossReserve:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+46+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.yearsCreditCarriedForward!=null?this.yearsCreditCarriedForward:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+47+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.creditCarriedForwardToExtinction!=null?this.creditCarriedForwardToExtinction:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+48+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.yearsDeficitCarriedForward!=null?this.yearsDeficitCarriedForward:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+49+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.deficitCarriedForwardToExtinction!=null?this.deficitCarriedForwardToExtinction:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+50+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.instalmentInput!=null?this.instalmentInput:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+51+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.specialAcceptancePremiumsInput!=null?this.specialAcceptancePremiumsInput:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+52+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.adjustmentInput!=null?this.adjustmentInput:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+53+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.premiumNote!=null?this.premiumNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+54+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.limitNote!=null?this.limitNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+55+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            return this.limitIndex!=null?this.limitIndex:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+56+currencyForLimitPremium.size()+limitCondition.size()+premium.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex>=count+0 && propertyIndex < count+0+this.currencyForLimitPremium.size())
        {
            info.type = CurrencyForLimitPremium.class;
            info.name = "currencyForLimitPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+0+this.currencyForLimitPremium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "deleteExistingLimits";
            info.namespace= "";
        }
        if(propertyIndex>=count+1+this.currencyForLimitPremium.size() && propertyIndex < count+1+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = LimitCondition.class;
            info.name = "limitCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+1+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "refCoverBasis";
            info.namespace= "";
        }
        if(propertyIndex==count+2+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "limitPercentOfOriginal";
            info.namespace= "";
        }
        if(propertyIndex==count+3+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isOriginalCostParticipation";
            info.namespace= "";
        }
        if(propertyIndex==count+4+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "lineIndicator";
            info.namespace= "";
        }
        if(propertyIndex==count+5+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "totalLines";
            info.namespace= "";
        }
        if(propertyIndex==count+6+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "mainSumUpToParentSection";
            info.namespace= "";
        }
        if(propertyIndex==count+7+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "detailSumUpToMain";
            info.namespace= "";
        }
        if(propertyIndex==count+8+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "detailSumUpToParentSection";
            info.namespace= "";
        }
        if(propertyIndex==count+9+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "refPremiumType";
            info.namespace= "";
        }
        if(propertyIndex==count+10+this.currencyForLimitPremium.size()+this.limitCondition.size())
        {
            info.type = SicsAccountingEntryCodeGroupReference.class;
            info.name = "premiumIndicator";
            info.namespace= "";
        }
        if(propertyIndex>=count+11+this.currencyForLimitPremium.size()+this.limitCondition.size() && propertyIndex < count+11+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = Premium_1.class;
            info.name = "premium";
            info.namespace= "";
        }
        if(propertyIndex==count+11+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAnnualPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+12+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "warrantyPercent";
            info.namespace= "";
        }
        if(propertyIndex==count+13+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "warrantyDate";
            info.namespace= "";
        }
        if(propertyIndex==count+14+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "refPremiumBasis";
            info.namespace= "";
        }
        if(propertyIndex==count+15+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "premiumRateBasisAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+16+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isSUPISumUp";
            info.namespace= "";
        }
        if(propertyIndex==count+17+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsAccountingEntryCodeGroupReference.class;
            info.name = "premiumRateBasisIndicator";
            info.namespace= "";
        }
        if(propertyIndex==count+18+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "revisedPremiumRateBasisAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+19+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isRevisedSUPISumUp";
            info.namespace= "";
        }
        if(propertyIndex==count+20+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsWsTimespanReference.class;
            info.name = "premiumPeriod";
            info.namespace= "";
        }
        if(propertyIndex==count+21+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "numberOfPeriods";
            info.namespace= "";
        }
        if(propertyIndex==count+22+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "loadingFactorDividend";
            info.namespace= "";
        }
        if(propertyIndex==count+23+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "loadingFactorDivisor";
            info.namespace= "";
        }
        if(propertyIndex==count+24+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isSUPIExpressedAsPartOfOrder";
            info.namespace= "";
        }
        if(propertyIndex==count+25+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsRateExtendedReference.class;
            info.name = "premiumRate";
            info.namespace= "";
        }
        if(propertyIndex==count+26+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasSpecialPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+27+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isManualRateOnLine";
            info.namespace= "";
        }
        if(propertyIndex==count+28+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsRateReference.class;
            info.name = "rateOnLine";
            info.namespace= "";
        }
        if(propertyIndex==count+29+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "minimumPremiumAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+30+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "maximumPremiumAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+31+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsRateReference.class;
            info.name = "minimumPremiumRate";
            info.namespace= "";
        }
        if(propertyIndex==count+32+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsRateReference.class;
            info.name = "maximumPremiumRate";
            info.namespace= "";
        }
        if(propertyIndex==count+33+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsRateReference.class;
            info.name = "provisionalPremiumRate";
            info.namespace= "";
        }
        if(propertyIndex==count+34+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "resultIndicator";
            info.namespace= "";
        }
        if(propertyIndex==count+35+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "resultBasis";
            info.namespace= "";
        }
        if(propertyIndex==count+36+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "permissibleLossRatio";
            info.namespace= "";
        }
        if(propertyIndex==count+37+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "upswing";
            info.namespace= "";
        }
        if(propertyIndex==count+38+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "downswing";
            info.namespace= "";
        }
        if(propertyIndex==count+39+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "subjectLimitOnLossAmount";
            info.namespace= "";
        }
        if(propertyIndex==count+40+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "fromDate";
            info.namespace= "";
        }
        if(propertyIndex==count+41+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "toDate";
            info.namespace= "";
        }
        if(propertyIndex==count+42+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsAccountingEntryCodeGroupReference.class;
            info.name = "premiumEntryCodeGroup";
            info.namespace= "";
        }
        if(propertyIndex==count+43+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsAccountingEntryCodeGroupReference.class;
            info.name = "lossEntryCodeGroup";
            info.namespace= "";
        }
        if(propertyIndex==count+44+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "includePremiumReserve";
            info.namespace= "";
        }
        if(propertyIndex==count+45+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "includeLossReserve";
            info.namespace= "";
        }
        if(propertyIndex==count+46+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "yearsCreditCarriedForward";
            info.namespace= "";
        }
        if(propertyIndex==count+47+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "creditCarriedForwardToExtinction";
            info.namespace= "";
        }
        if(propertyIndex==count+48+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "yearsDeficitCarriedForward";
            info.namespace= "";
        }
        if(propertyIndex==count+49+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "deficitCarriedForwardToExtinction";
            info.namespace= "";
        }
        if(propertyIndex==count+50+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = InstalmentInput.class;
            info.name = "instalmentInput";
            info.namespace= "";
        }
        if(propertyIndex==count+51+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SpecialAcceptancePremiumsInput.class;
            info.name = "specialAcceptancePremiumsInput";
            info.namespace= "";
        }
        if(propertyIndex==count+52+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = AdjustmentInput.class;
            info.name = "adjustmentInput";
            info.namespace= "";
        }
        if(propertyIndex==count+53+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "premiumNote";
            info.namespace= "";
        }
        if(propertyIndex==count+54+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "limitNote";
            info.namespace= "";
        }
        if(propertyIndex==count+55+this.currencyForLimitPremium.size()+this.limitCondition.size()+this.premium.size())
        {
            info.type = SicsCountryIndexPointReference.class;
            info.name = "limitIndex";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

