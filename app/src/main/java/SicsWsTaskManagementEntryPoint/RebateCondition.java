package SicsWsTaskManagementEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 30/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

public class RebateCondition extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public java.util.Date calculationDate;
    
    public Boolean isGross;
    
    public BigDecimal lossRatioPercent;
    
    public Integer periodsBeforeCalculation;
    
    public BigDecimal rebatePercent;
    
    public String rebatePropertyRemark;
    
    public RebatePremiumDiscountRate rebatePremiumDiscountRate;
    
    public NoClaimBonus noClaimBonus;
    
    public String rebatePropertyNote;

    public RebateCondition ()
    {
    }

    public RebateCondition (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("calculationDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.calculationDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.calculationDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isGross"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isGross = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isGross = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lossRatioPercent"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lossRatioPercent = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.lossRatioPercent = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("periodsBeforeCalculation"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.periodsBeforeCalculation = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.periodsBeforeCalculation = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("rebatePercent"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.rebatePercent = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.rebatePercent = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("rebatePropertyRemark"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.rebatePropertyRemark = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.rebatePropertyRemark = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("rebatePremiumDiscountRate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.rebatePremiumDiscountRate = (RebatePremiumDiscountRate)__envelope.get(j,RebatePremiumDiscountRate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("noClaimBonus"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.noClaimBonus = (NoClaimBonus)__envelope.get(j,NoClaimBonus.class,false);
                    }
                    continue;
                }
                if (info.name.equals("rebatePropertyNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.rebatePropertyNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.rebatePropertyNote = (String)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.calculationDate!=null?Helper.getDateFormat().format(this.calculationDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.isGross!=null?this.isGross:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.lossRatioPercent!=null?this.lossRatioPercent.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.periodsBeforeCalculation!=null?this.periodsBeforeCalculation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.rebatePercent!=null?this.rebatePercent.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.rebatePropertyRemark!=null?this.rebatePropertyRemark:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.rebatePremiumDiscountRate!=null?this.rebatePremiumDiscountRate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.noClaimBonus!=null?this.noClaimBonus:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.rebatePropertyNote!=null?this.rebatePropertyNote:SoapPrimitive.NullNilElement;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+9;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "calculationDate";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isGross";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "lossRatioPercent";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "periodsBeforeCalculation";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "rebatePercent";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "rebatePropertyRemark";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = RebatePremiumDiscountRate.class;
            info.name = "rebatePremiumDiscountRate";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = NoClaimBonus.class;
            info.name = "noClaimBonus";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "rebatePropertyNote";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

