package ips;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class ClaimScopeOfCoverToClaimRelationshipCreate extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
    public SectionSpecificClassificationList sectionSpecificClassificationList;
    
    public java.util.Date claimAdvisedDate;
    
    public java.util.Date claimActionDate;
    
    public String actionComment;
    
    public java.util.Date adviceReceivedDate;
    
    public AdviceMonetaryAmount adviceAmountCurrency;
    
    public ClaimReferenceList claimReferenceList;
    
    public Boolean isIndexed;
    
    public Boolean isAutomaticIndexCalculation;
    
    public SicsCountryIndexRowReference baseIndex;
    
    public ClaimOutwardCedentsContractRelationList protectionAllocationOccList;
    
    public ClaimProtectionProgramRelationList protectionAllocationPpList;
    
    public ClaimProgramPeriodReference scopeOfCoverToClaimToCPP;
    
    public ClaimToInsuredClaimantRelationList insuredClaimantList;
    
    public ClaimStatusCreateUpdate claimStatus;
    
    public ClaimDisposition claimDisposition;

    public ClaimScopeOfCoverToClaimRelationshipCreate ()
    {
    }

    public ClaimScopeOfCoverToClaimRelationshipCreate (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("sectionSpecificClassificationList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.sectionSpecificClassificationList = (SectionSpecificClassificationList)__envelope.get(j,SectionSpecificClassificationList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimAdvisedDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.claimAdvisedDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.claimAdvisedDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("claimActionDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.claimActionDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.claimActionDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("actionComment"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.actionComment = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.actionComment = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("adviceReceivedDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.adviceReceivedDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.adviceReceivedDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("adviceAmountCurrency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.adviceAmountCurrency = (AdviceMonetaryAmount)__envelope.get(j,AdviceMonetaryAmount.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimReferenceList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimReferenceList = new ClaimReferenceList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("isIndexed"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isIndexed = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isIndexed = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAutomaticIndexCalculation"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAutomaticIndexCalculation = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAutomaticIndexCalculation = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("baseIndex"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.baseIndex = (SicsCountryIndexRowReference)__envelope.get(j,SicsCountryIndexRowReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("protectionAllocationOccList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.protectionAllocationOccList = new ClaimOutwardCedentsContractRelationList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("protectionAllocationPpList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.protectionAllocationPpList = new ClaimProtectionProgramRelationList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("scopeOfCoverToClaimToCPP"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.scopeOfCoverToClaimToCPP = (ClaimProgramPeriodReference)__envelope.get(j,ClaimProgramPeriodReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("insuredClaimantList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.insuredClaimantList = new ClaimToInsuredClaimantRelationList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("claimStatus"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimStatus = (ClaimStatusCreateUpdate)__envelope.get(j,ClaimStatusCreateUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimDisposition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimDisposition = (ClaimDisposition)__envelope.get(j,ClaimDisposition.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.sectionSpecificClassificationList!=null?this.sectionSpecificClassificationList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.claimAdvisedDate!=null?Helper.getDateFormat().format(this.claimAdvisedDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.claimActionDate!=null?Helper.getDateFormat().format(this.claimActionDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.actionComment!=null?this.actionComment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.adviceReceivedDate!=null?Helper.getDateFormat().format(this.adviceReceivedDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.adviceAmountCurrency!=null?this.adviceAmountCurrency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.claimReferenceList!=null?this.claimReferenceList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.isIndexed!=null?this.isIndexed:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.isAutomaticIndexCalculation!=null?this.isAutomaticIndexCalculation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.baseIndex!=null?this.baseIndex:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.protectionAllocationOccList!=null?this.protectionAllocationOccList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==11)
        {
            return this.protectionAllocationPpList!=null?this.protectionAllocationPpList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==12)
        {
            return this.scopeOfCoverToClaimToCPP!=null?this.scopeOfCoverToClaimToCPP:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==13)
        {
            return this.insuredClaimantList!=null?this.insuredClaimantList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==14)
        {
            return this.claimStatus!=null?this.claimStatus:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==15)
        {
            return this.claimDisposition!=null?this.claimDisposition:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 16;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = SectionSpecificClassificationList.class;
            info.name = "sectionSpecificClassificationList";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "claimAdvisedDate";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "claimActionDate";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "actionComment";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "adviceReceivedDate";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = AdviceMonetaryAmount.class;
            info.name = "adviceAmountCurrency";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "claimReferenceList";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isIndexed";
            info.namespace= "";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAutomaticIndexCalculation";
            info.namespace= "";
        }
        if(propertyIndex==9)
        {
            info.type = SicsCountryIndexRowReference.class;
            info.name = "baseIndex";
            info.namespace= "";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "protectionAllocationOccList";
            info.namespace= "";
        }
        if(propertyIndex==11)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "protectionAllocationPpList";
            info.namespace= "";
        }
        if(propertyIndex==12)
        {
            info.type = ClaimProgramPeriodReference.class;
            info.name = "scopeOfCoverToClaimToCPP";
            info.namespace= "";
        }
        if(propertyIndex==13)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "insuredClaimantList";
            info.namespace= "";
        }
        if(propertyIndex==14)
        {
            info.type = ClaimStatusCreateUpdate.class;
            info.name = "claimStatus";
            info.namespace= "";
        }
        if(propertyIndex==15)
        {
            info.type = ClaimDisposition.class;
            info.name = "claimDisposition";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

