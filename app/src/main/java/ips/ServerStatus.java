package ips;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class ServerStatus extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
    public String version;
    
    public String runningStatus;
    
    public Integer totalNumberOfRequestsProcessed=0;
    
    public Integer averageProcessingTime=0;
    
    public String xmlFilesCompatibilty;
    
    public String useOSAuthentication;
    
    public String applyServerSecurity;
    
    public String authenticationTokenValidity;
    
    public String tokenKeyFile;
    
    public String logRequestAndResponse;
    
    public String reportSoapFaultAsHttpOk;
    
    public String flushNonWsStaticDataFromCache;
    
    public String sicsServerTimeZone;
    
    public Integer systemPoolsSize=0;
    
    public Integer idleSystemsCount=0;
    
    public Integer busySystemsCount=0;
    
    public Integer waitingRequestsCount=0;
    
    public ServerSystemStatusList systems;

    public ServerStatus ()
    {
    }

    public ServerStatus (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("version"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.version = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.version = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("runningStatus"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.runningStatus = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.runningStatus = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("totalNumberOfRequestsProcessed"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.totalNumberOfRequestsProcessed = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.totalNumberOfRequestsProcessed = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("averageProcessingTime"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.averageProcessingTime = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.averageProcessingTime = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("xmlFilesCompatibilty"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.xmlFilesCompatibilty = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.xmlFilesCompatibilty = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("useOSAuthentication"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.useOSAuthentication = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.useOSAuthentication = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("applyServerSecurity"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.applyServerSecurity = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.applyServerSecurity = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("authenticationTokenValidity"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.authenticationTokenValidity = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.authenticationTokenValidity = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("tokenKeyFile"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.tokenKeyFile = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.tokenKeyFile = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("logRequestAndResponse"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.logRequestAndResponse = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.logRequestAndResponse = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reportSoapFaultAsHttpOk"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.reportSoapFaultAsHttpOk = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.reportSoapFaultAsHttpOk = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("flushNonWsStaticDataFromCache"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.flushNonWsStaticDataFromCache = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.flushNonWsStaticDataFromCache = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("sicsServerTimeZone"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.sicsServerTimeZone = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.sicsServerTimeZone = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("systemPoolsSize"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.systemPoolsSize = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.systemPoolsSize = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("idleSystemsCount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.idleSystemsCount = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.idleSystemsCount = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("busySystemsCount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.busySystemsCount = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.busySystemsCount = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("waitingRequestsCount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.waitingRequestsCount = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.waitingRequestsCount = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("systems"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.systems = new ServerSystemStatusList(j,__envelope);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return version;
        }
        if(propertyIndex==1)
        {
            return runningStatus;
        }
        if(propertyIndex==2)
        {
            return totalNumberOfRequestsProcessed;
        }
        if(propertyIndex==3)
        {
            return averageProcessingTime;
        }
        if(propertyIndex==4)
        {
            return xmlFilesCompatibilty;
        }
        if(propertyIndex==5)
        {
            return useOSAuthentication;
        }
        if(propertyIndex==6)
        {
            return applyServerSecurity;
        }
        if(propertyIndex==7)
        {
            return authenticationTokenValidity;
        }
        if(propertyIndex==8)
        {
            return tokenKeyFile;
        }
        if(propertyIndex==9)
        {
            return logRequestAndResponse;
        }
        if(propertyIndex==10)
        {
            return reportSoapFaultAsHttpOk;
        }
        if(propertyIndex==11)
        {
            return flushNonWsStaticDataFromCache;
        }
        if(propertyIndex==12)
        {
            return this.sicsServerTimeZone!=null?this.sicsServerTimeZone:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==13)
        {
            return systemPoolsSize;
        }
        if(propertyIndex==14)
        {
            return idleSystemsCount;
        }
        if(propertyIndex==15)
        {
            return busySystemsCount;
        }
        if(propertyIndex==16)
        {
            return waitingRequestsCount;
        }
        if(propertyIndex==17)
        {
            return this.systems!=null?this.systems:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 18;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "version";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "runningStatus";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "totalNumberOfRequestsProcessed";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "averageProcessingTime";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "xmlFilesCompatibilty";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "useOSAuthentication";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "applyServerSecurity";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "authenticationTokenValidity";
            info.namespace= "";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "tokenKeyFile";
            info.namespace= "";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "logRequestAndResponse";
            info.namespace= "";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reportSoapFaultAsHttpOk";
            info.namespace= "";
        }
        if(propertyIndex==11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "flushNonWsStaticDataFromCache";
            info.namespace= "";
        }
        if(propertyIndex==12)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "sicsServerTimeZone";
            info.namespace= "";
        }
        if(propertyIndex==13)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "systemPoolsSize";
            info.namespace= "";
        }
        if(propertyIndex==14)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "idleSystemsCount";
            info.namespace= "";
        }
        if(propertyIndex==15)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "busySystemsCount";
            info.namespace= "";
        }
        if(propertyIndex==16)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "waitingRequestsCount";
            info.namespace= "";
        }
        if(propertyIndex==17)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "systems";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

