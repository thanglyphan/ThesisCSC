package ips;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class Activity extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public String activityDisplayName;
    
    public String nlsName;
    
    public String nlsDescription;
    
    public SicsTaskManagementActivityReference parentActivity;
    
    public SicsReferenceDataReference status;
    
    public String discriminator;
    
    public Integer priority=0;
    
    public SicsUserReference actualOwner;
    
    public TaskManagementPeopleAssignmentList potentialOwnerList;
    
    public String searchBy;
    
    public Integer sequence;
    
    public java.util.Date escalationTimerStartTime;
    
    public SicsTaskManagementActivityTemplateReference activityTemplate;
    
    public ActivityCommentReadList commentList;
    
    public ActivityAttachmentList attachmentList;
    
    public ActivityHistoryList historyList;
    
    public ActivityEscalationList escalationList;
    
    public ActivityList activityList;
    
    public ActivityInputDataFieldList inputDataFieldList;

    public Activity ()
    {
    }

    public Activity (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("activityDisplayName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.activityDisplayName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.activityDisplayName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("nlsName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.nlsName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.nlsName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("nlsDescription"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.nlsDescription = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.nlsDescription = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("parentActivity"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.parentActivity = (SicsTaskManagementActivityReference)__envelope.get(j,SicsTaskManagementActivityReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("status"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.status = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("discriminator"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.discriminator = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.discriminator = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("priority"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.priority = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.priority = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("actualOwner"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.actualOwner = (SicsUserReference)__envelope.get(j,SicsUserReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("potentialOwnerList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.potentialOwnerList = new TaskManagementPeopleAssignmentList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("searchBy"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.searchBy = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.searchBy = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("sequence"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.sequence = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.sequence = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("escalationTimerStartTime"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.escalationTimerStartTime = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.escalationTimerStartTime = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("activityTemplate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.activityTemplate = (SicsTaskManagementActivityTemplateReference)__envelope.get(j,SicsTaskManagementActivityTemplateReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("commentList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.commentList = new ActivityCommentReadList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("attachmentList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.attachmentList = new ActivityAttachmentList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("historyList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.historyList = new ActivityHistoryList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("escalationList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.escalationList = new ActivityEscalationList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("activityList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.activityList = new ActivityList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("inputDataFieldList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.inputDataFieldList = new ActivityInputDataFieldList(j,__envelope);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return activityDisplayName;
        }
        if(propertyIndex==count+1)
        {
            return nlsName;
        }
        if(propertyIndex==count+2)
        {
            return nlsDescription;
        }
        if(propertyIndex==count+3)
        {
            return this.parentActivity!=null?this.parentActivity:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex==count+4)
        {
            return status;
        }
        if(propertyIndex==count+5)
        {
            return this.discriminator!=null?this.discriminator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return priority;
        }
        if(propertyIndex==count+7)
        {
            return this.actualOwner!=null?this.actualOwner:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.potentialOwnerList!=null?this.potentialOwnerList:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex==count+9)
        {
            return this.searchBy!=null?this.searchBy:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.sequence!=null?this.sequence:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.escalationTimerStartTime!=null?Helper.getDateTimeFormat().format(this.escalationTimerStartTime):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return activityTemplate;
        }
        if(propertyIndex==count+13)
        {
            return this.commentList!=null?this.commentList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.attachmentList!=null?this.attachmentList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15)
        {
            return this.historyList!=null?this.historyList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16)
        {
            return this.escalationList!=null?this.escalationList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17)
        {
            return this.activityList!=null?this.activityList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18)
        {
            return this.inputDataFieldList!=null?this.inputDataFieldList:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+19;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "activityDisplayName";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "nlsName";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "nlsDescription";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = SicsTaskManagementActivityReference.class;
            info.name = "parentActivity";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "status";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "discriminator";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "priority";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = SicsUserReference.class;
            info.name = "actualOwner";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "potentialOwnerList";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "searchBy";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "sequence";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "escalationTimerStartTime";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = SicsTaskManagementActivityTemplateReference.class;
            info.name = "activityTemplate";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "commentList";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "attachmentList";
            info.namespace= "";
        }
        if(propertyIndex==count+15)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "historyList";
            info.namespace= "";
        }
        if(propertyIndex==count+16)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "escalationList";
            info.namespace= "";
        }
        if(propertyIndex==count+17)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "activityList";
            info.namespace= "";
        }
        if(propertyIndex==count+18)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "inputDataFieldList";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

