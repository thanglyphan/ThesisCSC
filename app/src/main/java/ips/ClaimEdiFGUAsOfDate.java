package ips;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

public class ClaimEdiFGUAsOfDate extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
    public java.util.Date asOfDate;
    
    public SicsCurrencyReference currency;
    
    public BigDecimal paid;
    
    public BigDecimal reserve;
    
    public BigDecimal incurred;
    
    public Boolean isEdiGenerated;
    
    public java.util.Date appliedTimeStamp;
    
    public SicsUserReference user;

    public ClaimEdiFGUAsOfDate ()
    {
    }

    public ClaimEdiFGUAsOfDate (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("asOfDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.asOfDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.asOfDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("currency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("paid"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.paid = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.paid = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reserve"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.reserve = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.reserve = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("incurred"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.incurred = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.incurred = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isEdiGenerated"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isEdiGenerated = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isEdiGenerated = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("appliedTimeStamp"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.appliedTimeStamp = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.appliedTimeStamp = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("user"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.user = (SicsUserReference)__envelope.get(j,SicsUserReference.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.asOfDate!=null?Helper.getDateFormat().format(this.asOfDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return currency;
        }
        if(propertyIndex==2)
        {
            return this.paid!=null?this.paid.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.reserve!=null?this.reserve.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.incurred!=null?this.incurred.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.isEdiGenerated!=null?this.isEdiGenerated:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.appliedTimeStamp!=null?Helper.getDateTimeFormat().format(this.appliedTimeStamp):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.user!=null?this.user:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 8;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "asOfDate";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "currency";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "paid";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reserve";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "incurred";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isEdiGenerated";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "appliedTimeStamp";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = SicsUserReference.class;
            info.name = "user";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

