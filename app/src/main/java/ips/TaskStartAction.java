package ips;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class TaskStartAction extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
    public SicsReferenceDataReference refDataType;
    
    public TaskStartActionParameterList inputParameterList;
    
    public TaskStartActionParameterList outputParameterList;

    public TaskStartAction ()
    {
    }

    public TaskStartAction (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("refDataType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.refDataType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("inputParameterList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.inputParameterList = new TaskStartActionParameterList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("outputParameterList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.outputParameterList = new TaskStartActionParameterList(j,__envelope);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return refDataType;
        }
        if(propertyIndex==1)
        {
            return this.inputParameterList!=null?this.inputParameterList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.outputParameterList!=null?this.outputParameterList:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 3;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "refDataType";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "inputParameterList";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "outputParameterList";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

