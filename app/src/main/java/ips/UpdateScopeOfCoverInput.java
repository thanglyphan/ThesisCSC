package ips;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class UpdateScopeOfCoverInput extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
	/**
	* will calculate exposure from limit/premium condition; and ourExposure from exposure *share    (unless ourExposure is specified)
	*/
    public Boolean calculateExposure;
    
	/**
	* The scopeOfCover to update.
	*/
    public SicsScopeOfCoverReference scopeOfCoverReference;
    
    public Integer amendmentNumber;
    
    public ScopeOfCover scopeOfCover;
    
    public CessionDeclarationScopeOfCover declaration;
    
    public CessionInsurableObjectScopeOfCover cession;

    public UpdateScopeOfCoverInput ()
    {
    }

    public UpdateScopeOfCoverInput (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("calculateExposure"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.calculateExposure = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.calculateExposure = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("scopeOfCoverReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.scopeOfCoverReference = (SicsScopeOfCoverReference)__envelope.get(j,SicsScopeOfCoverReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("amendmentNumber"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.amendmentNumber = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.amendmentNumber = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("scopeOfCover"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.scopeOfCover = (ScopeOfCover)__envelope.get(j,ScopeOfCover.class,false);
                    }
                    continue;
                }
                if (info.name.equals("declaration"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.declaration = (CessionDeclarationScopeOfCover)__envelope.get(j,CessionDeclarationScopeOfCover.class,false);
                    }
                    continue;
                }
                if (info.name.equals("cession"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.cession = (CessionInsurableObjectScopeOfCover)__envelope.get(j,CessionInsurableObjectScopeOfCover.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.calculateExposure!=null?this.calculateExposure:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return scopeOfCoverReference;
        }
        if(propertyIndex==2)
        {
            return this.amendmentNumber!=null?this.amendmentNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.scopeOfCover!=null?this.scopeOfCover:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.declaration!=null?this.declaration:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.cession!=null?this.cession:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 6;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "calculateExposure";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = SicsScopeOfCoverReference.class;
            info.name = "scopeOfCoverReference";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "amendmentNumber";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = ScopeOfCover.class;
            info.name = "scopeOfCover";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = CessionDeclarationScopeOfCover.class;
            info.name = "declaration";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = CessionInsurableObjectScopeOfCover.class;
            info.name = "cession";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

