package domain;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class AccountsCommonCondition extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public Boolean accountConfirmationNeeded;
    
    public SicsReferenceDataReference accountingBasis;
    
    public SicsReferenceDataReference accountingClaimBasis;
    
	/**
	* SUBCLASS=69, CODE= "D" | "W" | "M" | "Y" | etc
	*/
    public SicsReferenceDataReference accountNumberDurationType;
    
    public String accountsAdminConditionsNote;
    
    public SicsReferenceDataReference baseCompanyAccountTask;
    
    public BigDecimal bordereauClaimsExcess;
    
    public Integer bordereauSentDurationValue;
    
    public SicsReferenceDataReference businessPartnerAccountTask;
    
    public SicsReferenceDataReference calculateCedentPaymentWithinFrom;
    
    public SicsReferenceDataReference calculateReinsurerPaymentWithinFrom;
    
    public BigDecimal cashClaimAdviceAmountLimit;
    
    public BigDecimal cashClaimAdvicePercentageLimit;
    
    public Integer cashClaimAdviceTimeLimit;
    
    public BigDecimal cashClaimAmountLimit;
    
    public SicsCurrencyReference cashClaimCurrency;
    
    public Boolean cashClaimOffsetIsAllowed;
    
    public Integer cashClaimPaymentTimeLimit;
    
    public SicsWsTimeDurationReference cedentsPaymentDuration;
    
    public SicsReferenceDataReference cessionBasis;
    
    public SicsReferenceDataReference closedPeriodHandling;
    
    public SicsAccountingCurrencyTermReference currencyTerm;
    
    public Boolean detailsPerPeriod;
    
    public SicsReferenceDataReference exchangeAdjustment;
    
    public Boolean exchangeAdjustmentInitPortfolio;
    
    public ExchangeRateBasis exchangeRateBasis;
    
    public ExchangeRateBasisForExperienceRefund exchangeRateBasisForExperienceRefund;
    
    public Boolean exGratiaPaymentIsAllowed;
    
    public java.util.Date firstAccountAfterDate;
    
    public Boolean hasClaimsBordereau;
    
    public Boolean hasPremiumBordereau;
    
    public SicsWsTimeDurationReference inspectionDuration;
    
    public Boolean isBaseCompanyAccountTaskMandatory;
    
    public Boolean isBusinessPartnerAccountTaskMandatory;
    
    public Boolean isValidateOriginalUWYearOccurenceYear;
    
    public Integer lastAccountingYear;
    
	/**
	* Last Accounting Year for Calculation
	*                   The field is located in the window which is opened from the menu "Calculate Accounts...".
	*/
    public Integer lastAccountingYearForCalculation;
    
    public Integer lastCompleteAccountingYear;
    
    public Boolean onlyFirstAccount;
    
    public SicsReferenceDataReference paymentMethod;
    
    public Integer portfolioFromYear;
    
    public SicsWsTimeDurationReference productionDuration;
    
    public SicsReferenceDataReference profitLossCurrency;
    
    public SicsWsTimeDurationReference reinsurersPaymentDuration;
    
    public ArrayList< SingleAccountCondition> singleAccountConditions =new ArrayList<SingleAccountCondition >();
    
    public Boolean splitDetailsPerOccurenceYear;
    
    public SicsWsTimeDurationReference submissionDuration;
    
    public ArrayList< UpdateBusinessSingleAccountCondition> updateBusinessSingleAccountCondition =new ArrayList<UpdateBusinessSingleAccountCondition >();
    
    public ArrayList< DeleteBusinessSingleAccountCondition> deleteBusinessSingleAccountCondition =new ArrayList<DeleteBusinessSingleAccountCondition >();
    
    public Boolean deleteBookedAccount=false;

    public AccountsCommonCondition ()
    {
    }

    public AccountsCommonCondition (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("accountConfirmationNeeded"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.accountConfirmationNeeded = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.accountConfirmationNeeded = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("accountingBasis"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountingBasis = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("accountingClaimBasis"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountingClaimBasis = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("accountNumberDurationType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountNumberDurationType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("accountsAdminConditionsNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.accountsAdminConditionsNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.accountsAdminConditionsNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("baseCompanyAccountTask"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.baseCompanyAccountTask = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("bordereauClaimsExcess"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.bordereauClaimsExcess = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.bordereauClaimsExcess = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("bordereauSentDurationValue"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.bordereauSentDurationValue = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.bordereauSentDurationValue = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("businessPartnerAccountTask"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.businessPartnerAccountTask = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("calculateCedentPaymentWithinFrom"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.calculateCedentPaymentWithinFrom = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("calculateReinsurerPaymentWithinFrom"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.calculateReinsurerPaymentWithinFrom = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("cashClaimAdviceAmountLimit"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cashClaimAdviceAmountLimit = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.cashClaimAdviceAmountLimit = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("cashClaimAdvicePercentageLimit"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cashClaimAdvicePercentageLimit = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.cashClaimAdvicePercentageLimit = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("cashClaimAdviceTimeLimit"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cashClaimAdviceTimeLimit = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.cashClaimAdviceTimeLimit = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("cashClaimAmountLimit"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cashClaimAmountLimit = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.cashClaimAmountLimit = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("cashClaimCurrency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.cashClaimCurrency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("cashClaimOffsetIsAllowed"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cashClaimOffsetIsAllowed = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.cashClaimOffsetIsAllowed = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("cashClaimPaymentTimeLimit"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cashClaimPaymentTimeLimit = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.cashClaimPaymentTimeLimit = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("cedentsPaymentDuration"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.cedentsPaymentDuration = (SicsWsTimeDurationReference)__envelope.get(j,SicsWsTimeDurationReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("cessionBasis"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.cessionBasis = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("closedPeriodHandling"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.closedPeriodHandling = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("currencyTerm"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currencyTerm = (SicsAccountingCurrencyTermReference)__envelope.get(j,SicsAccountingCurrencyTermReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("detailsPerPeriod"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.detailsPerPeriod = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.detailsPerPeriod = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("exchangeAdjustment"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.exchangeAdjustment = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("exchangeAdjustmentInitPortfolio"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.exchangeAdjustmentInitPortfolio = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.exchangeAdjustmentInitPortfolio = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("exchangeRateBasis"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.exchangeRateBasis = (ExchangeRateBasis)__envelope.get(j,ExchangeRateBasis.class,false);
                    }
                    continue;
                }
                if (info.name.equals("exchangeRateBasisForExperienceRefund"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.exchangeRateBasisForExperienceRefund = (ExchangeRateBasisForExperienceRefund)__envelope.get(j,ExchangeRateBasisForExperienceRefund.class,false);
                    }
                    continue;
                }
                if (info.name.equals("exGratiaPaymentIsAllowed"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.exGratiaPaymentIsAllowed = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.exGratiaPaymentIsAllowed = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("firstAccountAfterDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.firstAccountAfterDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.firstAccountAfterDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasClaimsBordereau"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasClaimsBordereau = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasClaimsBordereau = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasPremiumBordereau"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasPremiumBordereau = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasPremiumBordereau = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("inspectionDuration"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.inspectionDuration = (SicsWsTimeDurationReference)__envelope.get(j,SicsWsTimeDurationReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isBaseCompanyAccountTaskMandatory"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isBaseCompanyAccountTaskMandatory = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isBaseCompanyAccountTaskMandatory = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isBusinessPartnerAccountTaskMandatory"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isBusinessPartnerAccountTaskMandatory = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isBusinessPartnerAccountTaskMandatory = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isValidateOriginalUWYearOccurenceYear"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isValidateOriginalUWYearOccurenceYear = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isValidateOriginalUWYearOccurenceYear = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lastAccountingYear"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lastAccountingYear = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.lastAccountingYear = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lastAccountingYearForCalculation"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lastAccountingYearForCalculation = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.lastAccountingYearForCalculation = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lastCompleteAccountingYear"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lastCompleteAccountingYear = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.lastCompleteAccountingYear = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("onlyFirstAccount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.onlyFirstAccount = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.onlyFirstAccount = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("paymentMethod"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.paymentMethod = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("portfolioFromYear"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.portfolioFromYear = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.portfolioFromYear = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("productionDuration"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.productionDuration = (SicsWsTimeDurationReference)__envelope.get(j,SicsWsTimeDurationReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("profitLossCurrency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.profitLossCurrency = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reinsurersPaymentDuration"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reinsurersPaymentDuration = (SicsWsTimeDurationReference)__envelope.get(j,SicsWsTimeDurationReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("singleAccountConditions"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.singleAccountConditions==null)
                        {
                            this.singleAccountConditions = new ArrayList< SingleAccountCondition>();
                        }
                        java.lang.Object j =obj;
                        SingleAccountCondition j1= (SingleAccountCondition)__envelope.get(j,SingleAccountCondition.class,false);
                        this.singleAccountConditions.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("splitDetailsPerOccurenceYear"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.splitDetailsPerOccurenceYear = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.splitDetailsPerOccurenceYear = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("submissionDuration"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.submissionDuration = (SicsWsTimeDurationReference)__envelope.get(j,SicsWsTimeDurationReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("updateBusinessSingleAccountCondition"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.updateBusinessSingleAccountCondition==null)
                        {
                            this.updateBusinessSingleAccountCondition = new ArrayList< UpdateBusinessSingleAccountCondition>();
                        }
                        java.lang.Object j =obj;
                        UpdateBusinessSingleAccountCondition j1= (UpdateBusinessSingleAccountCondition)__envelope.get(j,UpdateBusinessSingleAccountCondition.class,false);
                        this.updateBusinessSingleAccountCondition.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("deleteBusinessSingleAccountCondition"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.deleteBusinessSingleAccountCondition==null)
                        {
                            this.deleteBusinessSingleAccountCondition = new ArrayList< DeleteBusinessSingleAccountCondition>();
                        }
                        java.lang.Object j =obj;
                        DeleteBusinessSingleAccountCondition j1= (DeleteBusinessSingleAccountCondition)__envelope.get(j,DeleteBusinessSingleAccountCondition.class,false);
                        this.deleteBusinessSingleAccountCondition.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("deleteBookedAccount"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.deleteBookedAccount = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.deleteBookedAccount = (Boolean)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.accountConfirmationNeeded!=null?this.accountConfirmationNeeded:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.accountingBasis!=null?this.accountingBasis:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.accountingClaimBasis!=null?this.accountingClaimBasis:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return accountNumberDurationType;
        }
        if(propertyIndex==count+4)
        {
            return this.accountsAdminConditionsNote!=null?this.accountsAdminConditionsNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.baseCompanyAccountTask!=null?this.baseCompanyAccountTask:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.bordereauClaimsExcess!=null?this.bordereauClaimsExcess.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.bordereauSentDurationValue!=null?this.bordereauSentDurationValue:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.businessPartnerAccountTask!=null?this.businessPartnerAccountTask:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.calculateCedentPaymentWithinFrom!=null?this.calculateCedentPaymentWithinFrom:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.calculateReinsurerPaymentWithinFrom!=null?this.calculateReinsurerPaymentWithinFrom:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.cashClaimAdviceAmountLimit!=null?this.cashClaimAdviceAmountLimit.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.cashClaimAdvicePercentageLimit!=null?this.cashClaimAdvicePercentageLimit.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.cashClaimAdviceTimeLimit!=null?this.cashClaimAdviceTimeLimit:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.cashClaimAmountLimit!=null?this.cashClaimAmountLimit.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15)
        {
            return this.cashClaimCurrency!=null?this.cashClaimCurrency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16)
        {
            return this.cashClaimOffsetIsAllowed!=null?this.cashClaimOffsetIsAllowed:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17)
        {
            return this.cashClaimPaymentTimeLimit!=null?this.cashClaimPaymentTimeLimit:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18)
        {
            return cedentsPaymentDuration;
        }
        if(propertyIndex==count+19)
        {
            return this.cessionBasis!=null?this.cessionBasis:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+20)
        {
            return this.closedPeriodHandling!=null?this.closedPeriodHandling:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21)
        {
            return this.currencyTerm!=null?this.currencyTerm:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22)
        {
            return this.detailsPerPeriod!=null?this.detailsPerPeriod:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23)
        {
            return this.exchangeAdjustment!=null?this.exchangeAdjustment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+24)
        {
            return this.exchangeAdjustmentInitPortfolio!=null?this.exchangeAdjustmentInitPortfolio:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+25)
        {
            return this.exchangeRateBasis!=null?this.exchangeRateBasis:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+26)
        {
            return this.exchangeRateBasisForExperienceRefund!=null?this.exchangeRateBasisForExperienceRefund:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+27)
        {
            return this.exGratiaPaymentIsAllowed!=null?this.exGratiaPaymentIsAllowed:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+28)
        {
            return this.firstAccountAfterDate!=null?Helper.getDateFormat().format(this.firstAccountAfterDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+29)
        {
            return this.hasClaimsBordereau!=null?this.hasClaimsBordereau:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+30)
        {
            return this.hasPremiumBordereau!=null?this.hasPremiumBordereau:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+31)
        {
            return inspectionDuration;
        }
        if(propertyIndex==count+32)
        {
            return this.isBaseCompanyAccountTaskMandatory!=null?this.isBaseCompanyAccountTaskMandatory:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+33)
        {
            return this.isBusinessPartnerAccountTaskMandatory!=null?this.isBusinessPartnerAccountTaskMandatory:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+34)
        {
            return this.isValidateOriginalUWYearOccurenceYear!=null?this.isValidateOriginalUWYearOccurenceYear:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+35)
        {
            return this.lastAccountingYear!=null?this.lastAccountingYear:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+36)
        {
            return this.lastAccountingYearForCalculation!=null?this.lastAccountingYearForCalculation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+37)
        {
            return this.lastCompleteAccountingYear!=null?this.lastCompleteAccountingYear:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+38)
        {
            return this.onlyFirstAccount!=null?this.onlyFirstAccount:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+39)
        {
            return this.paymentMethod!=null?this.paymentMethod:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+40)
        {
            return this.portfolioFromYear!=null?this.portfolioFromYear:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+41)
        {
            return productionDuration;
        }
        if(propertyIndex==count+42)
        {
            return this.profitLossCurrency!=null?this.profitLossCurrency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+43)
        {
            return reinsurersPaymentDuration;
        }
        if(propertyIndex>=count+44 && propertyIndex < count+44+this.singleAccountConditions.size())
        {
            return this.singleAccountConditions.get(propertyIndex-(count+44));
        }
        if(propertyIndex==count+44+this.singleAccountConditions.size())
        {
            return this.splitDetailsPerOccurenceYear!=null?this.splitDetailsPerOccurenceYear:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+45+this.singleAccountConditions.size())
        {
            return submissionDuration;
        }
        if(propertyIndex>=count+46+this.singleAccountConditions.size() && propertyIndex < count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size())
        {
            return this.updateBusinessSingleAccountCondition.get(propertyIndex-(count+46+this.singleAccountConditions.size()));
        }
        if(propertyIndex>=count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size() && propertyIndex < count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size()+this.deleteBusinessSingleAccountCondition.size())
        {
            return this.deleteBusinessSingleAccountCondition.get(propertyIndex-(count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size()));
        }
        if(propertyIndex==count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size()+this.deleteBusinessSingleAccountCondition.size())
        {
            return deleteBookedAccount;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+47+singleAccountConditions.size()+updateBusinessSingleAccountCondition.size()+deleteBusinessSingleAccountCondition.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "accountConfirmationNeeded";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "accountingBasis";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "accountingClaimBasis";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "accountNumberDurationType";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "accountsAdminConditionsNote";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "baseCompanyAccountTask";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "bordereauClaimsExcess";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "bordereauSentDurationValue";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "businessPartnerAccountTask";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "calculateCedentPaymentWithinFrom";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "calculateReinsurerPaymentWithinFrom";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "cashClaimAdviceAmountLimit";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "cashClaimAdvicePercentageLimit";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "cashClaimAdviceTimeLimit";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "cashClaimAmountLimit";
            info.namespace= "";
        }
        if(propertyIndex==count+15)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "cashClaimCurrency";
            info.namespace= "";
        }
        if(propertyIndex==count+16)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "cashClaimOffsetIsAllowed";
            info.namespace= "";
        }
        if(propertyIndex==count+17)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "cashClaimPaymentTimeLimit";
            info.namespace= "";
        }
        if(propertyIndex==count+18)
        {
            info.type = SicsWsTimeDurationReference.class;
            info.name = "cedentsPaymentDuration";
            info.namespace= "";
        }
        if(propertyIndex==count+19)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "cessionBasis";
            info.namespace= "";
        }
        if(propertyIndex==count+20)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "closedPeriodHandling";
            info.namespace= "";
        }
        if(propertyIndex==count+21)
        {
            info.type = SicsAccountingCurrencyTermReference.class;
            info.name = "currencyTerm";
            info.namespace= "";
        }
        if(propertyIndex==count+22)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "detailsPerPeriod";
            info.namespace= "";
        }
        if(propertyIndex==count+23)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "exchangeAdjustment";
            info.namespace= "";
        }
        if(propertyIndex==count+24)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "exchangeAdjustmentInitPortfolio";
            info.namespace= "";
        }
        if(propertyIndex==count+25)
        {
            info.type = ExchangeRateBasis.class;
            info.name = "exchangeRateBasis";
            info.namespace= "";
        }
        if(propertyIndex==count+26)
        {
            info.type = ExchangeRateBasisForExperienceRefund.class;
            info.name = "exchangeRateBasisForExperienceRefund";
            info.namespace= "";
        }
        if(propertyIndex==count+27)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "exGratiaPaymentIsAllowed";
            info.namespace= "";
        }
        if(propertyIndex==count+28)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "firstAccountAfterDate";
            info.namespace= "";
        }
        if(propertyIndex==count+29)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasClaimsBordereau";
            info.namespace= "";
        }
        if(propertyIndex==count+30)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasPremiumBordereau";
            info.namespace= "";
        }
        if(propertyIndex==count+31)
        {
            info.type = SicsWsTimeDurationReference.class;
            info.name = "inspectionDuration";
            info.namespace= "";
        }
        if(propertyIndex==count+32)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isBaseCompanyAccountTaskMandatory";
            info.namespace= "";
        }
        if(propertyIndex==count+33)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isBusinessPartnerAccountTaskMandatory";
            info.namespace= "";
        }
        if(propertyIndex==count+34)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isValidateOriginalUWYearOccurenceYear";
            info.namespace= "";
        }
        if(propertyIndex==count+35)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "lastAccountingYear";
            info.namespace= "";
        }
        if(propertyIndex==count+36)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "lastAccountingYearForCalculation";
            info.namespace= "";
        }
        if(propertyIndex==count+37)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "lastCompleteAccountingYear";
            info.namespace= "";
        }
        if(propertyIndex==count+38)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "onlyFirstAccount";
            info.namespace= "";
        }
        if(propertyIndex==count+39)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "paymentMethod";
            info.namespace= "";
        }
        if(propertyIndex==count+40)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "portfolioFromYear";
            info.namespace= "";
        }
        if(propertyIndex==count+41)
        {
            info.type = SicsWsTimeDurationReference.class;
            info.name = "productionDuration";
            info.namespace= "";
        }
        if(propertyIndex==count+42)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "profitLossCurrency";
            info.namespace= "";
        }
        if(propertyIndex==count+43)
        {
            info.type = SicsWsTimeDurationReference.class;
            info.name = "reinsurersPaymentDuration";
            info.namespace= "";
        }
        if(propertyIndex>=count+44 && propertyIndex < count+44+this.singleAccountConditions.size())
        {
            info.type = SingleAccountCondition.class;
            info.name = "singleAccountConditions";
            info.namespace= "";
        }
        if(propertyIndex==count+44+this.singleAccountConditions.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "splitDetailsPerOccurenceYear";
            info.namespace= "";
        }
        if(propertyIndex==count+45+this.singleAccountConditions.size())
        {
            info.type = SicsWsTimeDurationReference.class;
            info.name = "submissionDuration";
            info.namespace= "";
        }
        if(propertyIndex>=count+46+this.singleAccountConditions.size() && propertyIndex < count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size())
        {
            info.type = UpdateBusinessSingleAccountCondition.class;
            info.name = "updateBusinessSingleAccountCondition";
            info.namespace= "";
        }
        if(propertyIndex>=count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size() && propertyIndex < count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size()+this.deleteBusinessSingleAccountCondition.size())
        {
            info.type = DeleteBusinessSingleAccountCondition.class;
            info.name = "deleteBusinessSingleAccountCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+46+this.singleAccountConditions.size()+this.updateBusinessSingleAccountCondition.size()+this.deleteBusinessSingleAccountCondition.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "deleteBookedAccount";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

