package domain;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class LightClaim extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public String claimIdentifier;
    
	/**
	* SubclassNumber: 01074. SicsRefExternalSystemName
	*/
    public SicsReferenceDataReference primarySystem;
    
    public String lossName;
    
    public PartialDate partialLossStartingDate;
    
    public java.util.Date lossEndingDate;
    
    public String riskName;
    
    public SicsLegalAreaReference location;
    
	/**
	* SubclassNumber: 1019. SicsRefClaimsTrigger
	*/
    public SicsReferenceDataReference claimsTrigger;
    
    public Boolean canBeAutoProtected;
    
	/**
	* SubclassNumber: 01073. SicsRefReasonForManualProtection
	*/
    public SicsReferenceDataReference reasonForManualProtection;
    
    public java.util.Date claimsTriggerDate;
    
    public HeadlineLossReference linkToHeadlineLoss;
    
    public LightUserDefinedFieldsConditions userDefinedFieldsData;
    
	/**
	* Include Claim/Exclude Claim
	*/
    public Boolean isClaimIncluded;
    
    public String shortDescription;
    
    public LightClaimSpecificClassificationList claimSpecificClassificationList;
    
	/**
	* SubclassNumber: 521. SicsRefClaimRiskEventIndicator
	*/
    public SicsReferenceDataReference riskEventIndicator;
    
    public LightClaimSocToClaimRelationshipList scopeOfCoverRelationList=new LightClaimSocToClaimRelationshipList();

    public LightClaim ()
    {
    }

    public LightClaim (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("claimIdentifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.claimIdentifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.claimIdentifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("primarySystem"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.primarySystem = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("lossName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lossName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.lossName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("partialLossStartingDate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.partialLossStartingDate = (PartialDate)__envelope.get(j,PartialDate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("lossEndingDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lossEndingDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.lossEndingDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("riskName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.riskName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.riskName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("location"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.location = (SicsLegalAreaReference)__envelope.get(j,SicsLegalAreaReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimsTrigger"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimsTrigger = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("canBeAutoProtected"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.canBeAutoProtected = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.canBeAutoProtected = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reasonForManualProtection"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reasonForManualProtection = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimsTriggerDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.claimsTriggerDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.claimsTriggerDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("linkToHeadlineLoss"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.linkToHeadlineLoss = (HeadlineLossReference)__envelope.get(j,HeadlineLossReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsData"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsData = (LightUserDefinedFieldsConditions)__envelope.get(j,LightUserDefinedFieldsConditions.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isClaimIncluded"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isClaimIncluded = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isClaimIncluded = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("shortDescription"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.shortDescription = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.shortDescription = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("claimSpecificClassificationList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimSpecificClassificationList = (LightClaimSpecificClassificationList)__envelope.get(j,LightClaimSpecificClassificationList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("riskEventIndicator"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.riskEventIndicator = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("scopeOfCoverRelationList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.scopeOfCoverRelationList = new LightClaimSocToClaimRelationshipList(j,__envelope);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return claimIdentifier;
        }
        if(propertyIndex==count+1)
        {
            return this.primarySystem!=null?this.primarySystem:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.lossName!=null?this.lossName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.partialLossStartingDate!=null?this.partialLossStartingDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.lossEndingDate!=null?Helper.getDateFormat().format(this.lossEndingDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.riskName!=null?this.riskName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.location!=null?this.location:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.claimsTrigger!=null?this.claimsTrigger:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.canBeAutoProtected!=null?this.canBeAutoProtected:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.reasonForManualProtection!=null?this.reasonForManualProtection:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.claimsTriggerDate!=null?Helper.getDateFormat().format(this.claimsTriggerDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.linkToHeadlineLoss!=null?this.linkToHeadlineLoss:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.userDefinedFieldsData!=null?this.userDefinedFieldsData:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.isClaimIncluded!=null?this.isClaimIncluded:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.shortDescription!=null?this.shortDescription:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15)
        {
            return this.claimSpecificClassificationList!=null?this.claimSpecificClassificationList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16)
        {
            return riskEventIndicator;
        }
        if(propertyIndex==count+17)
        {
            return scopeOfCoverRelationList;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+18;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "claimIdentifier";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "primarySystem";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "lossName";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PartialDate.class;
            info.name = "partialLossStartingDate";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "lossEndingDate";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "riskName";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = SicsLegalAreaReference.class;
            info.name = "location";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "claimsTrigger";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "canBeAutoProtected";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "reasonForManualProtection";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "claimsTriggerDate";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = HeadlineLossReference.class;
            info.name = "linkToHeadlineLoss";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = LightUserDefinedFieldsConditions.class;
            info.name = "userDefinedFieldsData";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isClaimIncluded";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "shortDescription";
            info.namespace= "";
        }
        if(propertyIndex==count+15)
        {
            info.type = LightClaimSpecificClassificationList.class;
            info.name = "claimSpecificClassificationList";
            info.namespace= "";
        }
        if(propertyIndex==count+16)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "riskEventIndicator";
            info.namespace= "";
        }
        if(propertyIndex==count+17)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "scopeOfCoverRelationList";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

