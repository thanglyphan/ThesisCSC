package domain;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

public class InsurableObjectGeneral extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public InsurableObjectAmendmentDetail insurableObjectAmendment;
    
	/**
	* If this element is present in a createInsurableObject
	*                service the identifier  will be set to this value instead
	*                of the one generated by the system (if system is set up
	*                to automatically generate identifiers).
	* 
	*                If an insurable object already exists with the same
	*                identifier a soap fault will be raised.
	* 
	*                The identifier should not be in the identifier
	*                series generated by SICS workstation, since this may
	*                lead to multiple insurable objects with the same
	*                identifier.
	*/
    public String identifier;
    
    public String name;
    
	/**
	* Former Names
	*/
    public InsurableObjectAliasList insurableObjectAliasList;
    
    public BigDecimal marketValue;
    
    public SicsCurrencyReference currency;
    
    public SicsRiskZoneReference zoneReference;
    
    public InsurableObjectOwnerList insurableObjectOwnerList;
    
    public InsurableObjectIdentifierList insurableObjectIdentifierList;
    
    public Address address;
    
    public GeographicPosition geographicPosition;
    
	/**
	* SubclassNumber: 567. SicsRefElectronicAreaOfApplication
	*/
    public SicsReferenceDataReference areaOfApplication;

    public InsurableObjectGeneral ()
    {
    }

    public InsurableObjectGeneral (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("insurableObjectAmendment"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.insurableObjectAmendment = (InsurableObjectAmendmentDetail)__envelope.get(j,InsurableObjectAmendmentDetail.class,false);
                    }
                    continue;
                }
                if (info.name.equals("identifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.identifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.identifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("name"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.name = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.name = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("insurableObjectAliasList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.insurableObjectAliasList = new InsurableObjectAliasList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("marketValue"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.marketValue = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.marketValue = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("currency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("zoneReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.zoneReference = (SicsRiskZoneReference)__envelope.get(j,SicsRiskZoneReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("insurableObjectOwnerList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.insurableObjectOwnerList = new InsurableObjectOwnerList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("insurableObjectIdentifierList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.insurableObjectIdentifierList = new InsurableObjectIdentifierList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("address"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.address = (Address)__envelope.get(j,Address.class,false);
                    }
                    continue;
                }
                if (info.name.equals("geographicPosition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.geographicPosition = (GeographicPosition)__envelope.get(j,GeographicPosition.class,false);
                    }
                    continue;
                }
                if (info.name.equals("areaOfApplication"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.areaOfApplication = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return insurableObjectAmendment;
        }
        if(propertyIndex==count+1)
        {
            return this.identifier!=null?this.identifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.name!=null?this.name:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.insurableObjectAliasList!=null?this.insurableObjectAliasList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.marketValue!=null?this.marketValue.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.currency!=null?this.currency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.zoneReference!=null?this.zoneReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.insurableObjectOwnerList!=null?this.insurableObjectOwnerList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.insurableObjectIdentifierList!=null?this.insurableObjectIdentifierList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.address!=null?this.address:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.geographicPosition!=null?this.geographicPosition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.areaOfApplication!=null?this.areaOfApplication:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+12;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = InsurableObjectAmendmentDetail.class;
            info.name = "insurableObjectAmendment";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "identifier";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "name";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "insurableObjectAliasList";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "marketValue";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "currency";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = SicsRiskZoneReference.class;
            info.name = "zoneReference";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "insurableObjectOwnerList";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "insurableObjectIdentifierList";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = Address.class;
            info.name = "address";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = GeographicPosition.class;
            info.name = "geographicPosition";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "areaOfApplication";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

