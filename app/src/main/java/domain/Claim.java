package domain;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class Claim extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
	/**
	* For create, only available for Individual claims on Policy Ceded.
	*/
    public String claimIdentifier;
    
	/**
	* SubclassNumber: 527. Codes: INDV, INTR, V. claimType is a part of Create Claim but not of Assign To Existing Claim.
	*/
    public SicsReferenceDataReference claimType;
    
	/**
	* SubclassNumber: 1074. Only available for Individual claims on a Policy Ceded.
	*/
    public SicsReferenceDataReference primarySystem;
    
	/**
	* Assign to Headline Loss
	*                   This refers to a link from an Individual/Interlocking Claim to a Headline Loss.
	*/
    public HeadlineLossReference linkToHeadlineLoss;
    
	/**
	* Assign to Various Claim
	*                   This refers to a link from an Individual/Interlocking Claim to a Various Claim.
	*/
    public PcClaimReference linkToVariousClaim;
    
	/**
	* Represents list of claims (Individual/Interlocking) assigned to a Various Claim.
	*/
    public AssignedClaimsList assignedClaimList;
    
    public Boolean isEdiBulkClaim;
    
    public Boolean earlyClaim;
    
	/**
	* Remove former UCR information
	*                   This represents a popup menu choice.
	*/
    public Boolean removeFormerUcrInfo;
    
	/**
	* This element should not be used as it will not update anything.
	*                   This element should not be used as it will not update anything.
	*/
    public UserDefinedFields userDefinedFieldsCondition;
    
    public String lossName;
    
	/**
	* Locations
	*/
    public LegalAreaList locationList;
    
	/**
	* Jurisdiction
	*/
    public LegalAreaList legalAreaList;
    
	/**
	* partialLossStartingDate is a part of Create Claim but not of Assign To Existing Claim.
	*/
    public PartialDate partialLossStartingDate;
    
	/**
	* lossStartingDate is a part of Create Claim but not of Assign To Existing Claim.
	*/
    public java.util.Date lossStartingDate;
    
	/**
	* lossEndingDate is a part of Create Claim but not of Assign To Existing Claim.
	*/
    public java.util.Date lossEndingDate;
    
    public java.util.Date occurrenceDate;
    
    public java.util.Date fxDateOfLoss;
    
    public SicsRiskZoneReference riskZoneReference;
    
    public String riskName;
    
    public Boolean canBeAutoProtected;
    
	/**
	* SubclassNumber: 01073. SicsRefReasonForManualProtection
	*/
    public SicsReferenceDataReference reasonForManualProtection;
    
	/**
	* Include Claim/Exclude Claim
	*                   This represents a popup menu choice.
	*/
    public RecoveryCalculation recoveryCalculation;
    
    public Boolean hasCoInsurance;
    
    public Boolean isActive;
    
    public Boolean isAPHClaim;
    
	/**
	* Claim Security
	*/
    public Boolean worksheetClosingSecurityLimitation;
    
	/**
	* Claim Manager
	*/
    public SicsUserReference responsibleClaimHandler;
    
    public SicsUserReference claimAnalyst;
    
    public String shortDescription;
    
	/**
	* SubclassNumber: 1019. Codes: ANY.claimsTrigger is a part of Create Claim but not of Assign To Existing Claim.
	*/
    public SicsReferenceDataReference claimsTrigger;
    
	/**
	* claimsTriggerDate is a part of Create Claim but not of Assign To Existing Claim.
	*/
    public java.util.Date claimsTriggerDate;
    
	/**
	* SubclassNumber: 1013. Codes: ANY.
	*/
    public SicsReferenceDataReference additionalCode;
    
    public Boolean isDatePreliminary;
    
    public Boolean isEvaluatedReservesSet;
    
    public Boolean fguIndicator;
    
    public java.util.Date additionalCodeDate;
    
    public java.util.Date startDateOfOriginalPolicyPeriod;
    
    public java.util.Date endDateOfOriginalPolicyPeriod;
    
    public ClaimSpecificClassificationList claimSpecificClassificationList;
    
    public ClaimSpecificClassificationUpdateList claimSpecificClassificationUpdateList;
    
    public Integer yearBuilt;
    
    public String producerOrType;
    
	/**
	* policyId is for Life and Health.
	*/
    public String policyId;
    
    public java.util.Date insuredDateOfBirth;
    
    public UserDefinedFieldsConditions userDefinedFieldsData;
    
    public MarketGroundUpLoss marketGroundUpLoss;
    
    public Boolean conflictOfInterest;
    
    public ConflictUserList conflictUsers;
    
    public AnnuityCalculationDetail annuityCalculationDetail;
    
    public SicsInsurableObjectReference insurableObject;
    
    public LossEstimateReadList lossEstimateList;
    
    public EdiFguInfoAsOfDateReadList ediFguAsOfDateList;
    
    public ClaimSignatureNoteReadList claimSignatureNoteList;
    
    public ClaimScopeOfCoverToClaimRelationshipList scopeOfCoverRelationList;
    
    public java.util.Date conflictDate;
    
    public SicsUserReference conflictDeclaredBy;

    public Claim ()
    {
    }

    public Claim (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("claimIdentifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.claimIdentifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.claimIdentifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("claimType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("primarySystem"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.primarySystem = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("linkToHeadlineLoss"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.linkToHeadlineLoss = (HeadlineLossReference)__envelope.get(j,HeadlineLossReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("linkToVariousClaim"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.linkToVariousClaim = (PcClaimReference)__envelope.get(j,PcClaimReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("assignedClaimList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.assignedClaimList = (AssignedClaimsList)__envelope.get(j,AssignedClaimsList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isEdiBulkClaim"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isEdiBulkClaim = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isEdiBulkClaim = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("earlyClaim"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.earlyClaim = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.earlyClaim = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("removeFormerUcrInfo"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.removeFormerUcrInfo = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.removeFormerUcrInfo = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsCondition"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsCondition = (UserDefinedFields)__envelope.get(j,UserDefinedFields.class,false);
                    }
                    continue;
                }
                if (info.name.equals("lossName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lossName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.lossName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("locationList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.locationList = (LegalAreaList)__envelope.get(j,LegalAreaList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("legalAreaList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.legalAreaList = (LegalAreaList)__envelope.get(j,LegalAreaList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("partialLossStartingDate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.partialLossStartingDate = (PartialDate)__envelope.get(j,PartialDate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("lossStartingDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lossStartingDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.lossStartingDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lossEndingDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lossEndingDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.lossEndingDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("occurrenceDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.occurrenceDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.occurrenceDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("fxDateOfLoss"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.fxDateOfLoss = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.fxDateOfLoss = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("riskZoneReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.riskZoneReference = (SicsRiskZoneReference)__envelope.get(j,SicsRiskZoneReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("riskName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.riskName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.riskName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("canBeAutoProtected"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.canBeAutoProtected = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.canBeAutoProtected = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reasonForManualProtection"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reasonForManualProtection = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("recoveryCalculation"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.recoveryCalculation = (RecoveryCalculation)__envelope.get(j,RecoveryCalculation.class,false);
                    }
                    continue;
                }
                if (info.name.equals("hasCoInsurance"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasCoInsurance = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasCoInsurance = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isActive"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isActive = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isActive = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAPHClaim"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAPHClaim = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAPHClaim = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("worksheetClosingSecurityLimitation"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.worksheetClosingSecurityLimitation = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.worksheetClosingSecurityLimitation = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("responsibleClaimHandler"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.responsibleClaimHandler = (SicsUserReference)__envelope.get(j,SicsUserReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimAnalyst"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimAnalyst = (SicsUserReference)__envelope.get(j,SicsUserReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("shortDescription"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.shortDescription = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.shortDescription = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("claimsTrigger"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimsTrigger = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimsTriggerDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.claimsTriggerDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.claimsTriggerDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("additionalCode"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.additionalCode = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isDatePreliminary"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isDatePreliminary = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isDatePreliminary = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isEvaluatedReservesSet"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isEvaluatedReservesSet = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isEvaluatedReservesSet = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("fguIndicator"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.fguIndicator = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.fguIndicator = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("additionalCodeDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.additionalCodeDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.additionalCodeDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("startDateOfOriginalPolicyPeriod"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.startDateOfOriginalPolicyPeriod = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.startDateOfOriginalPolicyPeriod = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("endDateOfOriginalPolicyPeriod"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.endDateOfOriginalPolicyPeriod = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.endDateOfOriginalPolicyPeriod = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("claimSpecificClassificationList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimSpecificClassificationList = (ClaimSpecificClassificationList)__envelope.get(j,ClaimSpecificClassificationList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("claimSpecificClassificationUpdateList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimSpecificClassificationUpdateList = (ClaimSpecificClassificationUpdateList)__envelope.get(j,ClaimSpecificClassificationUpdateList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("yearBuilt"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.yearBuilt = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.yearBuilt = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("producerOrType"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.producerOrType = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.producerOrType = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("policyId"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.policyId = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.policyId = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("insuredDateOfBirth"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.insuredDateOfBirth = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.insuredDateOfBirth = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("userDefinedFieldsData"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedFieldsData = (UserDefinedFieldsConditions)__envelope.get(j,UserDefinedFieldsConditions.class,false);
                    }
                    continue;
                }
                if (info.name.equals("marketGroundUpLoss"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.marketGroundUpLoss = (MarketGroundUpLoss)__envelope.get(j,MarketGroundUpLoss.class,false);
                    }
                    continue;
                }
                if (info.name.equals("conflictOfInterest"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.conflictOfInterest = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.conflictOfInterest = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("conflictUsers"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.conflictUsers = (ConflictUserList)__envelope.get(j,ConflictUserList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("annuityCalculationDetail"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.annuityCalculationDetail = (AnnuityCalculationDetail)__envelope.get(j,AnnuityCalculationDetail.class,false);
                    }
                    continue;
                }
                if (info.name.equals("insurableObject"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.insurableObject = (SicsInsurableObjectReference)__envelope.get(j,SicsInsurableObjectReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("lossEstimateList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.lossEstimateList = new LossEstimateReadList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("ediFguAsOfDateList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.ediFguAsOfDateList = new EdiFguInfoAsOfDateReadList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("claimSignatureNoteList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.claimSignatureNoteList = new ClaimSignatureNoteReadList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("scopeOfCoverRelationList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.scopeOfCoverRelationList = new ClaimScopeOfCoverToClaimRelationshipList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("conflictDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.conflictDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.conflictDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("conflictDeclaredBy"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.conflictDeclaredBy = (SicsUserReference)__envelope.get(j,SicsUserReference.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.claimIdentifier!=null?this.claimIdentifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.claimType!=null?this.claimType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.primarySystem!=null?this.primarySystem:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.linkToHeadlineLoss!=null?this.linkToHeadlineLoss:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.linkToVariousClaim!=null?this.linkToVariousClaim:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.assignedClaimList!=null?this.assignedClaimList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.isEdiBulkClaim!=null?this.isEdiBulkClaim:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.earlyClaim!=null?this.earlyClaim:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.removeFormerUcrInfo!=null?this.removeFormerUcrInfo:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.userDefinedFieldsCondition!=null?this.userDefinedFieldsCondition:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.lossName!=null?this.lossName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.locationList!=null?this.locationList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.legalAreaList!=null?this.legalAreaList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.partialLossStartingDate!=null?this.partialLossStartingDate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.lossStartingDate!=null?Helper.getDateFormat().format(this.lossStartingDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15)
        {
            return this.lossEndingDate!=null?Helper.getDateFormat().format(this.lossEndingDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16)
        {
            return this.occurrenceDate!=null?Helper.getDateFormat().format(this.occurrenceDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17)
        {
            return this.fxDateOfLoss!=null?Helper.getDateFormat().format(this.fxDateOfLoss):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18)
        {
            return this.riskZoneReference!=null?this.riskZoneReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+19)
        {
            return this.riskName!=null?this.riskName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+20)
        {
            return this.canBeAutoProtected!=null?this.canBeAutoProtected:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21)
        {
            return this.reasonForManualProtection!=null?this.reasonForManualProtection:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22)
        {
            return this.recoveryCalculation!=null?this.recoveryCalculation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23)
        {
            return this.hasCoInsurance!=null?this.hasCoInsurance:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+24)
        {
            return this.isActive!=null?this.isActive:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+25)
        {
            return this.isAPHClaim!=null?this.isAPHClaim:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+26)
        {
            return this.worksheetClosingSecurityLimitation!=null?this.worksheetClosingSecurityLimitation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+27)
        {
            return this.responsibleClaimHandler!=null?this.responsibleClaimHandler:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+28)
        {
            return this.claimAnalyst!=null?this.claimAnalyst:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+29)
        {
            return this.shortDescription!=null?this.shortDescription:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+30)
        {
            return this.claimsTrigger!=null?this.claimsTrigger:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+31)
        {
            return this.claimsTriggerDate!=null?Helper.getDateFormat().format(this.claimsTriggerDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+32)
        {
            return this.additionalCode!=null?this.additionalCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+33)
        {
            return this.isDatePreliminary!=null?this.isDatePreliminary:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+34)
        {
            return this.isEvaluatedReservesSet!=null?this.isEvaluatedReservesSet:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+35)
        {
            return this.fguIndicator!=null?this.fguIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+36)
        {
            return this.additionalCodeDate!=null?Helper.getDateFormat().format(this.additionalCodeDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+37)
        {
            return this.startDateOfOriginalPolicyPeriod!=null?Helper.getDateFormat().format(this.startDateOfOriginalPolicyPeriod):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+38)
        {
            return this.endDateOfOriginalPolicyPeriod!=null?Helper.getDateFormat().format(this.endDateOfOriginalPolicyPeriod):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+39)
        {
            return this.claimSpecificClassificationList!=null?this.claimSpecificClassificationList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+40)
        {
            return this.claimSpecificClassificationUpdateList!=null?this.claimSpecificClassificationUpdateList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+41)
        {
            return this.yearBuilt!=null?this.yearBuilt:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+42)
        {
            return this.producerOrType!=null?this.producerOrType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+43)
        {
            return this.policyId!=null?this.policyId:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+44)
        {
            return this.insuredDateOfBirth!=null?Helper.getDateFormat().format(this.insuredDateOfBirth):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+45)
        {
            return this.userDefinedFieldsData!=null?this.userDefinedFieldsData:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+46)
        {
            return this.marketGroundUpLoss!=null?this.marketGroundUpLoss:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+47)
        {
            return this.conflictOfInterest!=null?this.conflictOfInterest:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+48)
        {
            return this.conflictUsers!=null?this.conflictUsers:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+49)
        {
            return this.annuityCalculationDetail!=null?this.annuityCalculationDetail:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+50)
        {
            return this.insurableObject!=null?this.insurableObject:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+51)
        {
            return this.lossEstimateList!=null?this.lossEstimateList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+52)
        {
            return this.ediFguAsOfDateList!=null?this.ediFguAsOfDateList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+53)
        {
            return this.claimSignatureNoteList!=null?this.claimSignatureNoteList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+54)
        {
            return this.scopeOfCoverRelationList!=null?this.scopeOfCoverRelationList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+55)
        {
            return this.conflictDate!=null?Helper.getDateFormat().format(this.conflictDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+56)
        {
            return this.conflictDeclaredBy!=null?this.conflictDeclaredBy:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+57;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "claimIdentifier";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "claimType";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "primarySystem";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = HeadlineLossReference.class;
            info.name = "linkToHeadlineLoss";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PcClaimReference.class;
            info.name = "linkToVariousClaim";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = AssignedClaimsList.class;
            info.name = "assignedClaimList";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isEdiBulkClaim";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "earlyClaim";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "removeFormerUcrInfo";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = UserDefinedFields.class;
            info.name = "userDefinedFieldsCondition";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "lossName";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = LegalAreaList.class;
            info.name = "locationList";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = LegalAreaList.class;
            info.name = "legalAreaList";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PartialDate.class;
            info.name = "partialLossStartingDate";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "lossStartingDate";
            info.namespace= "";
        }
        if(propertyIndex==count+15)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "lossEndingDate";
            info.namespace= "";
        }
        if(propertyIndex==count+16)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "occurrenceDate";
            info.namespace= "";
        }
        if(propertyIndex==count+17)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "fxDateOfLoss";
            info.namespace= "";
        }
        if(propertyIndex==count+18)
        {
            info.type = SicsRiskZoneReference.class;
            info.name = "riskZoneReference";
            info.namespace= "";
        }
        if(propertyIndex==count+19)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "riskName";
            info.namespace= "";
        }
        if(propertyIndex==count+20)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "canBeAutoProtected";
            info.namespace= "";
        }
        if(propertyIndex==count+21)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "reasonForManualProtection";
            info.namespace= "";
        }
        if(propertyIndex==count+22)
        {
            info.type = RecoveryCalculation.class;
            info.name = "recoveryCalculation";
            info.namespace= "";
        }
        if(propertyIndex==count+23)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasCoInsurance";
            info.namespace= "";
        }
        if(propertyIndex==count+24)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isActive";
            info.namespace= "";
        }
        if(propertyIndex==count+25)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAPHClaim";
            info.namespace= "";
        }
        if(propertyIndex==count+26)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "worksheetClosingSecurityLimitation";
            info.namespace= "";
        }
        if(propertyIndex==count+27)
        {
            info.type = SicsUserReference.class;
            info.name = "responsibleClaimHandler";
            info.namespace= "";
        }
        if(propertyIndex==count+28)
        {
            info.type = SicsUserReference.class;
            info.name = "claimAnalyst";
            info.namespace= "";
        }
        if(propertyIndex==count+29)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "shortDescription";
            info.namespace= "";
        }
        if(propertyIndex==count+30)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "claimsTrigger";
            info.namespace= "";
        }
        if(propertyIndex==count+31)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "claimsTriggerDate";
            info.namespace= "";
        }
        if(propertyIndex==count+32)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "additionalCode";
            info.namespace= "";
        }
        if(propertyIndex==count+33)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isDatePreliminary";
            info.namespace= "";
        }
        if(propertyIndex==count+34)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isEvaluatedReservesSet";
            info.namespace= "";
        }
        if(propertyIndex==count+35)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "fguIndicator";
            info.namespace= "";
        }
        if(propertyIndex==count+36)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "additionalCodeDate";
            info.namespace= "";
        }
        if(propertyIndex==count+37)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "startDateOfOriginalPolicyPeriod";
            info.namespace= "";
        }
        if(propertyIndex==count+38)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "endDateOfOriginalPolicyPeriod";
            info.namespace= "";
        }
        if(propertyIndex==count+39)
        {
            info.type = ClaimSpecificClassificationList.class;
            info.name = "claimSpecificClassificationList";
            info.namespace= "";
        }
        if(propertyIndex==count+40)
        {
            info.type = ClaimSpecificClassificationUpdateList.class;
            info.name = "claimSpecificClassificationUpdateList";
            info.namespace= "";
        }
        if(propertyIndex==count+41)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "yearBuilt";
            info.namespace= "";
        }
        if(propertyIndex==count+42)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "producerOrType";
            info.namespace= "";
        }
        if(propertyIndex==count+43)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "policyId";
            info.namespace= "";
        }
        if(propertyIndex==count+44)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "insuredDateOfBirth";
            info.namespace= "";
        }
        if(propertyIndex==count+45)
        {
            info.type = UserDefinedFieldsConditions.class;
            info.name = "userDefinedFieldsData";
            info.namespace= "";
        }
        if(propertyIndex==count+46)
        {
            info.type = MarketGroundUpLoss.class;
            info.name = "marketGroundUpLoss";
            info.namespace= "";
        }
        if(propertyIndex==count+47)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "conflictOfInterest";
            info.namespace= "";
        }
        if(propertyIndex==count+48)
        {
            info.type = ConflictUserList.class;
            info.name = "conflictUsers";
            info.namespace= "";
        }
        if(propertyIndex==count+49)
        {
            info.type = AnnuityCalculationDetail.class;
            info.name = "annuityCalculationDetail";
            info.namespace= "";
        }
        if(propertyIndex==count+50)
        {
            info.type = SicsInsurableObjectReference.class;
            info.name = "insurableObject";
            info.namespace= "";
        }
        if(propertyIndex==count+51)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "lossEstimateList";
            info.namespace= "";
        }
        if(propertyIndex==count+52)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "ediFguAsOfDateList";
            info.namespace= "";
        }
        if(propertyIndex==count+53)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "claimSignatureNoteList";
            info.namespace= "";
        }
        if(propertyIndex==count+54)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "scopeOfCoverRelationList";
            info.namespace= "";
        }
        if(propertyIndex==count+55)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "conflictDate";
            info.namespace= "";
        }
        if(propertyIndex==count+56)
        {
            info.type = SicsUserReference.class;
            info.name = "conflictDeclaredBy";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

