package domain;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

public class PremiumAndClaimsReserveCondition extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public String reserveNote;
    
	/**
	* SubclassNumber: 58.
	*/
    public SicsReferenceDataReference calculationBasis;
    
	/**
	* SubclassNumber: 69.
	*/
    public SicsReferenceDataReference calculationFrequency;
    
	/**
	* SubclassNumber: 59.
	*/
    public SicsReferenceDataReference calculationMethod;
    
	/**
	* SubclassNumber: 86.
	*/
    public SicsReferenceDataReference divisionMethod;
    
	/**
	* Accounting Entry Code Group in category subjectPremiumIncomeProportional
	*/
    public SicsAccountingEntryCodeGroupReference entryCodeGroupForOriginal;
    
	/**
	* Accounting Entry Code Group in category subjectPremiumIncomeProportional
	*/
    public SicsAccountingEntryCodeGroupReference entryCodeGroupForPremium;
    
    public java.util.Date firstCalculationDate;
    
    public BigDecimal percentage;
    
    public BigDecimal percentOfOriginal;
    
    public BigDecimal percentOfPremium;

    public PremiumAndClaimsReserveCondition ()
    {
    }

    public PremiumAndClaimsReserveCondition (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("reserveNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.reserveNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.reserveNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("calculationBasis"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.calculationBasis = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("calculationFrequency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.calculationFrequency = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("calculationMethod"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.calculationMethod = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("divisionMethod"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.divisionMethod = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("entryCodeGroupForOriginal"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.entryCodeGroupForOriginal = (SicsAccountingEntryCodeGroupReference)__envelope.get(j,SicsAccountingEntryCodeGroupReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("entryCodeGroupForPremium"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.entryCodeGroupForPremium = (SicsAccountingEntryCodeGroupReference)__envelope.get(j,SicsAccountingEntryCodeGroupReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("firstCalculationDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.firstCalculationDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.firstCalculationDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("percentage"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.percentage = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.percentage = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("percentOfOriginal"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.percentOfOriginal = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.percentOfOriginal = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("percentOfPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.percentOfPremium = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.percentOfPremium = (BigDecimal)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.reserveNote!=null?this.reserveNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.calculationBasis!=null?this.calculationBasis:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.calculationFrequency!=null?this.calculationFrequency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.calculationMethod!=null?this.calculationMethod:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.divisionMethod!=null?this.divisionMethod:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.entryCodeGroupForOriginal!=null?this.entryCodeGroupForOriginal:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.entryCodeGroupForPremium!=null?this.entryCodeGroupForPremium:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.firstCalculationDate!=null?Helper.getDateFormat().format(this.firstCalculationDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.percentage!=null?this.percentage.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.percentOfOriginal!=null?this.percentOfOriginal.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.percentOfPremium!=null?this.percentOfPremium.toString():SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+11;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reserveNote";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "calculationBasis";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "calculationFrequency";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "calculationMethod";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "divisionMethod";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = SicsAccountingEntryCodeGroupReference.class;
            info.name = "entryCodeGroupForOriginal";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = SicsAccountingEntryCodeGroupReference.class;
            info.name = "entryCodeGroupForPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "firstCalculationDate";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "percentage";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "percentOfOriginal";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "percentOfPremium";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

