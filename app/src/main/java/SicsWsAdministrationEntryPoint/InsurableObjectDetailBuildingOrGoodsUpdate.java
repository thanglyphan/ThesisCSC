package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class InsurableObjectDetailBuildingOrGoodsUpdate extends InsurableObjectDetailUpdate implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Distance to Fire Brigade - Field
	*/
    public Integer distanceToFireBrigade;
    
	/**
	* SubclassNumber: 135. SicsRefBuildingProximityToFireBrigade
	*                Distance to Fire Brigade - Drop down
	*/
    public SicsReferenceDataReference distanceToFireBrigadeMeasurement;
    
	/**
	* Fire Prevention and Protection (tickbox)
	*/
    public Boolean hasFirePreventionAndProtection;
    
	/**
	* Sprinkler Systems: (tickbox)
	*/
    public Boolean hasSprinklingSystem;
    
	/**
	* SubclassNumber: 100. SicsRefSprinklingSystem
	*                Sprinkler Systems: Type
	*/
    public SicsReferenceDataReference sprinklingSystem;
    
	/**
	* Sprinkler Systems: Location
	*/
    public String sprinklingSystemNote;
    
	/**
	* Extinguishers: (tickbox)
	*/
    public Boolean hasFireExtinguisher;
    
	/**
	* SubclassNumber: 101. SicsRefFireExtinguisher
	*                Extinguishers: Type
	*/
    public SicsReferenceDataReference fireExtinguisher;
    
	/**
	* Extinguishers: Comments
	*/
    public String fireExtinguisherNote;
    
	/**
	* Fire Alarm: (tickbox)
	*/
    public Boolean hasFireAlarm;
    
	/**
	* SubclassNumber: 1000. SicsRefTypeOfFireAlarm
	*                Fire Alarm: Type
	*/
    public SicsReferenceDataReference typeOfFireAlarm;
    
	/**
	* Fire Alarm: Comments
	*/
    public String fireAlarmNote;
    
	/**
	* Own Fire Brigade: (tickbox)
	*/
    public Boolean hasOwnFireBrigade;
    
	/**
	* Own Fire Brigade: No. of Staff
	*/
    public Integer numberOfFireMen;
    
	/**
	* Additional Water Supply: (tickbox)
	*/
    public Boolean hasAdditionalWaterSupply;
    
	/**
	* Additional Water Supply: Comments
	*/
    public String waterSupplyNote;
    
	/**
	* Notes tab
	*/
    public String fireNote;
    
	/**
	* Building Protected (tickbox)
	*/
    public Boolean hasSecurity;
    
	/**
	* Electronic Surveillance (tickbox)
	*/
    public Boolean hasElectronicSurveilance;
    
	/**
	* Strongroom (tickbox)
	*/
    public Boolean hasSafeOrStrongRooms;
    
	/**
	* Guard Protected: (tickbox)
	*/
    public Boolean hasGuards;
    
	/**
	* Guard Protected: No. of Guards
	*/
    public Integer numberOfGuards;
    
	/**
	* Guard Protected: No. of Shifts
	*/
    public Long numberOfShifts;
    
	/**
	* Notes tab
	*/
    public String securityNote;

    public InsurableObjectDetailBuildingOrGoodsUpdate ()
    {
    }

    public InsurableObjectDetailBuildingOrGoodsUpdate (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("distanceToFireBrigade"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.distanceToFireBrigade = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.distanceToFireBrigade = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("distanceToFireBrigadeMeasurement"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.distanceToFireBrigadeMeasurement = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("hasFirePreventionAndProtection"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasFirePreventionAndProtection = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasFirePreventionAndProtection = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasSprinklingSystem"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasSprinklingSystem = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasSprinklingSystem = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("sprinklingSystem"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.sprinklingSystem = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("sprinklingSystemNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.sprinklingSystemNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.sprinklingSystemNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasFireExtinguisher"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasFireExtinguisher = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasFireExtinguisher = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("fireExtinguisher"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.fireExtinguisher = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("fireExtinguisherNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.fireExtinguisherNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.fireExtinguisherNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasFireAlarm"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasFireAlarm = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasFireAlarm = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("typeOfFireAlarm"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.typeOfFireAlarm = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("fireAlarmNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.fireAlarmNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.fireAlarmNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasOwnFireBrigade"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasOwnFireBrigade = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasOwnFireBrigade = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("numberOfFireMen"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.numberOfFireMen = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.numberOfFireMen = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasAdditionalWaterSupply"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasAdditionalWaterSupply = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasAdditionalWaterSupply = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("waterSupplyNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.waterSupplyNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.waterSupplyNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("fireNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.fireNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.fireNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasSecurity"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasSecurity = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasSecurity = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasElectronicSurveilance"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasElectronicSurveilance = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasElectronicSurveilance = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasSafeOrStrongRooms"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasSafeOrStrongRooms = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasSafeOrStrongRooms = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("hasGuards"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.hasGuards = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.hasGuards = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("numberOfGuards"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.numberOfGuards = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.numberOfGuards = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("numberOfShifts"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.numberOfShifts = new Long(j.toString());
                            }
                        }
                        else if (obj instanceof Long){
                            this.numberOfShifts = (Long)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("securityNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.securityNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.securityNote = (String)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.distanceToFireBrigade!=null?this.distanceToFireBrigade:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.distanceToFireBrigadeMeasurement!=null?this.distanceToFireBrigadeMeasurement:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.hasFirePreventionAndProtection!=null?this.hasFirePreventionAndProtection:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.hasSprinklingSystem!=null?this.hasSprinklingSystem:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.sprinklingSystem!=null?this.sprinklingSystem:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.sprinklingSystemNote!=null?this.sprinklingSystemNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.hasFireExtinguisher!=null?this.hasFireExtinguisher:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.fireExtinguisher!=null?this.fireExtinguisher:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.fireExtinguisherNote!=null?this.fireExtinguisherNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.hasFireAlarm!=null?this.hasFireAlarm:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.typeOfFireAlarm!=null?this.typeOfFireAlarm:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.fireAlarmNote!=null?this.fireAlarmNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.hasOwnFireBrigade!=null?this.hasOwnFireBrigade:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.numberOfFireMen!=null?this.numberOfFireMen:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.hasAdditionalWaterSupply!=null?this.hasAdditionalWaterSupply:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15)
        {
            return this.waterSupplyNote!=null?this.waterSupplyNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16)
        {
            return this.fireNote!=null?this.fireNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17)
        {
            return this.hasSecurity!=null?this.hasSecurity:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18)
        {
            return this.hasElectronicSurveilance!=null?this.hasElectronicSurveilance:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+19)
        {
            return this.hasSafeOrStrongRooms!=null?this.hasSafeOrStrongRooms:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+20)
        {
            return this.hasGuards!=null?this.hasGuards:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21)
        {
            return this.numberOfGuards!=null?this.numberOfGuards:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22)
        {
            return this.numberOfShifts!=null?this.numberOfShifts:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23)
        {
            return this.securityNote!=null?this.securityNote:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+24;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "distanceToFireBrigade";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "distanceToFireBrigadeMeasurement";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasFirePreventionAndProtection";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasSprinklingSystem";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "sprinklingSystem";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "sprinklingSystemNote";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasFireExtinguisher";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "fireExtinguisher";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "fireExtinguisherNote";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasFireAlarm";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "typeOfFireAlarm";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "fireAlarmNote";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasOwnFireBrigade";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "numberOfFireMen";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasAdditionalWaterSupply";
            info.namespace= "";
        }
        if(propertyIndex==count+15)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "waterSupplyNote";
            info.namespace= "";
        }
        if(propertyIndex==count+16)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "fireNote";
            info.namespace= "";
        }
        if(propertyIndex==count+17)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasSecurity";
            info.namespace= "";
        }
        if(propertyIndex==count+18)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasElectronicSurveilance";
            info.namespace= "";
        }
        if(propertyIndex==count+19)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasSafeOrStrongRooms";
            info.namespace= "";
        }
        if(propertyIndex==count+20)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "hasGuards";
            info.namespace= "";
        }
        if(propertyIndex==count+21)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "numberOfGuards";
            info.namespace= "";
        }
        if(propertyIndex==count+22)
        {
            info.type = PropertyInfo.LONG_CLASS;
            info.name = "numberOfShifts";
            info.namespace= "";
        }
        if(propertyIndex==count+23)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "securityNote";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

