package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class AccountingWorksheetCreate extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Title
	*/
    public String title;
    
	/**
	* BP Reference
	*/
    public String businessPartnerReference;
    
	/**
	* LM Reference
	*             NOT SUPPORTED BY FGU CLAIM WORKSHEET
	*/
    public String lmmReference;
    
	/**
	* REBORD Reference
	*             NOT SUPPORTED BY FGU CLAIM WORKSHEET
	*/
    public String ediRinetUniqueRebordReference;
    
	/**
	* RETACC Reference
	*             NOT SUPPORTED BY FGU CLAIM WORKSHEET
	*/
    public String ediRinetUniqueRetaccReference;
    
	/**
	* Notes
	*/
    public String comment;
    
	/**
	* policyId is for Life and Health.
	*/
    public String policyId;
    
	/**
	* Must be used together with Identifier Prefix and Identifier Serie Number
	*/
    public String identifier;
    
    public String identifierPrefix;
    
    public Integer identifierSerieNumber;
    
    public Integer identifierYearPart;
    
    public String externalId;
    
	/**
	* Booked (Accounting information tab)
	*/
    public java.util.Date dateOfBooking;
    
	/**
	* Is Vat To Be Calculated On Gross
	*/
    public Boolean isVatToBeCalculatedOnGross;
    
	/**
	* Accounting Period Based On Calendar
	*/
    public Boolean isAccountingPeriodFromToCalculationBasedOnCalendar;
    
	/**
	* Mark Worksheet asSpecial
	*/
    public Boolean worksheetAsSpecial;
    
	/**
	* SubclassNumber: 220. SicsRefOriginOfWorksheet.
	*                Origin of Worksheet
	*/
    public SicsReferenceDataReference origin;
    
	/**
	* (Registered) - by (Accounting information tab)
	*/
    public SicsUserReference registeredBy;
    
	/**
	* Registered (Accounting information tab)
	*/
    public java.util.Date registrationTimestamp;
    
    public WorksheetWorkingInformation worksheetWorkingInformation;
    
	/**
	* Selecting menu item UNFI on Worksheet Gui
	*/
    public Boolean unfinishWorksheet;
    
    public WorksheetLedgerEntryList worksheetLedgerEntryList;

    public AccountingWorksheetCreate ()
    {
    }

    public AccountingWorksheetCreate (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("title"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.title = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.title = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("businessPartnerReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.businessPartnerReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.businessPartnerReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lmmReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.lmmReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.lmmReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediRinetUniqueRebordReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediRinetUniqueRebordReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediRinetUniqueRebordReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediRinetUniqueRetaccReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediRinetUniqueRetaccReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediRinetUniqueRetaccReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("comment"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.comment = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.comment = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("policyId"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.policyId = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.policyId = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("identifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.identifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.identifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("identifierPrefix"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.identifierPrefix = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.identifierPrefix = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("identifierSerieNumber"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.identifierSerieNumber = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.identifierSerieNumber = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("identifierYearPart"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.identifierYearPart = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.identifierYearPart = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("externalId"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.externalId = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.externalId = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("dateOfBooking"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.dateOfBooking = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.dateOfBooking = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isVatToBeCalculatedOnGross"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isVatToBeCalculatedOnGross = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isVatToBeCalculatedOnGross = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAccountingPeriodFromToCalculationBasedOnCalendar"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAccountingPeriodFromToCalculationBasedOnCalendar = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAccountingPeriodFromToCalculationBasedOnCalendar = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("worksheetAsSpecial"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.worksheetAsSpecial = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.worksheetAsSpecial = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("origin"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.origin = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("registeredBy"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.registeredBy = (SicsUserReference)__envelope.get(j,SicsUserReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("registrationTimestamp"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.registrationTimestamp = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.registrationTimestamp = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("worksheetWorkingInformation"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.worksheetWorkingInformation = (WorksheetWorkingInformation)__envelope.get(j,WorksheetWorkingInformation.class,false);
                    }
                    continue;
                }
                if (info.name.equals("unfinishWorksheet"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.unfinishWorksheet = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.unfinishWorksheet = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("worksheetLedgerEntryList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.worksheetLedgerEntryList = new WorksheetLedgerEntryList(j,__envelope);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.title!=null?this.title:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.businessPartnerReference!=null?this.businessPartnerReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.lmmReference!=null?this.lmmReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.ediRinetUniqueRebordReference!=null?this.ediRinetUniqueRebordReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.ediRinetUniqueRetaccReference!=null?this.ediRinetUniqueRetaccReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.comment!=null?this.comment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.policyId!=null?this.policyId:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.identifier!=null?this.identifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.identifierPrefix!=null?this.identifierPrefix:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.identifierSerieNumber!=null?this.identifierSerieNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.identifierYearPart!=null?this.identifierYearPart:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==11)
        {
            return this.externalId!=null?this.externalId:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==12)
        {
            return this.dateOfBooking!=null?Helper.getDateFormat().format(this.dateOfBooking):SoapPrimitive.NullNilElement;
        }
        if(propertyIndex==13)
        {
            return this.isVatToBeCalculatedOnGross!=null?this.isVatToBeCalculatedOnGross:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==14)
        {
            return this.isAccountingPeriodFromToCalculationBasedOnCalendar!=null?this.isAccountingPeriodFromToCalculationBasedOnCalendar:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==15)
        {
            return this.worksheetAsSpecial!=null?this.worksheetAsSpecial:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==16)
        {
            return this.origin!=null?this.origin:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==17)
        {
            return this.registeredBy!=null?this.registeredBy:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==18)
        {
            return this.registrationTimestamp!=null?Helper.getDateTimeFormat().format(this.registrationTimestamp):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==19)
        {
            return this.worksheetWorkingInformation!=null?this.worksheetWorkingInformation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==20)
        {
            return this.unfinishWorksheet!=null?this.unfinishWorksheet:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==21)
        {
            return this.worksheetLedgerEntryList!=null?this.worksheetLedgerEntryList:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 22;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "title";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "businessPartnerReference";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "lmmReference";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediRinetUniqueRebordReference";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediRinetUniqueRetaccReference";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "comment";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "policyId";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "identifier";
            info.namespace= "";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "identifierPrefix";
            info.namespace= "";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "identifierSerieNumber";
            info.namespace= "";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "identifierYearPart";
            info.namespace= "";
        }
        if(propertyIndex==11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "externalId";
            info.namespace= "";
        }
        if(propertyIndex==12)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "dateOfBooking";
            info.namespace= "";
        }
        if(propertyIndex==13)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isVatToBeCalculatedOnGross";
            info.namespace= "";
        }
        if(propertyIndex==14)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAccountingPeriodFromToCalculationBasedOnCalendar";
            info.namespace= "";
        }
        if(propertyIndex==15)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "worksheetAsSpecial";
            info.namespace= "";
        }
        if(propertyIndex==16)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "origin";
            info.namespace= "";
        }
        if(propertyIndex==17)
        {
            info.type = SicsUserReference.class;
            info.name = "registeredBy";
            info.namespace= "";
        }
        if(propertyIndex==18)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "registrationTimestamp";
            info.namespace= "";
        }
        if(propertyIndex==19)
        {
            info.type = WorksheetWorkingInformation.class;
            info.name = "worksheetWorkingInformation";
            info.namespace= "";
        }
        if(propertyIndex==20)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "unfinishWorksheet";
            info.namespace= "";
        }
        if(propertyIndex==21)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "worksheetLedgerEntryList";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

