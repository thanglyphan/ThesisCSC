package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class UpdateUnderwritersEstimatesInput extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
    public SicsScopeOfCoverReference scopeOfCoverReference;
    
    public SicsAmendmentForConditionReference amendmentReference;
    
	/**
	* SubclassNumber: 1051.
	*/
    public SicsReferenceDataReference estimateType;
    
	/**
	* GUI: Currency (table column) under 'Estimates as at'.
	*                Currency (table column) under 'Estimates as at'.
	*                This element must be included unless all you want to do is to set the estimation complete flag (isComplete).
	*/
    public SicsCurrencyReference currency;
    
	/**
	* GUI: As At Date (table column) under 'Estimates as at'.
	*                As At Date (table column) under 'Estimates as at'.
	*                This element must be included unless all you want to do is to set the estimation complete flag (isComplete).
	*/
    public java.util.Date dateOfEstimate;
    
	/**
	* GUI: Menu item 'Remove' on row in 'Estimates as at' table.
	*                Use this element if you want to remove the estimation item. If this element
	*                is present and true the elements 'populateDefaultValues', 'estimateItems'
	*                and 'isComplete' are ignored.
	*                Menu item 'Remove' on row in 'Estimates as at' table.
	*/
    public Boolean isToBeDeleted;
    
	/**
	* GUI: View Models Sections popup menu item
	*                View Models Sections popup menu item
	*                Used to add new model sections.
	*                Use modelSectionListUpdate to update or delete a model sections
	*                Relevant only if model sections is in use.
	*/
    public ModelSectionList modelSectionList;
    
	/**
	* GUI: View Models Sections popup menu item
	*                View Models Sections popup menu item
	*                Currently deletion of model sections is not supported.
	*                Relevant only if model sections is in use.
	*/
    public ModelSectionListUpdate modelSectionListUpdate;
    
	/**
	* GUI: Map Automatically.
	*                Map Automatically popup menu item
	*                Relevant only if model sections is in use.
	*/
    public Boolean mapAutomatically;
    
	/**
	* GUI: Set Mapping complete.
	*                Set Mapping complete popup menu item
	*                Relevant only if model sections is in use.
	*/
    public Boolean setMappingComplete;
    
    public ArrayList< AbstractInputEstimateItem> estimateItems =new ArrayList<AbstractInputEstimateItem >();
    
	/**
	* GUI: Estimate Complete
	*                Estimate Complete
	*/
    public Boolean isComplete;

    public UpdateUnderwritersEstimatesInput ()
    {
    }

    public UpdateUnderwritersEstimatesInput (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("scopeOfCoverReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.scopeOfCoverReference = (SicsScopeOfCoverReference)__envelope.get(j,SicsScopeOfCoverReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("amendmentReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.amendmentReference = (SicsAmendmentForConditionReference)__envelope.get(j,SicsAmendmentForConditionReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("estimateType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.estimateType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("currency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("dateOfEstimate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.dateOfEstimate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.dateOfEstimate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isToBeDeleted"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isToBeDeleted = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isToBeDeleted = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("modelSectionList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.modelSectionList = new ModelSectionList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("modelSectionListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.modelSectionListUpdate = (ModelSectionListUpdate)__envelope.get(j,ModelSectionListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("mapAutomatically"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.mapAutomatically = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.mapAutomatically = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("setMappingComplete"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.setMappingComplete = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.setMappingComplete = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("estimateItems"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.estimateItems==null)
                        {
                            this.estimateItems = new ArrayList< AbstractInputEstimateItem>();
                        }
                        java.lang.Object j =obj;
                        AbstractInputEstimateItem j1= (AbstractInputEstimateItem)__envelope.get(j,AbstractInputEstimateItem.class,false);
                        this.estimateItems.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("isComplete"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isComplete = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isComplete = (Boolean)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return scopeOfCoverReference;
        }
        if(propertyIndex==1)
        {
            return this.amendmentReference!=null?this.amendmentReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return estimateType;
        }
        if(propertyIndex==3)
        {
            return this.currency!=null?this.currency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.dateOfEstimate!=null?Helper.getDateTimeFormat().format(this.dateOfEstimate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.isToBeDeleted!=null?this.isToBeDeleted:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.modelSectionList!=null?this.modelSectionList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.modelSectionListUpdate!=null?this.modelSectionListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.mapAutomatically!=null?this.mapAutomatically:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.setMappingComplete!=null?this.setMappingComplete:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=10 && propertyIndex < 10+this.estimateItems.size())
        {
            return this.estimateItems.get(propertyIndex-(10));
        }
        if(propertyIndex==10+this.estimateItems.size())
        {
            return this.isComplete!=null?this.isComplete:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 11+estimateItems.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = SicsScopeOfCoverReference.class;
            info.name = "scopeOfCoverReference";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = SicsAmendmentForConditionReference.class;
            info.name = "amendmentReference";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "estimateType";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "currency";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "dateOfEstimate";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isToBeDeleted";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "modelSectionList";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = ModelSectionListUpdate.class;
            info.name = "modelSectionListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "mapAutomatically";
            info.namespace= "";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "setMappingComplete";
            info.namespace= "";
        }
        if(propertyIndex>=10 && propertyIndex < 10+this.estimateItems.size())
        {
            info.type = AbstractInputEstimateItem.class;
            info.name = "estimateItems";
            info.namespace= "";
        }
        if(propertyIndex==10+this.estimateItems.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isComplete";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

