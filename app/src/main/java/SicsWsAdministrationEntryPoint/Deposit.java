package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class Deposit extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Used by the "update" Condition Web Service: set to "true" if the instalments should be recalculated for amendments.
	*                      Split Proportional
	*/
    public Boolean isSplitProportional;
    
	/**
	* Used by the "update" Condition Web Service: set to "true" if the instalments should be recalculated for amendments.
	*                      Add Single Instalment
	*/
    public Boolean isAddSingle;
    
	/**
	* Used by the "update" Condition Web Service: set to "true" if the instalments should be recalculated for amendments.
	*                      Additional / Return Premium from Amendments
	*/
    public Boolean isAdditionalReturnPremium;
    
	/**
	* Used by the "update" Condition Web Service: set to "true" if the instalments should be recalculated for amendments.
	*                      Prorata Split Instalments
	*/
    public Boolean isSplitProrata;
    
	/**
	* GUI label         
	*                         treaty flat rate      
	*                         periodHundredPercent      
	*                         periodOurShare       
	*                         netPremiumHundredPercent   
	*                         netPremiumOurShare      
	* 
	*                         treaty fixed rate
	*                         minimumHundredPercent   
	*                         depositHundredPercent      
	*                         minimumOurShare      
	*                         depositOurShare      
	* 
	*                         fac flat rate
	*                         annualHundredPercent      
	*                         annualOurShare      
	*                         periodHundredPercent      
	*                         periodOurShare       
	*                         netPremiumHundredPercent   
	*                         netPremiumOurShare      
	* 
	*                         fac fixed rate
	*                         minimumHundredPercent   
	*                         depositHundredPercent      
	*                         minimumOurShare      
	*                         depositOurShare
	*                      XXXXXX
	*/
    public ArrayList< DepositItem> depositItem =new ArrayList<DepositItem >();

    public Deposit ()
    {
    }

    public Deposit (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("isSplitProportional"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isSplitProportional = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isSplitProportional = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAddSingle"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAddSingle = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAddSingle = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAdditionalReturnPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAdditionalReturnPremium = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAdditionalReturnPremium = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isSplitProrata"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isSplitProrata = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isSplitProrata = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("depositItem"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.depositItem==null)
                        {
                            this.depositItem = new ArrayList< DepositItem>();
                        }
                        java.lang.Object j =obj;
                        DepositItem j1= (DepositItem)__envelope.get(j,DepositItem.class,false);
                        this.depositItem.add(j1);
                   
        
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.isSplitProportional!=null?this.isSplitProportional:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.isAddSingle!=null?this.isAddSingle:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.isAdditionalReturnPremium!=null?this.isAdditionalReturnPremium:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.isSplitProrata!=null?this.isSplitProrata:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+4 && propertyIndex < count+4+this.depositItem.size())
        {
            return this.depositItem.get(propertyIndex-(count+4));
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+4+depositItem.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isSplitProportional";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAddSingle";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAdditionalReturnPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isSplitProrata";
            info.namespace= "";
        }
        if(propertyIndex>=count+4 && propertyIndex < count+4+this.depositItem.size())
        {
            info.type = DepositItem.class;
            info.name = "depositItem";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

