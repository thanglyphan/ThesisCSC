package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class BusinessPartnerRelationshipTasksAndReference extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Must refer to an already existing business partner on the "Partners" tab (with Role as described by the "relationshipType" element below).
	*/
    public SicsBusinessPartnerReference businessPartner;
    
	/**
	* SubclassNumber: 55. SicsRefBusinessPartnerRelationshipType
	*             Combination of businessPartner and relationshipType must exists on the "Partners" tab.
	*/
    public SicsReferenceDataReference relationshipType;
    
	/**
	* SubclassNumber: 73. SicsRefBusinessAdministratorTask
	*             The list of tasks is a "replace all" list so any task already present on the business partner will be removed first. 
	*             At least one business partner must have the payment task. If this business partner has the payment task and it is not present in the input
	*             an error will occur unless you use the "transferPaymentTask" element to transfer the task to the correct business partner.
	*/
    public ArrayList< SicsReferenceDataReference> businessAdministratorTask =new ArrayList<SicsReferenceDataReference >();
    
    public String reference;

    public BusinessPartnerRelationshipTasksAndReference ()
    {
    }

    public BusinessPartnerRelationshipTasksAndReference (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("businessPartner"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.businessPartner = (SicsBusinessPartnerReference)__envelope.get(j,SicsBusinessPartnerReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("relationshipType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.relationshipType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("businessAdministratorTask"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.businessAdministratorTask==null)
                        {
                            this.businessAdministratorTask = new ArrayList< SicsReferenceDataReference>();
                        }
                        java.lang.Object j =obj;
                        SicsReferenceDataReference j1= (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                        this.businessAdministratorTask.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("reference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.reference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.reference = (String)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return businessPartner;
        }
        if(propertyIndex==1)
        {
            return relationshipType;
        }
        if(propertyIndex>=2 && propertyIndex < 2+this.businessAdministratorTask.size())
        {
            return this.businessAdministratorTask.get(propertyIndex-(2));
        }
        if(propertyIndex==2+this.businessAdministratorTask.size())
        {
            return this.reference!=null?this.reference:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 3+businessAdministratorTask.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = SicsBusinessPartnerReference.class;
            info.name = "businessPartner";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "relationshipType";
            info.namespace= "";
        }
        if(propertyIndex>=2 && propertyIndex < 2+this.businessAdministratorTask.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "businessAdministratorTask";
            info.namespace= "";
        }
        if(propertyIndex==2+this.businessAdministratorTask.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reference";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

