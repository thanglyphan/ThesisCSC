package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class ServerInformation extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
	/**
	* The signature is a concatination (and formatting) of the following fields.
	*/
    public String signature;
    
    public String productName;
    
    public String applicationMode;
    
    public String version;
    
    public String releaseNumber;
    
    public String patchLevel;
    
    public String build;
    
    public String database;
    
    public String environment;
    
    public String technicalUser;
    
    public String xmlCompatibilityType;
    
    public String sicsServerTimeZone;
    
    public Boolean logRequestAndResponse;
    
    public Boolean reportSoapFaultAsHttpOk;
    
    public Integer maxQueueLength;
    
    public Boolean applyServerSecurity;
    
    public String authenticationTokenValidity;
    
    public Boolean flushNonWsStaticDataFromCache;
    
    public Boolean OS_Authentication;

    public ServerInformation ()
    {
    }

    public ServerInformation (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("signature"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.signature = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.signature = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("productName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.productName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.productName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("applicationMode"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.applicationMode = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.applicationMode = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("version"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.version = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.version = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("releaseNumber"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.releaseNumber = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.releaseNumber = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("patchLevel"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.patchLevel = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.patchLevel = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("build"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.build = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.build = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("database"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.database = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.database = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("environment"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.environment = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.environment = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("technicalUser"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.technicalUser = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.technicalUser = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("xmlCompatibilityType"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.xmlCompatibilityType = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.xmlCompatibilityType = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("sicsServerTimeZone"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.sicsServerTimeZone = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.sicsServerTimeZone = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("logRequestAndResponse"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.logRequestAndResponse = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.logRequestAndResponse = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reportSoapFaultAsHttpOk"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.reportSoapFaultAsHttpOk = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.reportSoapFaultAsHttpOk = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("maxQueueLength"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.maxQueueLength = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.maxQueueLength = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("applyServerSecurity"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.applyServerSecurity = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.applyServerSecurity = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("authenticationTokenValidity"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.authenticationTokenValidity = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.authenticationTokenValidity = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("flushNonWsStaticDataFromCache"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.flushNonWsStaticDataFromCache = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.flushNonWsStaticDataFromCache = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("OS_Authentication"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.OS_Authentication = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.OS_Authentication = (Boolean)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return signature;
        }
        if(propertyIndex==1)
        {
            return productName;
        }
        if(propertyIndex==2)
        {
            return applicationMode;
        }
        if(propertyIndex==3)
        {
            return version;
        }
        if(propertyIndex==4)
        {
            return releaseNumber;
        }
        if(propertyIndex==5)
        {
            return patchLevel;
        }
        if(propertyIndex==6)
        {
            return build;
        }
        if(propertyIndex==7)
        {
            return this.database!=null?this.database:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.environment!=null?this.environment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.technicalUser!=null?this.technicalUser:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.xmlCompatibilityType!=null?this.xmlCompatibilityType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==11)
        {
            return this.sicsServerTimeZone!=null?this.sicsServerTimeZone:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==12)
        {
            return this.logRequestAndResponse!=null?this.logRequestAndResponse:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==13)
        {
            return this.reportSoapFaultAsHttpOk!=null?this.reportSoapFaultAsHttpOk:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==14)
        {
            return this.maxQueueLength!=null?this.maxQueueLength:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==15)
        {
            return this.applyServerSecurity!=null?this.applyServerSecurity:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==16)
        {
            return this.authenticationTokenValidity!=null?this.authenticationTokenValidity:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==17)
        {
            return this.flushNonWsStaticDataFromCache!=null?this.flushNonWsStaticDataFromCache:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==18)
        {
            return this.OS_Authentication!=null?this.OS_Authentication:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 19;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "signature";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "productName";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "applicationMode";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "version";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "releaseNumber";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "patchLevel";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "build";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "database";
            info.namespace= "";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "environment";
            info.namespace= "";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "technicalUser";
            info.namespace= "";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "xmlCompatibilityType";
            info.namespace= "";
        }
        if(propertyIndex==11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "sicsServerTimeZone";
            info.namespace= "";
        }
        if(propertyIndex==12)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "logRequestAndResponse";
            info.namespace= "";
        }
        if(propertyIndex==13)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "reportSoapFaultAsHttpOk";
            info.namespace= "";
        }
        if(propertyIndex==14)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "maxQueueLength";
            info.namespace= "";
        }
        if(propertyIndex==15)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "applyServerSecurity";
            info.namespace= "";
        }
        if(propertyIndex==16)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "authenticationTokenValidity";
            info.namespace= "";
        }
        if(propertyIndex==17)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "flushNonWsStaticDataFromCache";
            info.namespace= "";
        }
        if(propertyIndex==18)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "OS_Authentication";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

