package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigInteger;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;
import java.math.BigDecimal;

public class LfScopeOfCoverForLightPolicy extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Mandatory for create service.
	*/
    public String name;
    
	/**
	* Mandatory for create service.
	*/
    public SicsCurrencyReference currency;
    
    public BigInteger mainLimit;
    
	/**
	* Attachment From
	*/
    public java.util.Date attachmentFromDateTime;
    
	/**
	* Attachment To
	*/
    public java.util.Date attachmentToDateTime;
    
    public String externalIdentifier;
    
    public ArrayList< SicsCountryReference> includedCountries =new ArrayList<SicsCountryReference >();
    
    public ArrayList< SicsStateReference> includedStates =new ArrayList<SicsStateReference >();
    
    public ArrayList< SicsAreaGroupCountryReference> includedCountryGroups =new ArrayList<SicsAreaGroupCountryReference >();
    
    public ArrayList< SicsAreaGroupStateReference> includedStateGroups =new ArrayList<SicsAreaGroupStateReference >();
    
	/**
	* For Life Policy Light only one element is allowed.
	*/
    public ArrayList< SicsAbstractInsurableObjectReference> insurableObjects =new ArrayList<SicsAbstractInsurableObjectReference >();
    
	/**
	* SubclassNumber: 19,3,50,48,51,52,53,54,214,215,261,262,263,264,265,266,44.
	*/
    public ArrayList< SicsReferenceDataReference> includedRefData =new ArrayList<SicsReferenceDataReference >();
    
    public SicsReportingUnitReference reportingUnit1;
    
    public SicsReportingUnitReference reportingUnit2;
    
    public SicsReportingUnitReference reportingUnit3;
    
    public BigDecimal sharePercent;
    
    public BigInteger informationalLimit1;
    
    public UserDefinedFields userDefinedData;
    
	/**
	* SubclassNumber:  1131.
	*/
    public SicsReferenceDataReference transactionType;
    
	/**
	* SubclassNumber:  1133.
	*/
    public SicsReferenceDataReference smokerStatus;
    
	/**
	* SubclassNumber:  1134
	*/
    public SicsReferenceDataReference occupationClass;
    
	/**
	* SubclassNumber:  1128
	*/
    public SicsReferenceDataReference riskClass;
    
	/**
	* SubclassNumber:  1129
	*/
    public SicsReferenceDataReference disabilityClass;
    
    public Integer age;
    
    public Integer normalRetirementAge;
    
    public SicsReferenceDataReference escalation;
    
    public BigDecimal extraPerCentOfSarPremium;
    
    public BigDecimal extraPerMilleOfSarPremium;
    
    public BigDecimal extraFactorOfSarPremium;
    
	/**
	* Extra Mortality/Morbidity Percentage
	*/
    public BigDecimal extraPremium;
    
    public java.util.Date creationTimestamp;

    public LfScopeOfCoverForLightPolicy ()
    {
    }

    public LfScopeOfCoverForLightPolicy (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("name"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.name = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.name = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("currency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("mainLimit"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.mainLimit = new BigInteger(j.toString());
                            }
                        }
                        else if (obj instanceof BigInteger){
                            this.mainLimit = (BigInteger)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("attachmentFromDateTime"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.attachmentFromDateTime = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.attachmentFromDateTime = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("attachmentToDateTime"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.attachmentToDateTime = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.attachmentToDateTime = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("externalIdentifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.externalIdentifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.externalIdentifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("includedCountries"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedCountries==null)
                        {
                            this.includedCountries = new ArrayList< SicsCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsCountryReference j1= (SicsCountryReference)__envelope.get(j,SicsCountryReference.class,false);
                        this.includedCountries.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedStates"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedStates==null)
                        {
                            this.includedStates = new ArrayList< SicsStateReference>();
                        }
                        java.lang.Object j =obj;
                        SicsStateReference j1= (SicsStateReference)__envelope.get(j,SicsStateReference.class,false);
                        this.includedStates.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedCountryGroups"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedCountryGroups==null)
                        {
                            this.includedCountryGroups = new ArrayList< SicsAreaGroupCountryReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAreaGroupCountryReference j1= (SicsAreaGroupCountryReference)__envelope.get(j,SicsAreaGroupCountryReference.class,false);
                        this.includedCountryGroups.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedStateGroups"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedStateGroups==null)
                        {
                            this.includedStateGroups = new ArrayList< SicsAreaGroupStateReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAreaGroupStateReference j1= (SicsAreaGroupStateReference)__envelope.get(j,SicsAreaGroupStateReference.class,false);
                        this.includedStateGroups.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("insurableObjects"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.insurableObjects==null)
                        {
                            this.insurableObjects = new ArrayList< SicsAbstractInsurableObjectReference>();
                        }
                        java.lang.Object j =obj;
                        SicsAbstractInsurableObjectReference j1= (SicsAbstractInsurableObjectReference)__envelope.get(j,SicsAbstractInsurableObjectReference.class,false);
                        this.insurableObjects.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("includedRefData"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.includedRefData==null)
                        {
                            this.includedRefData = new ArrayList< SicsReferenceDataReference>();
                        }
                        java.lang.Object j =obj;
                        SicsReferenceDataReference j1= (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                        this.includedRefData.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("reportingUnit1"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnit1 = (SicsReportingUnitReference)__envelope.get(j,SicsReportingUnitReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reportingUnit2"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnit2 = (SicsReportingUnitReference)__envelope.get(j,SicsReportingUnitReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reportingUnit3"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnit3 = (SicsReportingUnitReference)__envelope.get(j,SicsReportingUnitReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("sharePercent"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.sharePercent = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.sharePercent = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("informationalLimit1"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.informationalLimit1 = new BigInteger(j.toString());
                            }
                        }
                        else if (obj instanceof BigInteger){
                            this.informationalLimit1 = (BigInteger)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("userDefinedData"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.userDefinedData = (UserDefinedFields)__envelope.get(j,UserDefinedFields.class,false);
                    }
                    continue;
                }
                if (info.name.equals("transactionType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.transactionType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("smokerStatus"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.smokerStatus = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("occupationClass"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.occupationClass = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("riskClass"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.riskClass = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("disabilityClass"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.disabilityClass = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("age"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.age = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.age = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("normalRetirementAge"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.normalRetirementAge = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.normalRetirementAge = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("escalation"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.escalation = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("extraPerCentOfSarPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.extraPerCentOfSarPremium = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.extraPerCentOfSarPremium = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("extraPerMilleOfSarPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.extraPerMilleOfSarPremium = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.extraPerMilleOfSarPremium = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("extraFactorOfSarPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.extraFactorOfSarPremium = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.extraFactorOfSarPremium = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("extraPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.extraPremium = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.extraPremium = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("creationTimestamp"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.creationTimestamp = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.creationTimestamp = (java.util.Date)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.name!=null?this.name:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.currency!=null?this.currency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.mainLimit!=null?this.mainLimit.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.attachmentFromDateTime!=null?Helper.getDateTimeFormat().format(this.attachmentFromDateTime):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.attachmentToDateTime!=null?Helper.getDateTimeFormat().format(this.attachmentToDateTime):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.externalIdentifier!=null?this.externalIdentifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+6 && propertyIndex < count+6+this.includedCountries.size())
        {
            return this.includedCountries.get(propertyIndex-(count+6));
        }
        if(propertyIndex>=count+6+this.includedCountries.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size())
        {
            return this.includedStates.get(propertyIndex-(count+6+this.includedCountries.size()));
        }
        if(propertyIndex>=count+6+this.includedCountries.size()+this.includedStates.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size())
        {
            return this.includedCountryGroups.get(propertyIndex-(count+6+this.includedCountries.size()+this.includedStates.size()));
        }
        if(propertyIndex>=count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size())
        {
            return this.includedStateGroups.get(propertyIndex-(count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()));
        }
        if(propertyIndex>=count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size())
        {
            return this.insurableObjects.get(propertyIndex-(count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()));
        }
        if(propertyIndex>=count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.includedRefData.get(propertyIndex-(count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()));
        }
        if(propertyIndex==count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.reportingUnit1!=null?this.reportingUnit1:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.reportingUnit2!=null?this.reportingUnit2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.reportingUnit3!=null?this.reportingUnit3:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.sharePercent!=null?this.sharePercent.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.informationalLimit1!=null?this.informationalLimit1.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.userDefinedData!=null?this.userDefinedData:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.transactionType!=null?this.transactionType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.smokerStatus!=null?this.smokerStatus:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.occupationClass!=null?this.occupationClass:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.riskClass!=null?this.riskClass:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.disabilityClass!=null?this.disabilityClass:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.age!=null?this.age:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.normalRetirementAge!=null?this.normalRetirementAge:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+19+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.escalation!=null?this.escalation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+20+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.extraPerCentOfSarPremium!=null?this.extraPerCentOfSarPremium.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.extraPerMilleOfSarPremium!=null?this.extraPerMilleOfSarPremium.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.extraFactorOfSarPremium!=null?this.extraFactorOfSarPremium.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.extraPremium!=null?this.extraPremium.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+24+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            return this.creationTimestamp!=null?Helper.getDateTimeFormat().format(this.creationTimestamp):SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+25+includedCountries.size()+includedStates.size()+includedCountryGroups.size()+includedStateGroups.size()+insurableObjects.size()+includedRefData.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "name";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "currency";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "mainLimit";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "attachmentFromDateTime";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "attachmentToDateTime";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "externalIdentifier";
            info.namespace= "";
        }
        if(propertyIndex>=count+6 && propertyIndex < count+6+this.includedCountries.size())
        {
            info.type = SicsCountryReference.class;
            info.name = "includedCountries";
            info.namespace= "";
        }
        if(propertyIndex>=count+6+this.includedCountries.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size())
        {
            info.type = SicsStateReference.class;
            info.name = "includedStates";
            info.namespace= "";
        }
        if(propertyIndex>=count+6+this.includedCountries.size()+this.includedStates.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size())
        {
            info.type = SicsAreaGroupCountryReference.class;
            info.name = "includedCountryGroups";
            info.namespace= "";
        }
        if(propertyIndex>=count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size())
        {
            info.type = SicsAreaGroupStateReference.class;
            info.name = "includedStateGroups";
            info.namespace= "";
        }
        if(propertyIndex>=count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size())
        {
            info.type = SicsAbstractInsurableObjectReference.class;
            info.name = "insurableObjects";
            info.namespace= "";
        }
        if(propertyIndex>=count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size() && propertyIndex < count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "includedRefData";
            info.namespace= "";
        }
        if(propertyIndex==count+6+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReportingUnitReference.class;
            info.name = "reportingUnit1";
            info.namespace= "";
        }
        if(propertyIndex==count+7+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReportingUnitReference.class;
            info.name = "reportingUnit2";
            info.namespace= "";
        }
        if(propertyIndex==count+8+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReportingUnitReference.class;
            info.name = "reportingUnit3";
            info.namespace= "";
        }
        if(propertyIndex==count+9+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "sharePercent";
            info.namespace= "";
        }
        if(propertyIndex==count+10+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "informationalLimit1";
            info.namespace= "";
        }
        if(propertyIndex==count+11+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = UserDefinedFields.class;
            info.name = "userDefinedData";
            info.namespace= "";
        }
        if(propertyIndex==count+12+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "transactionType";
            info.namespace= "";
        }
        if(propertyIndex==count+13+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "smokerStatus";
            info.namespace= "";
        }
        if(propertyIndex==count+14+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "occupationClass";
            info.namespace= "";
        }
        if(propertyIndex==count+15+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "riskClass";
            info.namespace= "";
        }
        if(propertyIndex==count+16+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "disabilityClass";
            info.namespace= "";
        }
        if(propertyIndex==count+17+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "age";
            info.namespace= "";
        }
        if(propertyIndex==count+18+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "normalRetirementAge";
            info.namespace= "";
        }
        if(propertyIndex==count+19+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "escalation";
            info.namespace= "";
        }
        if(propertyIndex==count+20+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "extraPerCentOfSarPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+21+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "extraPerMilleOfSarPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+22+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "extraFactorOfSarPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+23+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "extraPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+24+this.includedCountries.size()+this.includedStates.size()+this.includedCountryGroups.size()+this.includedStateGroups.size()+this.insurableObjects.size()+this.includedRefData.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "creationTimestamp";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

