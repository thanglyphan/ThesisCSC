package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class BusinessPartnerUpdate extends PartyUpdate implements KvmSerializable,java.io.Serializable
{

    
	/**
	* guiLabel: Legal Entity
	*                Legal Entity
	*/
    public Boolean isLegalEntity;
    
    public Boolean isBaseCompany;
    
    public Boolean isToBeIncludedFromBillingStatements;
    
	/**
	* Set this value to
	*                     true: to create a Third Party (Insured) 
	*                     false: to create a Business Partner 
	*                default value: false
	*/
    public Boolean isInsured;
    
    public Boolean isPaperProvider;
    
	/**
	* This element is mandatory for create-type services like createBusinessPartner and createPerson.
	*                guiLabel: Name (group box)
	*                Name (group box)
	*/
    public OrganisationName currentName;
    
    public OrganisationNameList alternativeNameList;
    
    public OrganisationNameList formerNameList;
    
    public OwnerList ownerList;
    
    public SubsidiaryList subsidiaryList;
    
    public BusinessPartnerRatingList businessPartnerRatingList;
    
    public BrandedProductDetailList brandedProductDetailList;
    
	/**
	* SubclassNumber: 235.
	*                CODE: PROVISIONAL, APPROVED, INACTIVE.
	*/
    public SicsReferenceDataReference status;
    
	/**
	* Which Reference Data Subclass to use is System Parameter defined.
	*/
    public SicsReferenceDataReference fundType;
    
	/**
	* SubclassNumber: 23.
	*/
    public ArrayList< SicsReferenceDataReference> businessPartnerCategory =new ArrayList<SicsReferenceDataReference >();
    
    public BankAccountList bankAccountList;
    
    public Boolean isAlert;
    
	/**
	* SubclassNumber: 298.
	*/
    public SicsReferenceDataReference reasonForAlert;
    
    public String reasonForAlertNote;
    
	/**
	* Groups
	*/
    public GroupMembershipList groupMembershipList;
    
    public BankAccountListUpdate bankAccountListUpdate;
    
    public OrganisationNameListUpdate alternativeNameListUpdate;
    
    public OrganisationNameListUpdate formerNameListUpdate;
    
    public GroupMembershipListUpdate groupMembershipListUpdate;
    
    public OwnerListUpdate ownerListUpdate;
    
    public SubsidiaryListUpdate subsidiaryListUpdate;
    
    public BusinessPartnerRatingListUpdate businessPartnerRatingListUpdate;
    
    public EMessagingUpdate eMessaging;
    
    public BrandedProductDetailListUpdate brandedProductDetailListUpdate;

    public BusinessPartnerUpdate ()
    {
    }

    public BusinessPartnerUpdate (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("isLegalEntity"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isLegalEntity = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isLegalEntity = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isBaseCompany"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isBaseCompany = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isBaseCompany = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isToBeIncludedFromBillingStatements"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isToBeIncludedFromBillingStatements = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isToBeIncludedFromBillingStatements = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isInsured"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isInsured = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isInsured = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isPaperProvider"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isPaperProvider = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isPaperProvider = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("currentName"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.currentName = (OrganisationName)__envelope.get(j,OrganisationName.class,false);
                    }
                    continue;
                }
                if (info.name.equals("alternativeNameList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.alternativeNameList = new OrganisationNameList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("formerNameList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.formerNameList = new OrganisationNameList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("ownerList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.ownerList = new OwnerList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("subsidiaryList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.subsidiaryList = new SubsidiaryList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("businessPartnerRatingList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.businessPartnerRatingList = new BusinessPartnerRatingList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("brandedProductDetailList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.brandedProductDetailList = new BrandedProductDetailList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("status"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.status = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("fundType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.fundType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("businessPartnerCategory"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.businessPartnerCategory==null)
                        {
                            this.businessPartnerCategory = new ArrayList< SicsReferenceDataReference>();
                        }
                        java.lang.Object j =obj;
                        SicsReferenceDataReference j1= (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                        this.businessPartnerCategory.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("bankAccountList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.bankAccountList = new BankAccountList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("isAlert"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAlert = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAlert = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reasonForAlert"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reasonForAlert = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reasonForAlertNote"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.reasonForAlertNote = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.reasonForAlertNote = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("groupMembershipList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.groupMembershipList = new GroupMembershipList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("bankAccountListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.bankAccountListUpdate = (BankAccountListUpdate)__envelope.get(j,BankAccountListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("alternativeNameListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.alternativeNameListUpdate = (OrganisationNameListUpdate)__envelope.get(j,OrganisationNameListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("formerNameListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.formerNameListUpdate = (OrganisationNameListUpdate)__envelope.get(j,OrganisationNameListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("groupMembershipListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.groupMembershipListUpdate = (GroupMembershipListUpdate)__envelope.get(j,GroupMembershipListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("ownerListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.ownerListUpdate = (OwnerListUpdate)__envelope.get(j,OwnerListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("subsidiaryListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.subsidiaryListUpdate = (SubsidiaryListUpdate)__envelope.get(j,SubsidiaryListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("businessPartnerRatingListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.businessPartnerRatingListUpdate = (BusinessPartnerRatingListUpdate)__envelope.get(j,BusinessPartnerRatingListUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("eMessaging"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.eMessaging = (EMessagingUpdate)__envelope.get(j,EMessagingUpdate.class,false);
                    }
                    continue;
                }
                if (info.name.equals("brandedProductDetailListUpdate"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.brandedProductDetailListUpdate = new BrandedProductDetailListUpdate(j,__envelope);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.isLegalEntity!=null?this.isLegalEntity:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.isBaseCompany!=null?this.isBaseCompany:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.isToBeIncludedFromBillingStatements!=null?this.isToBeIncludedFromBillingStatements:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.isInsured!=null?this.isInsured:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.isPaperProvider!=null?this.isPaperProvider:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.currentName!=null?this.currentName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.alternativeNameList!=null?this.alternativeNameList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.formerNameList!=null?this.formerNameList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.ownerList!=null?this.ownerList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.subsidiaryList!=null?this.subsidiaryList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.businessPartnerRatingList!=null?this.businessPartnerRatingList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.brandedProductDetailList!=null?this.brandedProductDetailList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.status!=null?this.status:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.fundType!=null?this.fundType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+14 && propertyIndex < count+14+this.businessPartnerCategory.size())
        {
            return this.businessPartnerCategory.get(propertyIndex-(count+14));
        }
        if(propertyIndex==count+14+this.businessPartnerCategory.size())
        {
            return this.bankAccountList!=null?this.bankAccountList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15+this.businessPartnerCategory.size())
        {
            return this.isAlert!=null?this.isAlert:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16+this.businessPartnerCategory.size())
        {
            return this.reasonForAlert!=null?this.reasonForAlert:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17+this.businessPartnerCategory.size())
        {
            return this.reasonForAlertNote!=null?this.reasonForAlertNote:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18+this.businessPartnerCategory.size())
        {
            return this.groupMembershipList!=null?this.groupMembershipList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+19+this.businessPartnerCategory.size())
        {
            return this.bankAccountListUpdate!=null?this.bankAccountListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+20+this.businessPartnerCategory.size())
        {
            return this.alternativeNameListUpdate!=null?this.alternativeNameListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21+this.businessPartnerCategory.size())
        {
            return this.formerNameListUpdate!=null?this.formerNameListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22+this.businessPartnerCategory.size())
        {
            return this.groupMembershipListUpdate!=null?this.groupMembershipListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23+this.businessPartnerCategory.size())
        {
            return this.ownerListUpdate!=null?this.ownerListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+24+this.businessPartnerCategory.size())
        {
            return this.subsidiaryListUpdate!=null?this.subsidiaryListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+25+this.businessPartnerCategory.size())
        {
            return this.businessPartnerRatingListUpdate!=null?this.businessPartnerRatingListUpdate:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+26+this.businessPartnerCategory.size())
        {
            return this.eMessaging!=null?this.eMessaging:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+27+this.businessPartnerCategory.size())
        {
            return this.brandedProductDetailListUpdate!=null?this.brandedProductDetailListUpdate:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+28+businessPartnerCategory.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isLegalEntity";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isBaseCompany";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isToBeIncludedFromBillingStatements";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isInsured";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isPaperProvider";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = OrganisationName.class;
            info.name = "currentName";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "alternativeNameList";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "formerNameList";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "ownerList";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "subsidiaryList";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "businessPartnerRatingList";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "brandedProductDetailList";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "status";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "fundType";
            info.namespace= "";
        }
        if(propertyIndex>=count+14 && propertyIndex < count+14+this.businessPartnerCategory.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "businessPartnerCategory";
            info.namespace= "";
        }
        if(propertyIndex==count+14+this.businessPartnerCategory.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "bankAccountList";
            info.namespace= "";
        }
        if(propertyIndex==count+15+this.businessPartnerCategory.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAlert";
            info.namespace= "";
        }
        if(propertyIndex==count+16+this.businessPartnerCategory.size())
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "reasonForAlert";
            info.namespace= "";
        }
        if(propertyIndex==count+17+this.businessPartnerCategory.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "reasonForAlertNote";
            info.namespace= "";
        }
        if(propertyIndex==count+18+this.businessPartnerCategory.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "groupMembershipList";
            info.namespace= "";
        }
        if(propertyIndex==count+19+this.businessPartnerCategory.size())
        {
            info.type = BankAccountListUpdate.class;
            info.name = "bankAccountListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==count+20+this.businessPartnerCategory.size())
        {
            info.type = OrganisationNameListUpdate.class;
            info.name = "alternativeNameListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==count+21+this.businessPartnerCategory.size())
        {
            info.type = OrganisationNameListUpdate.class;
            info.name = "formerNameListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==count+22+this.businessPartnerCategory.size())
        {
            info.type = GroupMembershipListUpdate.class;
            info.name = "groupMembershipListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==count+23+this.businessPartnerCategory.size())
        {
            info.type = OwnerListUpdate.class;
            info.name = "ownerListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==count+24+this.businessPartnerCategory.size())
        {
            info.type = SubsidiaryListUpdate.class;
            info.name = "subsidiaryListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==count+25+this.businessPartnerCategory.size())
        {
            info.type = BusinessPartnerRatingListUpdate.class;
            info.name = "businessPartnerRatingListUpdate";
            info.namespace= "";
        }
        if(propertyIndex==count+26+this.businessPartnerCategory.size())
        {
            info.type = EMessagingUpdate.class;
            info.name = "eMessaging";
            info.namespace= "";
        }
        if(propertyIndex==count+27+this.businessPartnerCategory.size())
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "brandedProductDetailListUpdate";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

