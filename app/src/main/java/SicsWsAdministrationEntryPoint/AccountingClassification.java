package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

/**
* The table of loss participation for Deductibles Condition
*/
public class AccountingClassification extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
	/**
	* The target scope of cover. TODO: What is this?
	*                       If not provided by the client the TODO: what is used then?
	*/
    public SicsScopeOfCoverReference targetScopeOfCover;
    
	/**
	* The objectId; unique identfier for the Accounting Classification. This element is only here to support domainRetrieval Accounting Classification.
	*                       It has NO effect on create or update Accounting Classification at all. The objectId for Accounting Classification can also be used to identify an
	*                       Accounting Classification in WebService createWorksheet.
	*/
    public String objectId;
    
	/**
	* The "Name" column in the Accounting Classification list-screen in SICS/nt.
	*                       Also called "Accounting Classification Name" in the create/edit screen in SICS/nt.
	*                       If not provided by the client a name is generated by the system.
	*/
    public String classificationName;
    
	/**
	* The "Classification Items" column in the Accounting Classification list-screen in SICS/nt.
	*/
    public ClassificationTuple classificationItems;
    
	/**
	* The "RU 1" column in the Accounting Classification list-screen in SICS/nt.
	*                       Also called "Reporting Unit 1 (Profit Center)" in the create/edit screen in SICS/nt
	*/
    public SicsReportingUnitReference reportingUnit1;
    
	/**
	* The "RU 2" column in the Accounting Classification list-screen in SICS/nt.
	*                       Also called "Reporting Unit 2 (Segment Code)" in the create/edit screen in SICS/nt
	*/
    public SicsReportingUnitReference reportingUnit2;
    
	/**
	* The "RU 3" column in the Accounting Classification list-screen in SICS/nt.
	*                       Also called "Reporting Unit 3 (Person)" in the create/edit screen in SICS/nt
	*/
    public SicsReportingUnitReference reportingUnit3;
    
	/**
	* The "Split %" column in the Accounting Classification list-screen in SICS/nt.
	*                       Also called "Share of Main Section" in the create/edit screen in SICS/nt
	*/
    public BigDecimal splitPercentage;
    
	/**
	* The "Active" column in the Accounting Classification list-screen in SICS/nt.
	*                       Same name in the create/edit screen in SICS/nt
	*/
    public Boolean isActive=false;
    
	/**
	* The "EDI Reference" column in the Accounting Classification list-screen in SICS/nt.
	*                       Same name in the create/edit screen in SICS/nt
	*/
    public String ediReference;
    
	/**
	* The "eMessaging Description" column in the Accounting Classification list-screen in SICS/nt.
	*                       Same name in the create/edit screen in SICS/nt
	*/
    public String eMessagingDescription;
    
	/**
	* The "High Level Reference" column in the Accounting Classification list-screen in SICS/nt.
	*                       Same name in the create/edit screen in SICS/nt
	*/
    public String highLevelReference;
    
	/**
	* The "Default" column in the Accounting Classification list-screen in SICS/nt.
	*                       Also called "Default Classification" in the create/edit screen in SICS/nt
	*/
    public Boolean isDefault=false;
    
	/**
	* The "Valid" column in the Accounting Classification list-screen in SICS/nt.
	*                       This element is only here to support domainRetrieval Accounting Classification.
	*                       It has NO effect on create or update Accounting Classification at all.
	*/
    public Boolean isValid;

    public AccountingClassification ()
    {
    }

    public AccountingClassification (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("targetScopeOfCover"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.targetScopeOfCover = (SicsScopeOfCoverReference)__envelope.get(j,SicsScopeOfCoverReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("objectId"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.objectId = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.objectId = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("classificationName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.classificationName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.classificationName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("classificationItems"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.classificationItems = (ClassificationTuple)__envelope.get(j,ClassificationTuple.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reportingUnit1"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnit1 = (SicsReportingUnitReference)__envelope.get(j,SicsReportingUnitReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reportingUnit2"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnit2 = (SicsReportingUnitReference)__envelope.get(j,SicsReportingUnitReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("reportingUnit3"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.reportingUnit3 = (SicsReportingUnitReference)__envelope.get(j,SicsReportingUnitReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("splitPercentage"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.splitPercentage = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.splitPercentage = (BigDecimal)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isActive"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isActive = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isActive = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ediReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.ediReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.ediReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("eMessagingDescription"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.eMessagingDescription = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.eMessagingDescription = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("highLevelReference"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.highLevelReference = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.highLevelReference = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isDefault"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isDefault = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isDefault = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isValid"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isValid = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isValid = (Boolean)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.targetScopeOfCover!=null?this.targetScopeOfCover:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.objectId!=null?this.objectId:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.classificationName!=null?this.classificationName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return classificationItems;
        }
        if(propertyIndex==count+4)
        {
            return this.reportingUnit1!=null?this.reportingUnit1:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.reportingUnit2!=null?this.reportingUnit2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.reportingUnit3!=null?this.reportingUnit3:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.splitPercentage!=null?this.splitPercentage.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return isActive;
        }
        if(propertyIndex==count+9)
        {
            return this.ediReference!=null?this.ediReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.eMessagingDescription!=null?this.eMessagingDescription:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.highLevelReference!=null?this.highLevelReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return isDefault;
        }
        if(propertyIndex==count+13)
        {
            return this.isValid!=null?this.isValid:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+14;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = SicsScopeOfCoverReference.class;
            info.name = "targetScopeOfCover";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "objectId";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "classificationName";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = ClassificationTuple.class;
            info.name = "classificationItems";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = SicsReportingUnitReference.class;
            info.name = "reportingUnit1";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = SicsReportingUnitReference.class;
            info.name = "reportingUnit2";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = SicsReportingUnitReference.class;
            info.name = "reportingUnit3";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "splitPercentage";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isActive";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ediReference";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "eMessagingDescription";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "highLevelReference";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isDefault";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isValid";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

