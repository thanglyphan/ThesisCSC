package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class InsurableObjectDetailPersonUpdate extends InsurableObjectDetailUpdate implements KvmSerializable,java.io.Serializable
{

    
    public java.util.Date dateOfBirth;
    
    public Boolean deceased;
    
    public java.util.Date dateOfDecease;
    
	/**
	* SubclassNumber: 15. SicsRefSex
	*                Gender
	*/
    public SicsReferenceDataReference sex;
    
	/**
	* Place of Birth
	*/
    public SicsCountryReference countryOfBirth;
    
    public SicsCountryReference nationality;
    
	/**
	* SubclassNumber: 534. SicsRefInsurableObjectOccupation
	*/
    public SicsReferenceDataReference occupation;
    
	/**
	* SubclassNumber: 147. SicsRefProfession
	*/
    public SicsReferenceDataReference profession;
    
	/**
	* SubclassNumber: 146. SicsRefPositionOfProfession
	*/
    public SicsReferenceDataReference position;
    
	/**
	* Yearly Income (on nonProp on Limits-tab) 2nd and 3rd field: amount - currency
	*/
    public SicsMonetaryAmountReference income;
    
	/**
	* SubclassNumber: 535. SicsRefInsurableObjectClassification
	*                Classification
	*/
    public SicsReferenceDataReference classificationOfOccupation;
    
	/**
	* Medical Check up
	*/
    public java.util.Date dateOfLastMedicalCheckUp;
    
	/**
	* Frequent Flyer - Tickbox
	*/
    public Boolean isFrequentFlyer;
    
	/**
	* Frequent Flyer - Field
	*/
    public String frequentFlyerComment;

    public InsurableObjectDetailPersonUpdate ()
    {
    }

    public InsurableObjectDetailPersonUpdate (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("dateOfBirth"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.dateOfBirth = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.dateOfBirth = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("deceased"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.deceased = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.deceased = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("dateOfDecease"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.dateOfDecease = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.dateOfDecease = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("sex"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.sex = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("countryOfBirth"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.countryOfBirth = (SicsCountryReference)__envelope.get(j,SicsCountryReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("nationality"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.nationality = (SicsCountryReference)__envelope.get(j,SicsCountryReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("occupation"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.occupation = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("profession"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.profession = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("position"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.position = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("income"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.income = (SicsMonetaryAmountReference)__envelope.get(j,SicsMonetaryAmountReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("classificationOfOccupation"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.classificationOfOccupation = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("dateOfLastMedicalCheckUp"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.dateOfLastMedicalCheckUp = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.dateOfLastMedicalCheckUp = (java.util.Date)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isFrequentFlyer"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isFrequentFlyer = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isFrequentFlyer = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("frequentFlyerComment"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.frequentFlyerComment = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.frequentFlyerComment = (String)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.dateOfBirth!=null?Helper.getDateFormat().format(this.dateOfBirth):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.deceased!=null?this.deceased:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.dateOfDecease!=null?Helper.getDateFormat().format(this.dateOfDecease):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.sex!=null?this.sex:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.countryOfBirth!=null?this.countryOfBirth:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.nationality!=null?this.nationality:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.occupation!=null?this.occupation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.profession!=null?this.profession:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.position!=null?this.position:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.income!=null?this.income:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.classificationOfOccupation!=null?this.classificationOfOccupation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.dateOfLastMedicalCheckUp!=null?Helper.getDateFormat().format(this.dateOfLastMedicalCheckUp):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.isFrequentFlyer!=null?this.isFrequentFlyer:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.frequentFlyerComment!=null?this.frequentFlyerComment:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+14;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "dateOfBirth";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "deceased";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "dateOfDecease";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "sex";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = SicsCountryReference.class;
            info.name = "countryOfBirth";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = SicsCountryReference.class;
            info.name = "nationality";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "occupation";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "profession";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "position";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = SicsMonetaryAmountReference.class;
            info.name = "income";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "classificationOfOccupation";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "dateOfLastMedicalCheckUp";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isFrequentFlyer";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "frequentFlyerComment";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

