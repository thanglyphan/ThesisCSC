package SicsWsAdministrationEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 29/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class CommonInstalmentAdjustmentInput extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Mimics gui menu choice "Cancel and Remove All Instalments on All Sections".
	*                    The "itemTobBookList" element should not be included when this element is included.
	*                    
	*                    If this element is included it should be set to true. (If it is set to false no 
	*                    action will be taken at all).
	*                    
	*                    This element cannot be used for the bookAdjustment or bookSpecialAcceptancePremiums web service.
	*/
    public Boolean cancelAndRemoveAllInstalmentsOnAllSections;
    
	/**
	* Mimics gui menu choice "Cancel and Remove Selected Instalments".
	*                    The Instalments which are need to be cancelled are to be given in itemToBookList.
	*                    
	*                    If this element is included it should be set to true. (If it is set to false no 
	*                    action will be taken at all even if the "worksheetStatus" element is specified.).
	*                    
	*                    This element cannot be used for the bookAdjustment or bookSpecialAcceptancePremiums web service.
	*/
    public Boolean cancelAndRemoveSelectedInstalments;
    
	/**
	* Mimics gui menu choice "Auto Reverse All Instalments on All Sections".
	*                    This element cannot be used for the bookAdjustment or bookSpecialAcceptancePremiums web service.
	*/
    public Boolean reverseAllInstalmentsOnAllSections;
    
	/**
	* Mimics gui menu choice "Auto Reverse Selected Instalments".
	*                    This element cannot be used for the bookAdjustment or bookSpecialAcceptancePremiums web service.
	*/
    public Boolean reverseSelectedInstalment;
    
    public SicsScopeOfCoverReference scopeOfCoverReference;
    
    public SicsInsuredPeriodReference linkInsuredPeriodToProtectedBusiness;
    
    public SicsAmendmentForConditionReference amendmentReference;
    
	/**
	* SubclassNumber: 168. SicsRefWorksheetStatus. O (Open) or C (Closed)
	*                 
	*                 Used to invoke the functionality behind the menu choices "Book Selected Instalments" or
	*                 "Book and Close Selected Instalments" for instalments or the menu choices
	*                 "Book Selected Items" or "Book and Close Selected Items" for adjustments.
	*                 
	*                 If set to "C" (Closed) the "Book and Close Selected Instalments" (Adjustments: 
	*                 "Book and Close Selected Items") is invoked.
	*                 
	*                 If set to "O" (Open) the "Book Selected Instalments" (Adjustments: "Book Selected Items")
	*                 is invoked.
	*                 
	*                 This element should not be used if the elements "cancelAndRemoveAllInstalmentsOnAllSections"
	*                 or "cancelAndRemoveSelectedInstalments" are included.
	*/
    public SicsReferenceDataReference worksheetStatus;
    
	/**
	* SubclassNumber: 220. SicsRefOriginOfWorksheet.
	*                 Origin of Worksheet
	*/
    public SicsReferenceDataReference origin;
    
	/**
	* Used to specify the instalments or adjustments to be processed. 
	*                 Should not be included if "cancelAndRemoveAllInstalmentsOnAllSections" is set to true.
	*/
    public InstalmentAdjustmentToBookList itemToBookList;
    
	/**
	* If this element is present and is true then bookings will be split per Accounting Classification Percent.
	*                       If this element is not present (or set to false) the value of the system parameter 
	*                       "Default Bookings to be Split per Accounting Classification Percent" will be considered
	*/
    public Boolean bookingsToBeSplitPerAccountingClassificationPercent;

    public CommonInstalmentAdjustmentInput ()
    {
    }

    public CommonInstalmentAdjustmentInput (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("cancelAndRemoveAllInstalmentsOnAllSections"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cancelAndRemoveAllInstalmentsOnAllSections = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.cancelAndRemoveAllInstalmentsOnAllSections = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("cancelAndRemoveSelectedInstalments"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.cancelAndRemoveSelectedInstalments = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.cancelAndRemoveSelectedInstalments = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reverseAllInstalmentsOnAllSections"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.reverseAllInstalmentsOnAllSections = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.reverseAllInstalmentsOnAllSections = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("reverseSelectedInstalment"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.reverseSelectedInstalment = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.reverseSelectedInstalment = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("scopeOfCoverReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.scopeOfCoverReference = (SicsScopeOfCoverReference)__envelope.get(j,SicsScopeOfCoverReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("linkInsuredPeriodToProtectedBusiness"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.linkInsuredPeriodToProtectedBusiness = (SicsInsuredPeriodReference)__envelope.get(j,SicsInsuredPeriodReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("amendmentReference"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.amendmentReference = (SicsAmendmentForConditionReference)__envelope.get(j,SicsAmendmentForConditionReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("worksheetStatus"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.worksheetStatus = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("origin"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.origin = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("itemToBookList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.itemToBookList = (InstalmentAdjustmentToBookList)__envelope.get(j,InstalmentAdjustmentToBookList.class,false);
                    }
                    continue;
                }
                if (info.name.equals("bookingsToBeSplitPerAccountingClassificationPercent"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.bookingsToBeSplitPerAccountingClassificationPercent = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.bookingsToBeSplitPerAccountingClassificationPercent = (Boolean)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.cancelAndRemoveAllInstalmentsOnAllSections!=null?this.cancelAndRemoveAllInstalmentsOnAllSections:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.cancelAndRemoveSelectedInstalments!=null?this.cancelAndRemoveSelectedInstalments:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.reverseAllInstalmentsOnAllSections!=null?this.reverseAllInstalmentsOnAllSections:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.reverseSelectedInstalment!=null?this.reverseSelectedInstalment:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return scopeOfCoverReference;
        }
        if(propertyIndex==5)
        {
            return this.linkInsuredPeriodToProtectedBusiness!=null?this.linkInsuredPeriodToProtectedBusiness:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.amendmentReference!=null?this.amendmentReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.worksheetStatus!=null?this.worksheetStatus:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==8)
        {
            return this.origin!=null?this.origin:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.itemToBookList!=null?this.itemToBookList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.bookingsToBeSplitPerAccountingClassificationPercent!=null?this.bookingsToBeSplitPerAccountingClassificationPercent:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 11;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "cancelAndRemoveAllInstalmentsOnAllSections";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "cancelAndRemoveSelectedInstalments";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "reverseAllInstalmentsOnAllSections";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "reverseSelectedInstalment";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = SicsScopeOfCoverReference.class;
            info.name = "scopeOfCoverReference";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = SicsInsuredPeriodReference.class;
            info.name = "linkInsuredPeriodToProtectedBusiness";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = SicsAmendmentForConditionReference.class;
            info.name = "amendmentReference";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "worksheetStatus";
            info.namespace= "";
        }
        if(propertyIndex==8)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "origin";
            info.namespace= "";
        }
        if(propertyIndex==9)
        {
            info.type = InstalmentAdjustmentToBookList.class;
            info.name = "itemToBookList";
            info.namespace= "";
        }
        if(propertyIndex==10)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "bookingsToBeSplitPerAccountingClassificationPercent";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

