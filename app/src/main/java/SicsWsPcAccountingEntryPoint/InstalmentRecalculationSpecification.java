package SicsWsPcAccountingEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 30/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class InstalmentRecalculationSpecification extends AttributeContainer implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Indicate whether the instalments should be split proportional. 
	*                Split Proportional
	*/
    public Boolean isSplitProportional;
    
	/**
	* Additional / Return Premium from Amendments
	*/
    public Boolean isAdditionalReturnPremium;
    
	/**
	* Specify the instalment condition and single instalments for (for each currency).
	*/
    public ArrayList< InstalmentSpecificationForShare> instalmentSpecification =new ArrayList<InstalmentSpecificationForShare >();

    public InstalmentRecalculationSpecification ()
    {
    }

    public InstalmentRecalculationSpecification (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("isSplitProportional"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isSplitProportional = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isSplitProportional = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAdditionalReturnPremium"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAdditionalReturnPremium = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAdditionalReturnPremium = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("instalmentSpecification"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.instalmentSpecification==null)
                        {
                            this.instalmentSpecification = new ArrayList< InstalmentSpecificationForShare>();
                        }
                        java.lang.Object j =obj;
                        InstalmentSpecificationForShare j1= (InstalmentSpecificationForShare)__envelope.get(j,InstalmentSpecificationForShare.class,false);
                        this.instalmentSpecification.add(j1);
                   
        
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.isSplitProportional!=null?this.isSplitProportional:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.isAdditionalReturnPremium!=null?this.isAdditionalReturnPremium:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=2 && propertyIndex < 2+this.instalmentSpecification.size())
        {
            return this.instalmentSpecification.get(propertyIndex-(2));
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 2+instalmentSpecification.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isSplitProportional";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAdditionalReturnPremium";
            info.namespace= "";
        }
        if(propertyIndex>=2 && propertyIndex < 2+this.instalmentSpecification.size())
        {
            info.type = InstalmentSpecificationForShare.class;
            info.name = "instalmentSpecification";
            info.namespace= "";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

