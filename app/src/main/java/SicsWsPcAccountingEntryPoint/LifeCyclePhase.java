package SicsWsPcAccountingEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 30/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class LifeCyclePhase extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
    public Integer layerNumber;
    
    public Integer surplusNumber;
    
    public ArrayList< LifeCycleStatus> lifeCycleStatus =new ArrayList<LifeCycleStatus >();
    
    public ScopeOfCover scopeOfCover;
    
	/**
	* Currently only supported in domainRetrieval.
	*/
    public ArrayList< Amendment> amendment =new ArrayList<Amendment >();
    
	/**
	* For Domain Retrieval only
	*/
    public Boolean isCurrent;
    
	/**
	* For domain retrieval only
	*                      Registration Complete
	*/
    public Boolean isRegistrationComplete;
    
	/**
	* For domain retrieval only
	*                      Complete Updated By
	*/
    public SicsUserReference registrationCompleteUpdatedBy;
    
	/**
	* For domain retrieval only
	*                      Complete Updated Date
	*/
    public java.util.Date registrationCompleteUpdatedDate;

    public LifeCyclePhase ()
    {
    }

    public LifeCyclePhase (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("layerNumber"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.layerNumber = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.layerNumber = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("surplusNumber"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.surplusNumber = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.surplusNumber = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("lifeCycleStatus"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.lifeCycleStatus==null)
                        {
                            this.lifeCycleStatus = new ArrayList< LifeCycleStatus>();
                        }
                        java.lang.Object j =obj;
                        LifeCycleStatus j1= (LifeCycleStatus)__envelope.get(j,LifeCycleStatus.class,false);
                        this.lifeCycleStatus.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("scopeOfCover"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.scopeOfCover = (ScopeOfCover)__envelope.get(j,ScopeOfCover.class,false);
                    }
                    continue;
                }
                if (info.name.equals("amendment"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.amendment==null)
                        {
                            this.amendment = new ArrayList< Amendment>();
                        }
                        java.lang.Object j =obj;
                        Amendment j1= (Amendment)__envelope.get(j,Amendment.class,false);
                        this.amendment.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("isCurrent"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isCurrent = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isCurrent = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isRegistrationComplete"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isRegistrationComplete = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isRegistrationComplete = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("registrationCompleteUpdatedBy"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.registrationCompleteUpdatedBy = (SicsUserReference)__envelope.get(j,SicsUserReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("registrationCompleteUpdatedDate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.registrationCompleteUpdatedDate = Helper.ConvertFromWebService(j.toString());
                            }
                        }
                        else if (obj instanceof java.util.Date){
                            this.registrationCompleteUpdatedDate = (java.util.Date)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.layerNumber!=null?this.layerNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.surplusNumber!=null?this.surplusNumber:SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=count+2 && propertyIndex < count+2+this.lifeCycleStatus.size())
        {
            return this.lifeCycleStatus.get(propertyIndex-(count+2));
        }
        if(propertyIndex==count+2+this.lifeCycleStatus.size())
        {
            return scopeOfCover;
        }
        if(propertyIndex>=count+3+this.lifeCycleStatus.size() && propertyIndex < count+3+this.lifeCycleStatus.size()+this.amendment.size())
        {
            return this.amendment.get(propertyIndex-(count+3+this.lifeCycleStatus.size()));
        }
        if(propertyIndex==count+3+this.lifeCycleStatus.size()+this.amendment.size())
        {
            return this.isCurrent!=null?this.isCurrent:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4+this.lifeCycleStatus.size()+this.amendment.size())
        {
            return this.isRegistrationComplete!=null?this.isRegistrationComplete:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5+this.lifeCycleStatus.size()+this.amendment.size())
        {
            return this.registrationCompleteUpdatedBy!=null?this.registrationCompleteUpdatedBy:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6+this.lifeCycleStatus.size()+this.amendment.size())
        {
            return this.registrationCompleteUpdatedDate!=null?Helper.getDateFormat().format(this.registrationCompleteUpdatedDate):SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+7+lifeCycleStatus.size()+amendment.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "layerNumber";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "surplusNumber";
            info.namespace= "";
        }
        if(propertyIndex>=count+2 && propertyIndex < count+2+this.lifeCycleStatus.size())
        {
            info.type = LifeCycleStatus.class;
            info.name = "lifeCycleStatus";
            info.namespace= "";
        }
        if(propertyIndex==count+2+this.lifeCycleStatus.size())
        {
            info.type = ScopeOfCover.class;
            info.name = "scopeOfCover";
            info.namespace= "";
        }
        if(propertyIndex>=count+3+this.lifeCycleStatus.size() && propertyIndex < count+3+this.lifeCycleStatus.size()+this.amendment.size())
        {
            info.type = Amendment.class;
            info.name = "amendment";
            info.namespace= "";
        }
        if(propertyIndex==count+3+this.lifeCycleStatus.size()+this.amendment.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isCurrent";
            info.namespace= "";
        }
        if(propertyIndex==count+4+this.lifeCycleStatus.size()+this.amendment.size())
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isRegistrationComplete";
            info.namespace= "";
        }
        if(propertyIndex==count+5+this.lifeCycleStatus.size()+this.amendment.size())
        {
            info.type = SicsUserReference.class;
            info.name = "registrationCompleteUpdatedBy";
            info.namespace= "";
        }
        if(propertyIndex==count+6+this.lifeCycleStatus.size()+this.amendment.size())
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "registrationCompleteUpdatedDate";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

