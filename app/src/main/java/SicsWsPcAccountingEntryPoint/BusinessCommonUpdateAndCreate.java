package SicsWsPcAccountingEntryPoint;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.1.8
//
// Created by Quasar Development at 30/01/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.math.BigDecimal;

public class BusinessCommonUpdateAndCreate extends DomainObject implements KvmSerializable,java.io.Serializable
{

    
	/**
	* Optional in P and C and GR, mandatory in Life
	*/
    public String title;
    
	/**
	* SubclassNumber: 225. SicsRefAccountGroup
	*                   Not to be used for Cedent Program.
	*/
    public SicsReferenceDataReference accountGroup;
    
	/**
	* Former ID
	*/
    public String formerIdentifier;
    
	/**
	* ID Notes
	*/
    public String idNotes;
    
    public String externalBusinessIdentifier;
    
    public String externalName;
    
    public Boolean isSingleRetrocession;
    
    public SicsCurrencyReference functionalCurrency;
    
    public SicsCurrencyReference functionalCurrency2;
    
	/**
	* SubclassNumber: 1116. SicsRefExchangeRateCategory
	*/
    public SicsReferenceDataReference exchangeRateCategoryForPremium;
    
	/**
	* SubclassNumber: 1116. SicsRefExchangeRateCategory
	*/
    public SicsReferenceDataReference exchangeRateCategoryForClaim;
    
    public Boolean isCeaseAccounting;
    
    public Boolean isEdiGeneralCover;
    
    public Boolean isAllocationOfExternalBPToBalance;
    
    public Boolean isToBeIncludedInStatement;
    
    public Boolean worksheetClosingSecurityLimitation;
    
    public Boolean traceAssumedFromOutwardBookings;
    
    public Boolean traceClaimFromOutwardBookings;
    
    public Boolean traceHeadlineLossFromOutwardBookings;
    
    public Boolean isAllocationRecipientToBalance;
    
	/**
	* SubclassNumber: 1076. SicsRefCeaseAccountingDescription
	*                      For IAB and ORP level of business only
	*/
    public SicsReferenceDataReference ceaseAccountingDescription;
    
	/**
	* Radio button Flat Based Premium in Premium Basis Window
	*                      Flat Based Premium
	*/
    public Boolean isFlatBased;
    
	/**
	* Radio button Cash Based Premium in Premium Basis Window
	*                      Cash Based Premium
	*/
    public Boolean isCashBased;
    
	/**
	* Radio button Proportional Based Premium in Premium Basis Window
	*                      Proportional Based Premium
	*/
    public Boolean isProportionalBased;
    
	/**
	* Radio button Review Required in Business Accounting Info Window
	*                      Review Required
	*/
    public Boolean isAccountingReviewRequired;
    
	/**
	* Radio button Review Complete in Business Accounting Info Window
	*                      Review Complete
	*/
    public Boolean isAccountingReviewComplete;
    
	/**
	* SubclassNumber: 1150. SicsRefAccountingReviewType
	*/
    public SicsReferenceDataReference accountingReviewType;
    
	/**
	* Only available for Business Direction Joint Contract
	*/
    public SicsBusinessStampReference businessStamp;
    
	/**
	* Valid for Administrative Direct Businesses
	*                      MGU
	*/
    public Boolean isMGUBusiness;
    
    public BusinessSignatureNoteList businessSignatureNoteList;
    
	/**
	* Valid for Assumed Businesses
	*                      Non-Liquid Tax on Interest
	*/
    public BigDecimal nonLiquidTaxOnInterest;

    public BusinessCommonUpdateAndCreate ()
    {
    }

    public BusinessCommonUpdateAndCreate (java.lang.Object paramObj,ExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                java.lang.Object obj = info.getValue(); 
                if (info.name.equals("title"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.title = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.title = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("accountGroup"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountGroup = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("formerIdentifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.formerIdentifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.formerIdentifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("idNotes"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.idNotes = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.idNotes = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("externalBusinessIdentifier"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.externalBusinessIdentifier = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.externalBusinessIdentifier = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("externalName"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.externalName = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.externalName = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isSingleRetrocession"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isSingleRetrocession = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isSingleRetrocession = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("functionalCurrency"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.functionalCurrency = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("functionalCurrency2"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.functionalCurrency2 = (SicsCurrencyReference)__envelope.get(j,SicsCurrencyReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("exchangeRateCategoryForPremium"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.exchangeRateCategoryForPremium = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("exchangeRateCategoryForClaim"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.exchangeRateCategoryForClaim = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isCeaseAccounting"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isCeaseAccounting = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isCeaseAccounting = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isEdiGeneralCover"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isEdiGeneralCover = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isEdiGeneralCover = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAllocationOfExternalBPToBalance"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAllocationOfExternalBPToBalance = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAllocationOfExternalBPToBalance = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isToBeIncludedInStatement"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isToBeIncludedInStatement = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isToBeIncludedInStatement = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("worksheetClosingSecurityLimitation"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.worksheetClosingSecurityLimitation = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.worksheetClosingSecurityLimitation = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("traceAssumedFromOutwardBookings"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.traceAssumedFromOutwardBookings = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.traceAssumedFromOutwardBookings = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("traceClaimFromOutwardBookings"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.traceClaimFromOutwardBookings = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.traceClaimFromOutwardBookings = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("traceHeadlineLossFromOutwardBookings"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.traceHeadlineLossFromOutwardBookings = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.traceHeadlineLossFromOutwardBookings = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAllocationRecipientToBalance"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAllocationRecipientToBalance = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAllocationRecipientToBalance = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("ceaseAccountingDescription"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.ceaseAccountingDescription = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isFlatBased"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isFlatBased = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isFlatBased = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isCashBased"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isCashBased = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isCashBased = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isProportionalBased"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isProportionalBased = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isProportionalBased = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAccountingReviewRequired"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAccountingReviewRequired = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAccountingReviewRequired = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("isAccountingReviewComplete"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isAccountingReviewComplete = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isAccountingReviewComplete = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("accountingReviewType"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.accountingReviewType = (SicsReferenceDataReference)__envelope.get(j,SicsReferenceDataReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("businessStamp"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.businessStamp = (SicsBusinessStampReference)__envelope.get(j,SicsBusinessStampReference.class,false);
                    }
                    continue;
                }
                if (info.name.equals("isMGUBusiness"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.isMGUBusiness = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.isMGUBusiness = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("businessSignatureNoteList"))
                {
                    if(obj!=null)
                    {
                        java.lang.Object j = obj;
                        this.businessSignatureNoteList = new BusinessSignatureNoteList(j,__envelope);
                    }
                    continue;
                }
                if (info.name.equals("nonLiquidTaxOnInterest"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.nonLiquidTaxOnInterest = new BigDecimal(j.toString());
                            }
                        }
                        else if (obj instanceof BigDecimal){
                            this.nonLiquidTaxOnInterest = (BigDecimal)obj;
                        }
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.title!=null?this.title:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.accountGroup!=null?this.accountGroup:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.formerIdentifier!=null?this.formerIdentifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.idNotes!=null?this.idNotes:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.externalBusinessIdentifier!=null?this.externalBusinessIdentifier:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.externalName!=null?this.externalName:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+6)
        {
            return this.isSingleRetrocession!=null?this.isSingleRetrocession:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+7)
        {
            return this.functionalCurrency!=null?this.functionalCurrency:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+8)
        {
            return this.functionalCurrency2!=null?this.functionalCurrency2:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+9)
        {
            return this.exchangeRateCategoryForPremium!=null?this.exchangeRateCategoryForPremium:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+10)
        {
            return this.exchangeRateCategoryForClaim!=null?this.exchangeRateCategoryForClaim:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+11)
        {
            return this.isCeaseAccounting!=null?this.isCeaseAccounting:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+12)
        {
            return this.isEdiGeneralCover!=null?this.isEdiGeneralCover:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+13)
        {
            return this.isAllocationOfExternalBPToBalance!=null?this.isAllocationOfExternalBPToBalance:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+14)
        {
            return this.isToBeIncludedInStatement!=null?this.isToBeIncludedInStatement:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+15)
        {
            return this.worksheetClosingSecurityLimitation!=null?this.worksheetClosingSecurityLimitation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+16)
        {
            return this.traceAssumedFromOutwardBookings!=null?this.traceAssumedFromOutwardBookings:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+17)
        {
            return this.traceClaimFromOutwardBookings!=null?this.traceClaimFromOutwardBookings:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+18)
        {
            return this.traceHeadlineLossFromOutwardBookings!=null?this.traceHeadlineLossFromOutwardBookings:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+19)
        {
            return this.isAllocationRecipientToBalance!=null?this.isAllocationRecipientToBalance:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+20)
        {
            return this.ceaseAccountingDescription!=null?this.ceaseAccountingDescription:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+21)
        {
            return this.isFlatBased!=null?this.isFlatBased:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+22)
        {
            return this.isCashBased!=null?this.isCashBased:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+23)
        {
            return this.isProportionalBased!=null?this.isProportionalBased:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+24)
        {
            return this.isAccountingReviewRequired!=null?this.isAccountingReviewRequired:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+25)
        {
            return this.isAccountingReviewComplete!=null?this.isAccountingReviewComplete:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+26)
        {
            return this.accountingReviewType!=null?this.accountingReviewType:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+27)
        {
            return this.businessStamp!=null?this.businessStamp:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+28)
        {
            return this.isMGUBusiness!=null?this.isMGUBusiness:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+29)
        {
            return this.businessSignatureNoteList!=null?this.businessSignatureNoteList:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+30)
        {
            return this.nonLiquidTaxOnInterest!=null?this.nonLiquidTaxOnInterest.toString():SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+31;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "title";
            info.namespace= "";
        }
        if(propertyIndex==count+1)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "accountGroup";
            info.namespace= "";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "formerIdentifier";
            info.namespace= "";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "idNotes";
            info.namespace= "";
        }
        if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "externalBusinessIdentifier";
            info.namespace= "";
        }
        if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "externalName";
            info.namespace= "";
        }
        if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isSingleRetrocession";
            info.namespace= "";
        }
        if(propertyIndex==count+7)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "functionalCurrency";
            info.namespace= "";
        }
        if(propertyIndex==count+8)
        {
            info.type = SicsCurrencyReference.class;
            info.name = "functionalCurrency2";
            info.namespace= "";
        }
        if(propertyIndex==count+9)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "exchangeRateCategoryForPremium";
            info.namespace= "";
        }
        if(propertyIndex==count+10)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "exchangeRateCategoryForClaim";
            info.namespace= "";
        }
        if(propertyIndex==count+11)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isCeaseAccounting";
            info.namespace= "";
        }
        if(propertyIndex==count+12)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isEdiGeneralCover";
            info.namespace= "";
        }
        if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAllocationOfExternalBPToBalance";
            info.namespace= "";
        }
        if(propertyIndex==count+14)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isToBeIncludedInStatement";
            info.namespace= "";
        }
        if(propertyIndex==count+15)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "worksheetClosingSecurityLimitation";
            info.namespace= "";
        }
        if(propertyIndex==count+16)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "traceAssumedFromOutwardBookings";
            info.namespace= "";
        }
        if(propertyIndex==count+17)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "traceClaimFromOutwardBookings";
            info.namespace= "";
        }
        if(propertyIndex==count+18)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "traceHeadlineLossFromOutwardBookings";
            info.namespace= "";
        }
        if(propertyIndex==count+19)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAllocationRecipientToBalance";
            info.namespace= "";
        }
        if(propertyIndex==count+20)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "ceaseAccountingDescription";
            info.namespace= "";
        }
        if(propertyIndex==count+21)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isFlatBased";
            info.namespace= "";
        }
        if(propertyIndex==count+22)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isCashBased";
            info.namespace= "";
        }
        if(propertyIndex==count+23)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isProportionalBased";
            info.namespace= "";
        }
        if(propertyIndex==count+24)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAccountingReviewRequired";
            info.namespace= "";
        }
        if(propertyIndex==count+25)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isAccountingReviewComplete";
            info.namespace= "";
        }
        if(propertyIndex==count+26)
        {
            info.type = SicsReferenceDataReference.class;
            info.name = "accountingReviewType";
            info.namespace= "";
        }
        if(propertyIndex==count+27)
        {
            info.type = SicsBusinessStampReference.class;
            info.name = "businessStamp";
            info.namespace= "";
        }
        if(propertyIndex==count+28)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "isMGUBusiness";
            info.namespace= "";
        }
        if(propertyIndex==count+29)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "businessSignatureNoteList";
            info.namespace= "";
        }
        if(propertyIndex==count+30)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "nonLiquidTaxOnInterest";
            info.namespace= "";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}

